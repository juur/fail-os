!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	ahci.c	/^	int A:1;$/;"	m	struct:CommandHeader	file:
ACMD	ahci.c	/^	uint8_t	ACMD[16];$/;"	m	struct:CommandTable	file:
ACPIFADT	acpi.h	/^struct ACPIFADT {$/;"	s
ACPIHPET	acpi.h	/^struct ACPIHPET {$/;"	s
ACPIMADT	acpi.h	/^struct ACPIMADT {$/;"	s
ACPIRSDT	acpi.h	/^struct ACPIRSDT {$/;"	s
ACPISDTHeader	acpi.h	/^struct ACPISDTHeader {$/;"	s
ACPIXSDT	acpi.h	/^struct ACPIXSDT {$/;"	s
ADD_NO_FCS	pcnet.h	/^	unsigned ADD_NO_FCS:1;	\/\/ 29$/;"	m	struct:pcnet_tx_16
ADD_NO_FCS	pcnet.h	/^	unsigned ADD_NO_FCS:1;	\/\/ 29$/;"	m	struct:pcnet_tx_32
AF_INET	ip.h	50;"	d
ALPE	ahci.c	/^	unsigned ALPE:1;$/;"	m	struct:_PxCMD	file:
APIC_BASE	cpu.h	417;"	d
APICbar	cpu.h	/^} __attribute__((packed)) APICbar;$/;"	t	typeref:union:__anon15
APP_CPPFLAGS	Makefile	/^APP_CPPFLAGS	:= -I..\/..\/fail-libc\/include$/;"	m
APSTE	ahci.c	/^	unsigned APSTE:1;$/;"	m	struct:_PxCMD	file:
ARCH_GET_FS	syscall.h	52;"	d
ARCH_GET_GS	syscall.h	53;"	d
ARCH_SET_FS	syscall.h	51;"	d
ARCH_SET_GS	syscall.h	50;"	d
ARP_REPLY	arp.h	34;"	d
ARP_REQUEST	arp.h	33;"	d
ASMOBJS	Makefile	/^ASMOBJS	:=mboot.o mboot_hdr.o intr.o$/;"	m
ASP	ahci.c	/^	unsigned ASP:1;$/;"	m	struct:_PxCMD	file:
ATAPI	ahci.c	/^	unsigned ATAPI:1;$/;"	m	struct:_PxCMD	file:
B	ahci.c	/^	int B:1;$/;"	m	struct:CommandHeader	file:
BCD_BIN	cpu.c	295;"	d	file:
BCNT	pcnet.h	/^	uint16_t BCNT:12;		\/\/ 00 - 11$/;"	m	struct:pcnet_rx_16
BCNT	pcnet.h	/^	uint16_t BCNT:12;		\/\/ 00 - 11$/;"	m	struct:pcnet_tx_16
BCNT	pcnet.h	/^	uint16_t BCNT:12;		\/\/ 00 - 11$/;"	m	struct:pcnet_tx_32
BCNT	pcnet.h	/^	unsigned BCNT:12;		\/\/ 00 - 11$/;"	m	struct:pcnet_rx_32
BCR2_ASEL	pcnet.h	178;"	d
BCR2_INTLEVEL	pcnet.h	179;"	d
BDP	pcnet.h	10;"	d
BIG_PAGE_SIZE	proc.h	11;"	d
BIO_BIGBUF	block.c	32;"	d	file:
BIO_BIGSEC	block.c	34;"	d	file:
BIO_CLEAN	block.c	33;"	d	file:
BIO_DONE	block.c	35;"	d	file:
BIO_ERROR	block.c	36;"	d	file:
BIO_READ	block.c	30;"	d	file:
BIO_WRITE	block.c	31;"	d	file:
BIT_INDEX	klibc.h	42;"	d
BIT_OFFSET	klibc.h	43;"	d
BMIC_PRI	ide.h	25;"	d
BMIC_SEC	ide.h	28;"	d
BMIDTP_PRI	ide.h	27;"	d
BMIDTP_SEC	ide.h	30;"	d
BMIS_PRI	ide.h	26;"	d
BMIS_SEC	ide.h	29;"	d
BOCH	ahci.c	/^struct BOCH {$/;"	s	file:
BOHC	ahci.c	/^	uint32_t	BOHC;$/;"	m	struct:GHC	file:
BUFF	pcnet.h	/^	unsigned BUFF:1;		\/\/ 26$/;"	m	struct:pcnet_rx_16
BUFF	pcnet.h	/^	unsigned BUFF:1;		\/\/ 26$/;"	m	struct:pcnet_rx_32
BUFF	pcnet.h	/^	unsigned BUFF:1;		\/\/ 31$/;"	m	struct:pcnet_tx_16
BUFF	pcnet.h	/^	unsigned BUFF:1;		\/\/ 31$/;"	m	struct:pcnet_tx_32
BUF_SIZE	pcnet.c	193;"	d	file:
BUSY_STAT	ide.h	63;"	d
C	ahci.c	/^	int C:1;$/;"	m	struct:CommandHeader	file:
CAP	ahci.c	/^	} CAP;$/;"	m	struct:GHC	typeref:union:GHC::__anon11	file:
CAP2	ahci.c	/^	uint32_t	CAP2;$/;"	m	struct:GHC	file:
CAP2_BOH	ahci.c	168;"	d	file:
CC	Makefile	/^CC		:= gcc$/;"	m
CCCS	ahci.c	/^	int	CCCS:1;$/;"	m	struct:_CAP	file:
CCC_CTL	ahci.c	/^	uint32_t	CCC_CTL;$/;"	m	struct:GHC	file:
CCC_PORTS	ahci.c	/^	uint32_t	CCC_PORTS;$/;"	m	struct:GHC	file:
CCS	ahci.c	/^	unsigned CCS:5;$/;"	m	struct:_PxCMD	file:
CFIS	ahci.c	/^	uint8_t	CFIS[64];$/;"	m	struct:CommandTable	file:
CFL	ahci.c	/^	int	CFL:4;$/;"	m	struct:CommandHeader	file:
CFLAGS	Makefile	/^CFLAGS		:= -ggdb3 -ffreestanding -nostdlib -nostdinc -std=c11 \\$/;"	m
CHECK_FLAG	mboot.h	83;"	d
CLO	ahci.c	/^	unsigned CLO:1;$/;"	m	struct:_PxCMD	file:
CLONE_TASK	proc.h	119;"	d
CLOSED	tcp.h	57;"	d
CLOSE_WAIT	tcp.h	66;"	d
CLOSING	tcp.h	64;"	d
CMD_CYL_HI	ide.h	50;"	d
CMD_CYL_LOW	ide.h	49;"	d
CMD_DATA	ide.h	45;"	d
CMD_ERR_FEAT	ide.h	46;"	d
CMD_HEAD	ide.h	51;"	d
CMD_SEC_CNT	ide.h	47;"	d
CMD_SEC_NUM	ide.h	48;"	d
CMD_STAT_CMD	ide.h	52;"	d
COBJS	Makefile	/^COBJS	:=acpi.o tcp.o cpu.o frame.o mem.o init.o ip.o net.o klibc.o dev.o \\$/;"	m
COM1	dev.h	8;"	d
COM2	dev.h	9;"	d
COM3	dev.h	10;"	d
COM4	dev.h	11;"	d
CON_BUFF	dev.h	137;"	d
CON_BUFFER_SIZE	dev.h	103;"	d
CON_MAJOR	dev.h	101;"	d
CON_MINOR	dev.h	102;"	d
CON_STATUS	ide.h	54;"	d
CPD	ahci.c	/^	unsigned CPD:1;$/;"	m	struct:_PxCMD	file:
CPL_0	cpu.h	154;"	d
CPL_1	cpu.h	155;"	d
CPL_2	cpu.h	156;"	d
CPL_3	cpu.h	157;"	d
CPPFLAGS	Makefile	/^CPPFLAGS	:= -I.$/;"	m
CPS	ahci.c	/^	unsigned CPS:1;$/;"	m	struct:_PxCMD	file:
CPUE_AC	cpu.h	56;"	d
CPUE_BP	cpu.h	44;"	d
CPUE_BR	cpu.h	46;"	d
CPUE_CP	cpu.h	60;"	d
CPUE_DB	cpu.h	42;"	d
CPUE_DE	cpu.h	41;"	d
CPUE_DF	cpu.h	49;"	d
CPUE_GP	cpu.h	53;"	d
CPUE_MC	cpu.h	57;"	d
CPUE_MF	cpu.h	55;"	d
CPUE_NM	cpu.h	48;"	d
CPUE_NMI	cpu.h	43;"	d
CPUE_NP	cpu.h	51;"	d
CPUE_OF	cpu.h	45;"	d
CPUE_PF	cpu.h	54;"	d
CPUE_SF	cpu.h	61;"	d
CPUE_SS	cpu.h	52;"	d
CPUE_TS	cpu.h	50;"	d
CPUE_UD	cpu.h	47;"	d
CPUE_VE	cpu.h	59;"	d
CPUE_XM	cpu.h	58;"	d
CPUID_1GBPG	init.c	689;"	d	file:
CR	ahci.c	/^	unsigned CR:1;$/;"	m	struct:_PxCMD	file:
CR0_AM	cpu.h	71;"	d
CR0_CD	cpu.h	73;"	d
CR0_EM	cpu.h	66;"	d
CR0_ET	cpu.h	68;"	d
CR0_MP	cpu.h	65;"	d
CR0_NE	cpu.h	69;"	d
CR0_NW	cpu.h	72;"	d
CR0_PE	cpu.h	64;"	d
CR0_PG	cpu.h	74;"	d
CR0_PG	mboot.S	/^CR0_PG		equ	31$/;"	d
CR0_TS	cpu.h	67;"	d
CR0_WP	cpu.h	70;"	d
CR4_DE	cpu.h	80;"	d
CR4_FSGSBASE	cpu.h	92;"	d
CR4_LA57	cpu.h	89;"	d
CR4_MCE	cpu.h	83;"	d
CR4_OSFXSR	cpu.h	86;"	d
CR4_OSXMMEXCPT	cpu.h	87;"	d
CR4_OSXSAVE	cpu.h	94;"	d
CR4_PAE	cpu.h	82;"	d
CR4_PAE	mboot.S	/^CR4_PAE		equ	5$/;"	d
CR4_PCE	cpu.h	85;"	d
CR4_PCIDE	cpu.h	93;"	d
CR4_PGE	cpu.h	84;"	d
CR4_PKE	cpu.h	97;"	d
CR4_PSE	cpu.h	81;"	d
CR4_PVI	cpu.h	78;"	d
CR4_SMAP	cpu.h	96;"	d
CR4_SMEP	cpu.h	95;"	d
CR4_SMXE	cpu.h	91;"	d
CR4_TSD	cpu.h	79;"	d
CR4_UMIP	cpu.h	88;"	d
CR4_VME	cpu.h	77;"	d
CR4_VMXE	cpu.h	90;"	d
CRC	pcnet.h	/^	unsigned CRC:1;		\/\/ 27$/;"	m	struct:pcnet_rx_16
CRC	pcnet.h	/^	unsigned CRC:1;		\/\/ 27$/;"	m	struct:pcnet_rx_32
CSR0_IDON	pcnet.h	145;"	d
CSR0_IENA	pcnet.h	143;"	d
CSR0_INIT	pcnet.h	137;"	d
CSR0_INTR	pcnet.h	144;"	d
CSR0_RINT	pcnet.h	146;"	d
CSR0_RXON	pcnet.h	142;"	d
CSR0_STOP	pcnet.h	139;"	d
CSR0_STRT	pcnet.h	138;"	d
CSR0_TDMD	pcnet.h	140;"	d
CSR0_TXON	pcnet.h	141;"	d
CSR15_PROMISC	pcnet.h	173;"	d
CSR15_mode	pcnet.h	/^struct CSR15_mode {$/;"	s
CSR3_ALL_INTS	pcnet.h	154;"	d
CSR3_BABLM	pcnet.h	148;"	d
CSR3_IDONM	pcnet.h	153;"	d
CSR3_MERRM	pcnet.h	150;"	d
CSR3_MISSM	pcnet.h	149;"	d
CSR3_RINTM	pcnet.h	151;"	d
CSR3_TINTM	pcnet.h	152;"	d
CSR4_ALL_INTS	pcnet.h	164;"	d
CSR4_APAD_XMIT	pcnet.h	158;"	d
CSR4_ASTRP_RCV	pcnet.h	159;"	d
CSR4_DMA_PLUSA	pcnet.h	157;"	d
CSR4_DPOLL	pcnet.h	156;"	d
CSR4_JABM	pcnet.h	163;"	d
CSR4_MFCOM	pcnet.h	160;"	d
CSR4_RCVCCOM	pcnet.h	161;"	d
CSR4_TXSTRTM	pcnet.h	162;"	d
CSR58_PCNET_PCII	pcnet.h	176;"	d
CSR58_SSIZE32	pcnet.h	175;"	d
CSR5_ALL_INTS	pcnet.h	171;"	d
CSR5_EXDINTE	pcnet.h	169;"	d
CSR5_LTINTE	pcnet.h	166;"	d
CSR5_MPINTE	pcnet.h	170;"	d
CSR5_SINTE	pcnet.h	167;"	d
CSR5_SLPINTE	pcnet.h	168;"	d
CSRCS	Makefile	/^CSRCS	:=$(COBJS:.o=.c)$/;"	m
CTBA	ahci.c	/^	struct CommandTable *CTBA; \/\/ 06-00 reserved$/;"	m	struct:CommandHeader	typeref:struct:CommandHeader::CommandTable	file:
Checksum	acpi.h	/^	uint8_t  Checksum;$/;"	m	struct:ACPISDTHeader
Checksum	acpi.h	/^	uint8_t  Checksum;$/;"	m	struct:RSDPDescriptor20
CommandHeader	ahci.c	/^struct CommandHeader {$/;"	s	file:
CommandTable	ahci.c	/^struct CommandTable {$/;"	s	file:
CreatorID	acpi.h	/^	uint32_t CreatorID;$/;"	m	struct:ACPISDTHeader
CreatorRevision	acpi.h	/^	uint32_t CreatorRevision;$/;"	m	struct:ACPISDTHeader
DAPC	pcnet.h	/^	unsigned DAPC:1;$/;"	m	struct:CSR15_mode
DATA	mboot_hdr.S	/^DATA		equ data_end$/;"	d
DBA	ahci.c	/^	uint64_t	DBA;$/;"	m	struct:PRDT	file:
DBC	ahci.c	/^	uint32_t	DBC:22;$/;"	m	struct:PRDT	file:
DEF	pcnet.h	/^	unsigned DEF:1;		\/\/ 26$/;"	m	struct:pcnet_tx_16
DEF	pcnet.h	/^	unsigned DEF:1;		\/\/ 26$/;"	m	struct:pcnet_tx_32
DESC_LEN	mem.h	12;"	d
DESTDIR	Makefile	/^DESTDIR	:=$/;"	m
DEVNAME	dev.h	120;"	d
DEV_BLOCK	dev.h	94;"	d
DEV_CHAR	dev.h	95;"	d
DEV_ETH	dev.h	99;"	d
DEV_FS	dev.h	96;"	d
DEV_ID	dev.h	112;"	d
DEV_MAJOR	dev.h	113;"	d
DEV_MINOR	dev.h	114;"	d
DEV_NET	dev.h	97;"	d
DEV_NULL	dev.h	93;"	d
DEV_PROTO	dev.h	98;"	d
DISK_H	disk.h	2;"	d
DLAE	ahci.c	/^	unsigned DLAE:1;$/;"	m	struct:_PxCMD	file:
DLINKTST	pcnet.h	/^	unsigned DLINKTST:1;$/;"	m	struct:CSR15_mode
DO_FORK	task2.c	67;"	d	file:
DRCVBC	pcnet.h	/^	unsigned DRCVBC:1;$/;"	m	struct:CSR15_mode
DRCVPA	pcnet.h	/^	unsigned DRCVPA:1;$/;"	m	struct:CSR15_mode
DRE_COUNT	pcnet.h	12;"	d
DRQ_STAT	ide.h	59;"	d
DRTY	pcnet.h	/^	unsigned DRTY:1;$/;"	m	struct:CSR15_mode
DRX	pcnet.h	/^	unsigned DRX:1;$/;"	m	struct:CSR15_mode
DTX	pcnet.h	/^	unsigned DTX:1;$/;"	m	struct:CSR15_mode
DXMTFCS	pcnet.h	/^	unsigned DXMTFCS:1;$/;"	m	struct:CSR15_mode
E2BIG	klibc.h	86;"	d
E2BIG	libc.h	33;"	d
EACCES	klibc.h	92;"	d
EACCES	libc.h	39;"	d
EAGAIN	klibc.h	90;"	d
EAGAIN	libc.h	37;"	d
EBADF	klibc.h	88;"	d
EBADF	libc.h	35;"	d
EBUSY	klibc.h	95;"	d
EBUSY	libc.h	42;"	d
ECC_STAT	ide.h	58;"	d
ECHILD	klibc.h	89;"	d
ECHILD	libc.h	36;"	d
EDEADLK	klibc.h	115;"	d
EDOM	klibc.h	112;"	d
EDOM	libc.h	59;"	d
EEXIST	klibc.h	96;"	d
EEXIST	libc.h	43;"	d
EFAULT	klibc.h	93;"	d
EFAULT	libc.h	40;"	d
EFBIG	klibc.h	106;"	d
EFBIG	libc.h	53;"	d
EFER_LME	mboot.S	/^EFER_LME	equ	8$/;"	d
EFER_SCE	mboot.S	/^EFER_SCE	equ	0$/;"	d
EINTR	klibc.h	83;"	d
EINTR	libc.h	30;"	d
EINVAL	klibc.h	101;"	d
EINVAL	libc.h	48;"	d
EIO	klibc.h	84;"	d
EIO	libc.h	31;"	d
EISDIR	klibc.h	100;"	d
EISDIR	libc.h	47;"	d
ELFCLASS32	elf64.h	35;"	d
ELFCLASS64	elf64.h	36;"	d
ELFCLASS_MAX	elf64.h	37;"	d
ELFDATA2LSB	elf64.h	49;"	d
ELFDATA2MSB	elf64.h	50;"	d
ELFDATA_MAX	elf64.h	51;"	d
ELFOSABI_HPUX	elf64.h	62;"	d
ELFOSABI_LINUX	elf64.h	63;"	d
ELFOSABI_MAX	elf64.h	64;"	d
ELFOSABI_STANDALONE	elf64.h	65;"	d
ELFOSABI_SYSV	elf64.h	61;"	d
ELFclass	elf64.h	/^const char *ELFclass[ELFCLASS_MAX] = {$/;"	v
ELFdata	elf64.h	/^const char *ELFdata[ELFDATA_MAX] = {$/;"	v
ELFetype	elf64.h	/^const char *ELFetype[ET_MAX] = {$/;"	v
ELFosabi	elf64.h	/^const char *ELFosabi[ELFOSABI_MAX] = {$/;"	v
ELFptype	elf64.h	/^const char *ELFptype[PT_MAX] = {$/;"	v
ELFshtype	elf64.h	/^const char *ELFshtype[SHT_MAX] = {$/;"	v
ELOOP	klibc.h	120;"	d
EMFILE	klibc.h	103;"	d
EMFILE	libc.h	50;"	d
EMLINK	klibc.h	110;"	d
EMLINK	libc.h	57;"	d
EMS	ahci.c	/^	int	EMS:1;$/;"	m	struct:_CAP	file:
EM_CTL	ahci.c	/^	uint32_t	EM_CTL;$/;"	m	struct:GHC	file:
EM_LOC	ahci.c	/^	uint32_t	EM_LOC;$/;"	m	struct:GHC	file:
EM_X86_64	elf64.h	39;"	d
ENAMETOOLONG	klibc.h	116;"	d
ENFILE	klibc.h	102;"	d
ENFILE	libc.h	49;"	d
ENODEV	klibc.h	98;"	d
ENODEV	libc.h	45;"	d
ENOENT	klibc.h	81;"	d
ENOENT	libc.h	28;"	d
ENOEXEC	klibc.h	87;"	d
ENOEXEC	libc.h	34;"	d
ENOLCK	klibc.h	117;"	d
ENOMEM	klibc.h	91;"	d
ENOMEM	libc.h	38;"	d
ENOMSG	klibc.h	121;"	d
ENOSPC	klibc.h	107;"	d
ENOSPC	libc.h	54;"	d
ENOSYS	errno.h	4;"	d
ENOSYS	klibc.h	118;"	d
ENOTBLK	klibc.h	94;"	d
ENOTBLK	libc.h	41;"	d
ENOTDIR	klibc.h	99;"	d
ENOTDIR	libc.h	46;"	d
ENOTEMPTY	klibc.h	119;"	d
ENOTTY	klibc.h	104;"	d
ENOTTY	libc.h	51;"	d
ENP	pcnet.h	/^	unsigned ENP:1;		\/\/ 24$/;"	m	struct:pcnet_rx_16
ENP	pcnet.h	/^	unsigned ENP:1;		\/\/ 24$/;"	m	struct:pcnet_rx_32
ENP	pcnet.h	/^	unsigned ENP:1;		\/\/ 24$/;"	m	struct:pcnet_tx_16
ENP	pcnet.h	/^	unsigned ENP:1;		\/\/ 24$/;"	m	struct:pcnet_tx_32
ENXIO	klibc.h	85;"	d
ENXIO	libc.h	32;"	d
EOF	libc.h	24;"	d
EOT	ide.h	/^	uint8_t	EOT:1;$/;"	m	struct:PRD
EPERM	klibc.h	80;"	d
EPERM	libc.h	27;"	d
EPIPE	klibc.h	111;"	d
EPIPE	libc.h	58;"	d
ERANGE	klibc.h	113;"	d
ERANGE	libc.h	60;"	d
EROFS	klibc.h	109;"	d
EROFS	libc.h	56;"	d
ERR	pcnet.h	/^	unsigned ERR:1;		\/\/ 30$/;"	m	struct:pcnet_rx_16
ERR	pcnet.h	/^	unsigned ERR:1;		\/\/ 30$/;"	m	struct:pcnet_rx_32
ERR	pcnet.h	/^	unsigned ERR:1;		\/\/ 30$/;"	m	struct:pcnet_tx_16
ERR	pcnet.h	/^	unsigned ERR:1;		\/\/ 30$/;"	m	struct:pcnet_tx_32
ERR_STAT	ide.h	56;"	d
ESP	ahci.c	/^	unsigned ESP:1;$/;"	m	struct:_PxCMD	file:
ESPIPE	klibc.h	108;"	d
ESPIPE	libc.h	55;"	d
ESRCH	klibc.h	82;"	d
ESRCH	libc.h	29;"	d
ESTABLISHED	tcp.h	61;"	d
ES_LOADED	elf64.h	108;"	d
ES_LOADME	elf64.h	109;"	d
ETHPROTO_ARP	eth.h	31;"	d
ETHPROTO_IP	eth.h	30;"	d
ETXTBSY	klibc.h	105;"	d
ETXTBSY	libc.h	52;"	d
ET_CORE	elf64.h	79;"	d
ET_DYN	elf64.h	78;"	d
ET_EXEC	elf64.h	77;"	d
ET_MAX	elf64.h	80;"	d
ET_NONE	elf64.h	75;"	d
ET_REL	elf64.h	76;"	d
EXDEF	pcnet.h	/^	unsigned EXDEF:1;		\/\/ 29$/;"	m	struct:pcnet_tx_16
EXDEF	pcnet.h	/^	unsigned EXDEF:1;		\/\/ 29$/;"	m	struct:pcnet_tx_32
EXDEV	klibc.h	97;"	d
EXDEV	libc.h	44;"	d
EXIT_SUCCESS	libc.h	66;"	d
ExtendedChecksum	acpi.h	/^	uint8_t  ExtendedChecksum;$/;"	m	struct:RSDPDescriptor20
FAILFS_C	failfs.c	7;"	d	file:
FAILFS_H	failfs.h	2;"	d
FBSCP	ahci.c	/^	unsigned FBSCP:1;$/;"	m	struct:_PxCMD	file:
FBSS	ahci.c	/^	int	FBSS:1;$/;"	m	struct:_CAP	file:
FCOLL	pcnet.h	/^	unsigned FCOLL:1;$/;"	m	struct:CSR15_mode
FFS_BT_DATA	failfs.h	/^	FFS_BT_DATA  = 3,$/;"	e	enum:ffs_block_types
FFS_BT_FILE	failfs.h	/^	FFS_BT_FILE  = 2,$/;"	e	enum:ffs_block_types
FFS_BT_FREE	failfs.h	/^	FFS_BT_FREE  = 4$/;"	e	enum:ffs_block_types
FFS_BT_SUPER	failfs.h	/^	FFS_BT_SUPER = 1,$/;"	e	enum:ffs_block_types
FFS_FT_DELETED	failfs.h	/^	FFS_FT_DELETED = 0,$/;"	e	enum:ffs_file_types
FFS_FT_DIR	failfs.h	/^	FFS_FT_DIR     = 2,$/;"	e	enum:ffs_file_types
FFS_FT_LINK	failfs.h	/^	FFS_FT_LINK    = 3,$/;"	e	enum:ffs_file_types
FFS_FT_NORMAL	failfs.h	/^	FFS_FT_NORMAL  = 1,$/;"	e	enum:ffs_file_types
FFS_FT_SYMLINK	failfs.h	/^	FFS_FT_SYMLINK = 4$/;"	e	enum:ffs_file_types
FILE	libc.h	/^} FILE;$/;"	t	typeref:struct:__anon30
FIN_WAIT_1	tcp.h	62;"	d
FIN_WAIT_2	tcp.h	63;"	d
FR	ahci.c	/^	unsigned FR:1;$/;"	m	struct:_PxCMD	file:
FRAM	pcnet.h	/^	unsigned FRAM:1;		\/\/ 29$/;"	m	struct:pcnet_rx_16
FRAM	pcnet.h	/^	unsigned FRAM:1;		\/\/ 29$/;"	m	struct:pcnet_rx_32
FRE	ahci.c	/^	unsigned FRE:1;$/;"	m	struct:_PxCMD	file:
FS_BLOCK	file.h	19;"	d
FS_BOUND	file.h	23;"	d
FS_CHAR	file.h	20;"	d
FS_DELETED	file.h	26;"	d
FS_DIR	file.h	17;"	d
FS_FILE	file.h	18;"	d
FS_KERNEL	file.h	21;"	d
FS_LISTEN	file.h	24;"	d
FS_MOUNTED	file.h	25;"	d
FS_SOCKET	file.h	22;"	d
F_AC	cpu.h	35;"	d
F_AF	cpu.h	24;"	d
F_CF	cpu.h	20;"	d
F_DF	cpu.h	30;"	d
F_ID	cpu.h	38;"	d
F_IF	cpu.h	29;"	d
F_OF	cpu.h	31;"	d
F_PF	cpu.h	22;"	d
F_RES0	cpu.h	21;"	d
F_RES1	cpu.h	23;"	d
F_RES2	cpu.h	25;"	d
F_RF	cpu.h	33;"	d
F_SF	cpu.h	27;"	d
F_TF	cpu.h	28;"	d
F_VIF	cpu.h	36;"	d
F_VIP	cpu.h	37;"	d
F_VM	cpu.h	34;"	d
F_ZF	cpu.h	26;"	d
GDT_SIZE	cpu.h	321;"	d
GDT_TYPE_CALL16	cpu.h	104;"	d
GDT_TYPE_CALL32	cpu.h	112;"	d
GDT_TYPE_CALL64	cpu.h	128;"	d
GDT_TYPE_CS32	cpu.h	118;"	d
GDT_TYPE_CS64	cpu.h	134;"	d
GDT_TYPE_DS32	cpu.h	117;"	d
GDT_TYPE_DS64	cpu.h	133;"	d
GDT_TYPE_INT16	cpu.h	106;"	d
GDT_TYPE_INT32	cpu.h	114;"	d
GDT_TYPE_INT64	cpu.h	130;"	d
GDT_TYPE_LDT32	cpu.h	102;"	d
GDT_TYPE_LDT64	cpu.h	123;"	d
GDT_TYPE_TASK32	cpu.h	105;"	d
GDT_TYPE_TRAP16	cpu.h	107;"	d
GDT_TYPE_TRAP32	cpu.h	115;"	d
GDT_TYPE_TRAP64	cpu.h	131;"	d
GDT_TYPE_TSSAVAIL16	cpu.h	101;"	d
GDT_TYPE_TSSAVAIL32	cpu.h	109;"	d
GDT_TYPE_TSSAVAIL64	cpu.h	125;"	d
GDT_TYPE_TSSBSY64	cpu.h	127;"	d
GDT_TYPE_TSSBUSY16	cpu.h	103;"	d
GDT_TYPE_TSSBUSY32	cpu.h	111;"	d
GET_PE	page.h	93;"	d
GET_PE_N	page.h	94;"	d
GET_PHYS	page.h	96;"	d
GET_PHYS_K	page.h	97;"	d
GET_PTP	page.h	90;"	d
GET_VIRT	page.h	102;"	d
GHC	ahci.c	/^	uint32_t	GHC;$/;"	m	struct:GHC	file:
GHC	ahci.c	/^struct GHC {$/;"	s	file:
GHC_AE	ahci.c	165;"	d	file:
GHC_HR	ahci.c	166;"	d	file:
GTF_AVL	cpu.h	150;"	d
GTF_B	cpu.h	146;"	d
GTF_C	cpu.h	139;"	d
GTF_D	cpu.h	145;"	d
GTF_DPL	cpu.h	152;"	d
GTF_E	cpu.h	140;"	d
GTF_G	cpu.h	148;"	d
GTF_P	cpu.h	142;"	d
GTF_R	cpu.h	136;"	d
GTF_W	cpu.h	137;"	d
HD0	ramfs.c	10;"	d	file:
HDLC_ESCAPE	ppp.h	15;"	d
HDLC_FLAG	ppp.h	12;"	d
HDLC_PPP_ADDR	ppp.h	13;"	d
HDLC_PPP_CMD	ppp.h	14;"	d
HEAD_SIZE	mem.h	47;"	d
HPCP	ahci.c	/^	unsigned HPCP:1;$/;"	m	struct:_PxCMD	file:
HPET_H	hpet.h	2;"	d
HRD_ETHERNET	arp.h	31;"	d
I	ahci.c	/^	int		I:1;$/;"	m	struct:PRDT	file:
ICC	ahci.c	/^	unsigned ICC:4;$/;"	m	struct:_PxCMD	file:
ICMP_ECHO_REPLY	ip.h	25;"	d
ICMP_ECHO_REQUEST	ip.h	26;"	d
IDETIM_DMA_TE	ide.h	20;"	d
IDETIM_IDE_DE	ide.h	21;"	d
IDETIM_PRI	ide.h	9;"	d
IDETIM_SEC	ide.h	10;"	d
IDETIM_TIME0	ide.h	18;"	d
IDETIM_TIME1	ide.h	19;"	d
IDE_MAJOR	dev.h	110;"	d
IDE_MASTER	pci.h	112;"	d
IDE_PRI_OP	pci.h	108;"	d
IDE_PRI_PR	pci.h	109;"	d
IDE_SEC_OP	pci.h	110;"	d
IDE_SEC_PR	pci.h	111;"	d
IDT_SIZE	cpu.h	305;"	d
INADDR_ANY	ip.h	56;"	d
INDEX_STAT	ide.h	57;"	d
INTL	pcnet.h	/^	unsigned INTL:1;$/;"	m	struct:CSR15_mode
IOC_GIFADDR	ip.h	90;"	d
IOC_GIFNETMASK	ip.h	92;"	d
IOC_SIFADDR	ip.h	91;"	d
IOC_SIFNETMASK	ip.h	93;"	d
IPCPC_IPADDR	ppp.h	30;"	d
IPF_DF	ip.h	39;"	d
IPF_MF	ip.h	40;"	d
IPF_OFFSET	ip.h	41;"	d
IPF_RF	ip.h	38;"	d
IPPROTO_ICMP	ip.h	45;"	d
IPPROTO_TCP	ip.h	46;"	d
IPS_CONNECT	ip.h	106;"	d
IPS_LISTEN	ip.h	105;"	d
IPS_SOCKET	ip.h	104;"	d
IPS_UNDEF	ip.h	103;"	d
IS	ahci.c	/^	uint32_t	IS;$/;"	m	struct:GHC	file:
ISS	ahci.c	/^	int	ISS:4;$/;"	m	struct:_CAP	file:
KBD_CMD	dev.h	15;"	d
KBD_DATA	dev.h	13;"	d
KBD_SR_CD	dev.h	20;"	d
KBD_SR_INB	dev.h	18;"	d
KBD_SR_OUTB	dev.h	17;"	d
KBD_SR_PR_ERR	dev.h	22;"	d
KBD_SR_SYS	dev.h	19;"	d
KBD_SR_TO_ERR	dev.h	21;"	d
KBD_STAT	dev.h	14;"	d
KERNEL	Makefile	/^KERNEL	:=kernel$/;"	m
KERNEL_TASK	proc.h	118;"	d
KERN_END	mboot_hdr.S	/^KERN_END	equ	kernel_end$/;"	d
KERN_MEM	page.h	6;"	d
KERN_POOLS	mem.h	7;"	d
KERN_START	mboot_hdr.S	/^KERN_START	equ	kernel_start$/;"	d
KEY_ALT	dev.c	18;"	d	file:
KEY_CTRL	dev.c	17;"	d	file:
KEY_SHIFT	dev.c	16;"	d	file:
KMF_ZERO	mem.h	63;"	d
KP_ALIGN	mem.h	35;"	d
KP_FREE	mem.h	34;"	d
KP_MAGIC	mem.h	14;"	d
LADRF	pcnet.h	/^	uint64_t LADRF;		\/\/ 00 - 63$/;"	m	struct:pcnet_init_32
LADRF	pcnet.h	/^	uint64_t LADRF;$/;"	m	struct:pcnet_init_16
LAST_ACK	tcp.h	67;"	d
LCAR	pcnet.h	/^	unsigned LCAR:1;		\/\/ 27$/;"	m	struct:pcnet_tx_16
LCAR	pcnet.h	/^	unsigned LCAR:1;		\/\/ 27$/;"	m	struct:pcnet_tx_32
LCOL	pcnet.h	/^	unsigned LCOL:1;		\/\/ 28$/;"	m	struct:pcnet_tx_16
LCOL	pcnet.h	/^	unsigned LCOL:1;		\/\/ 28$/;"	m	struct:pcnet_tx_32
LCPC_ASYNCMAP	ppp.h	27;"	d
LCPC_MAGIC_NUMBER	ppp.h	28;"	d
LCP_CONF_ACK	ppp.h	21;"	d
LCP_CONF_NAK	ppp.h	22;"	d
LCP_CONF_REJ	ppp.h	23;"	d
LCP_CONF_REQ	ppp.h	20;"	d
LCP_TERM_ACK	ppp.h	25;"	d
LCP_TERM_REQ	ppp.h	24;"	d
LD	Makefile	/^LD		:= ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS		:= --build-id=none -nostdlib --check-sections -N -g$/;"	m
LISTEN	tcp.h	58;"	d
LOOP	pcnet.h	/^	unsigned LOOP:1;$/;"	m	struct:CSR15_mode
Length	acpi.h	/^	uint32_t Length;$/;"	m	struct:ACPISDTHeader
Length	acpi.h	/^	uint32_t Length;$/;"	m	struct:RSDPDescriptor20
MADTEntry	acpi.h	/^struct MADTEntry {$/;"	s
MAX_ARG	proc.c	752;"	d	file:
MAX_CPU	cpu.h	334;"	d
MAX_FD	proc.h	40;"	d
MAX_KEYS	dev.c	14;"	d	file:
MAX_PHYS_MEM_SLOTS	frame.h	13;"	d
MAX_SYSCALL	intr.S	/^	MAX_SYSCALL equ 0x100$/;"	d
MAX_SYSCALL	syscall.h	108;"	d
MBF_ALIGN	mboot_hdr.S	/^MBF_ALIGN	equ	1<<0$/;"	d
MBF_KLUDGE	mboot_hdr.S	/^MBF_KLUDGE	equ 1<<16$/;"	d
MBF_MEMINFO	mboot_hdr.S	/^MBF_MEMINFO	equ	1<<1$/;"	d
MBR	disk.h	/^struct MBR$/;"	s
MB_FLAGS	mboot_hdr.S	/^MB_FLAGS	equ	MBF_ALIGN|MBF_MEMINFO|MBF_KLUDGE$/;"	d
MB_MAGIC	mboot_hdr.S	/^MB_MAGIC	equ	0x1BADB002$/;"	d
MCNT	pcnet.h	/^	uint16_t MCNT:12;		\/\/ 00 - 11$/;"	m	struct:pcnet_rx_16
MCNT	pcnet.h	/^	uint16_t MCNT:12;		\/\/ 00 - 11$/;"	m	struct:pcnet_rx_32
MENDECL	pcnet.h	/^	unsigned MENDECL:1;$/;"	m	struct:CSR15_mode
MODE	pcnet.h	/^	uint16_t MODE;		\/\/ 00 - 15$/;"	m	struct:pcnet_init_32
MODE	pcnet.h	/^	uint16_t MODE;$/;"	m	struct:pcnet_init_16
MORE	pcnet.h	/^	unsigned MORE:1;		\/\/ 28$/;"	m	struct:pcnet_tx_16
MORE	pcnet.h	/^	unsigned MORE:1;		\/\/ 28$/;"	m	struct:pcnet_tx_32
MPSP	ahci.c	/^	unsigned MPSP:1;$/;"	m	struct:_PxCMD	file:
MPSS	ahci.c	/^	unsigned MPSS:1;$/;"	m	struct:_PxCMD	file:
MSR_APIC_BASE	cpu.h	331;"	d
MSR_CSTAR	cpu.h	326;"	d
MSR_CSTAR	mboot.S	/^MSR_CSTAR	equ	0xc0000083	; target RIP in compat$/;"	d
MSR_EFER	cpu.h	323;"	d
MSR_EFER	mboot.S	/^MSR_EFER	equ	0xc0000080$/;"	d
MSR_FSBASE	cpu.h	328;"	d
MSR_GSBASE	cpu.h	329;"	d
MSR_KERNEL_GSBASE	cpu.h	330;"	d
MSR_KERN_GS_BASE	mboot.S	/^MSR_KERN_GS_BASE	equ	0xc0000102	; KernelGSBase$/;"	d
MSR_LSTAR	cpu.h	325;"	d
MSR_LSTAR	mboot.S	/^MSR_LSTAR	equ	0xc0000082	; target RIP in long mode$/;"	d
MSR_PLATFORM_INFO	cpu.h	332;"	d
MSR_SFMASK	cpu.h	327;"	d
MSR_SF_MASK	mboot.S	/^MSR_SF_MASK	equ	0xc0000084	; flags mask (32bit)$/;"	d
MSR_STAR	cpu.h	324;"	d
MSR_STAR	mboot.S	/^MSR_STAR	equ	0xc0000081	; target CS\/SS\/RIP in legacy$/;"	d
MULTIBOOT_BOOTLOADER_MAGIC	mboot.h	4;"	d
MULTIBOOT_HEADER_FLAGS	mboot.h	86;"	d
MULTIBOOT_HEADER_MAGIC	mboot.h	85;"	d
MULTIBOOT_INFO_AOUT_SYMS	mboot.h	24;"	d
MULTIBOOT_INFO_APM_TABLE	mboot.h	30;"	d
MULTIBOOT_INFO_BOOTDEV	mboot.h	21;"	d
MULTIBOOT_INFO_BOOT_LOADER_NAME	mboot.h	29;"	d
MULTIBOOT_INFO_CMDLINE	mboot.h	22;"	d
MULTIBOOT_INFO_CONFIG_TABLE	mboot.h	28;"	d
MULTIBOOT_INFO_DRIVE_INFO	mboot.h	27;"	d
MULTIBOOT_INFO_ELF_SHDR	mboot.h	25;"	d
MULTIBOOT_INFO_FRAMEBUFFER_INFO	mboot.h	32;"	d
MULTIBOOT_INFO_MEMORY	mboot.h	20;"	d
MULTIBOOT_INFO_MEM_MAP	mboot.h	26;"	d
MULTIBOOT_INFO_MODS	mboot.h	23;"	d
MULTIBOOT_INFO_VBE_INFO	mboot.h	31;"	d
MULTIBOOT_MEMORY_ACPI_RECLAIMABLE	mboot.h	79;"	d
MULTIBOOT_MEMORY_AVAILABLE	mboot.h	77;"	d
MULTIBOOT_MEMORY_BADRAM	mboot.h	81;"	d
MULTIBOOT_MEMORY_NVS	mboot.h	80;"	d
MULTIBOOT_MEMORY_RESERVED	mboot.h	78;"	d
NAME_MAX	file.h	62;"	d
NASM	Makefile	/^NASM	:= nasm$/;"	m
NASMFLAGS	Makefile	/^NASMFLAGS	:= -f elf64 -g -w+all$/;"	m
NCS	ahci.c	/^	int	NCS:5;$/;"	m	struct:_CAP	file:
NETDEV_ETH	net.h	63;"	d
NETDEV_NULL	net.h	60;"	d
NETDEV_PPP	net.h	61;"	d
NETDEV_SLIP	net.h	62;"	d
NETPROTO_IP	net.h	66;"	d
NETPROTO_NULL	net.h	65;"	d
NET_NEW	net.h	57;"	d
NET_READY	net.h	58;"	d
NODE_DATA	mem.h	32;"	d
NODE_SIZE	mem.h	31;"	d
NP	ahci.c	/^	int	NP:4;$/;"	m	struct:_CAP	file:
NULL	klibc.h	40;"	d
NULL	libc.h	10;"	d
NULL	libc.h	13;"	d
NULL_INO	failfs.h	4;"	d
NUM_RD	ram.h	6;"	d
NUM_SER	dev.h	138;"	d
NUM_TASKS	proc.h	8;"	d
OEMID	acpi.h	/^	char     OEMID[6];$/;"	m	struct:ACPISDTHeader
OEMID	acpi.h	/^	char     OEMID[6];$/;"	m	struct:RSDPDescriptor20
OEMRevision	acpi.h	/^	uint32_t OEMRevision;$/;"	m	struct:ACPISDTHeader
OEMTableID	acpi.h	/^	char     OEMTableID[8];$/;"	m	struct:ACPISDTHeader
OFLO	pcnet.h	/^	unsigned OFLO:1;		\/\/ 28$/;"	m	struct:pcnet_rx_16
OFLO	pcnet.h	/^	unsigned OFLO:1;		\/\/ 28$/;"	m	struct:pcnet_rx_32
ONE	pcnet.h	/^	unsigned ONE:1;		\/\/ 27$/;"	m	struct:pcnet_tx_16
ONE	pcnet.h	/^	unsigned ONE:1;		\/\/ 27$/;"	m	struct:pcnet_tx_32
OWN	pcnet.h	/^	unsigned OWN:1;		\/\/ 31$/;"	m	struct:pcnet_rx_16
OWN	pcnet.h	/^	unsigned OWN:1;		\/\/ 31$/;"	m	struct:pcnet_rx_32
OWN	pcnet.h	/^	unsigned OWN:1;		\/\/ 31$/;"	m	struct:pcnet_tx_16
OWN	pcnet.h	/^	unsigned OWN:1;		\/\/ 31$/;"	m	struct:pcnet_tx_32
O_APPEND	file.h	207;"	d
O_CREAT	file.h	203;"	d
O_EXCL	file.h	204;"	d
O_NDELAY	file.h	209;"	d
O_NOCTTY	file.h	205;"	d
O_NONBLOCK	file.h	208;"	d
O_RDONLY	file.h	200;"	d
O_RDONLY	libc.h	62;"	d
O_RDWR	file.h	202;"	d
O_RDWR	libc.h	64;"	d
O_TRUNC	file.h	206;"	d
O_WRONLY	file.h	201;"	d
O_WRONLY	libc.h	63;"	d
P	ahci.c	/^	int P:1;$/;"	m	struct:CommandHeader	file:
PADR	pcnet.h	/^	uint8_t  PADR[6];$/;"	m	struct:pcnet_init_16
PADR	pcnet.h	/^	uint8_t PADR[6];		\/\/ 00 - 23$/;"	m	struct:pcnet_init_32
PAGE_SIZE	mboot.S	/^PAGE_SIZE	equ	0x1000$/;"	d
PAGE_SIZE	page.h	120;"	d
PATH_MAX	file.h	63;"	d
PAUSE	ide.c	8;"	d	file:
PCI_BAR	pci.h	38;"	d
PCI_BAR_0	pci.h	37;"	d
PCI_CLASS_CODE	pci.h	29;"	d
PCI_CLASS_MASS_STORAGE	pci.h	104;"	d
PCI_CMD_INTX_DISABLE	pci.h	63;"	d
PCI_CMD_IO	pci.h	60;"	d
PCI_CMD_MASTER	pci.h	62;"	d
PCI_CMD_MEMORY	pci.h	61;"	d
PCI_CMD_REG	pci.h	21;"	d
PCI_DEVICE_828011_AHCI	pci.h	100;"	d
PCI_DEVICE_ID	pci.h	19;"	d
PCI_DEVICE_PCNET	pci.h	97;"	d
PCI_DEVICE_PIIX3	pci.h	101;"	d
PCI_DEVICE_PIIX4	pci.h	102;"	d
PCI_HEADER_TYPE	pci.h	33;"	d
PCI_HT_MULTI	pci.h	34;"	d
PCI_INT_LINE	pci.h	49;"	d
PCI_INT_PIN	pci.h	51;"	d
PCI_NUM_BARS	pci.h	13;"	d
PCI_REV_ID	pci.h	25;"	d
PCI_STATUS_REG	pci.h	23;"	d
PCI_SUBCLASS_IDE	pci.h	106;"	d
PCI_SUB_ID	pci.h	43;"	d
PCI_SUB_VENDOR_ID	pci.h	41;"	d
PCI_VENDOR_AMD	pci.h	96;"	d
PCI_VENDOR_ID	pci.h	17;"	d
PCI_VENDOR_INTEL	pci.h	99;"	d
PEF_A	page.h	46;"	d
PEF_AVL1	page.h	52;"	d
PEF_AVL2	page.h	53;"	d
PEF_COW	page.h	51;"	d
PEF_D	page.h	47;"	d
PEF_G	page.h	50;"	d
PEF_LAST	page.h	49;"	d
PEF_NX	page.h	55;"	d
PEF_P	page.h	41;"	d
PEF_PAT	page.h	48;"	d
PEF_PCD	page.h	45;"	d
PEF_PWT	page.h	44;"	d
PEF_U	page.h	43;"	d
PEF_W	page.h	42;"	d
PF_ID	cpu.h	447;"	d
PF_P	cpu.h	443;"	d
PF_R	elf64.h	136;"	d
PF_RSVD	cpu.h	446;"	d
PF_US	cpu.h	445;"	d
PF_W	elf64.h	135;"	d
PF_WR	cpu.h	444;"	d
PF_X	elf64.h	134;"	d
PGSIZE_1G	page.h	119;"	d
PGSIZE_2M	page.h	118;"	d
PGSIZE_4K	page.h	117;"	d
PI	ahci.c	/^	uint32_t	PI;$/;"	m	struct:GHC	file:
PICA_CMD	init.c	99;"	d	file:
PICA_DATA	init.c	100;"	d	file:
PICB_CMD	init.c	101;"	d	file:
PICB_DATA	init.c	102;"	d	file:
PIC_ICW1	init.c	/^} PIC_ICW1;$/;"	v	typeref:union:__anon23
PIC_ICW1_ADI	init.c	91;"	d	file:
PIC_ICW1_ALW1	init.c	93;"	d	file:
PIC_ICW1_IC4	init.c	89;"	d	file:
PIC_ICW1_LTIM	init.c	92;"	d	file:
PIC_ICW1_SNGL	init.c	90;"	d	file:
PIC_ICW4	init.c	/^} PIC_ICW4;$/;"	v	typeref:union:__anon25
PIC_ICW4_AEOI	init.c	96;"	d	file:
PIC_ICW4_MODE	init.c	95;"	d	file:
PIC_ICW4_MS	init.c	97;"	d	file:
PID_IPCP	ppp.h	18;"	d
PID_LCP	ppp.h	17;"	d
PIT_BCD	init.c	452;"	d	file:
PIT_BINARY	init.c	453;"	d	file:
PIT_CH0	init.c	428;"	d	file:
PIT_CH1	init.c	429;"	d	file:
PIT_CH2	init.c	430;"	d	file:
PIT_CMD	init.c	431;"	d	file:
PIT_MODE_CH0	init.c	433;"	d	file:
PIT_MODE_CH1	init.c	434;"	d	file:
PIT_MODE_CH2	init.c	435;"	d	file:
PIT_MODE_HI	init.c	440;"	d	file:
PIT_MODE_LATCH	init.c	438;"	d	file:
PIT_MODE_LO	init.c	439;"	d	file:
PIT_MODE_LOHI	init.c	441;"	d	file:
PIT_MODE_READ	init.c	436;"	d	file:
PIT_OP_M0	init.c	443;"	d	file:
PIT_OP_M1	init.c	444;"	d	file:
PIT_OP_M2	init.c	445;"	d	file:
PIT_OP_M2B	init.c	449;"	d	file:
PIT_OP_M3	init.c	446;"	d	file:
PIT_OP_M3B	init.c	450;"	d	file:
PIT_OP_M4	init.c	447;"	d	file:
PIT_OP_M5	init.c	448;"	d	file:
PMA	ahci.c	/^	unsigned PMA:1;$/;"	m	struct:_PxCMD	file:
PMD	ahci.c	/^	int	PMD:1;$/;"	m	struct:_CAP	file:
PML2	mboot.S	/^PML2		equ	0x10000$/;"	d
PML3	mboot.S	/^PML3		equ	PML2+PAGE_SIZE$/;"	d
PML4	mboot.S	/^PML4		equ	PML3+PAGE_SIZE$/;"	d
PMP	ahci.c	/^	int PMP:4;$/;"	m	struct:CommandHeader	file:
POD	ahci.c	/^	unsigned POD:1;$/;"	m	struct:_PxCMD	file:
PORT	ahci.c	/^struct PORT {$/;"	s	file:
PORTSEL	pcnet.h	/^	unsigned PORTSEL:2;$/;"	m	struct:CSR15_mode
PRD	ide.h	/^struct PRD {$/;"	s
PRDBC	ahci.c	/^	uint32_t PRDBC;$/;"	m	struct:CommandHeader	file:
PRDT	ahci.c	/^struct PRDT {$/;"	s	file:
PRDTL	ahci.c	/^	int PRDTL:16;$/;"	m	struct:CommandHeader	file:
PRI_CMD_BLOCK	ide.h	40;"	d
PRI_CON_BLOCK	ide.h	41;"	d
PROM	pcnet.h	/^	unsigned PROM:1;$/;"	m	struct:CSR15_mode
PSC	ahci.c	/^	int	PSC:1;$/;"	m	struct:_CAP	file:
PSDE0	ide.h	16;"	d
PSDE1	ide.h	15;"	d
PT_DYNAMIC	elf64.h	113;"	d
PT_INTERP	elf64.h	114;"	d
PT_LOAD	elf64.h	112;"	d
PT_MAX	elf64.h	118;"	d
PT_NOTE	elf64.h	115;"	d
PT_NULL	elf64.h	111;"	d
PT_PHDR	elf64.h	117;"	d
PT_SHLIB	elf64.h	116;"	d
PT_SIZE	page.h	79;"	d
PXCMD_ICC_ACTIVE	ahci.c	74;"	d	file:
PXCMD_ICC_DEVSLEEP	ahci.c	71;"	d	file:
PXCMD_ICC_IDLE	ahci.c	75;"	d	file:
PXCMD_ICC_PARTIAL	ahci.c	73;"	d	file:
PXCMD_ICC_SLUMBER	ahci.c	72;"	d	file:
PXSSTS_DET_DEVPHY	ahci.c	79;"	d	file:
PXSSTS_DET_NODEV	ahci.c	77;"	d	file:
PXSSTS_DET_NOPHY	ahci.c	78;"	d	file:
PXSSTS_DET_OFFLINE	ahci.c	80;"	d	file:
PxCI	ahci.c	/^	uint32_t	PxCI;$/;"	m	struct:PORT	file:
PxCLB	ahci.c	/^	struct	CommandHeader *PxCLB; \/\/ Contains 32$/;"	m	struct:PORT	typeref:struct:PORT::CommandHeader	file:
PxCMD	ahci.c	/^	} __attribute__((packed)) PxCMD;$/;"	m	struct:PORT	typeref:union:PORT::__anon12	file:
PxFB	ahci.c	/^	uint64_t	PxFB; \/* void* *\/$/;"	m	struct:PORT	file:
PxFBS	ahci.c	/^	uint32_t	PxFBS;$/;"	m	struct:PORT	file:
PxIE	ahci.c	/^	uint32_t	PxIE;$/;"	m	struct:PORT	file:
PxIS	ahci.c	/^	uint32_t	PxIS;$/;"	m	struct:PORT	file:
PxSACT	ahci.c	/^	uint32_t	PxSACT;$/;"	m	struct:PORT	file:
PxSCTL	ahci.c	/^	uint32_t	PxSCTL;$/;"	m	struct:PORT	file:
PxSERR	ahci.c	/^	uint32_t	PxSERR;$/;"	m	struct:PORT	file:
PxSIG	ahci.c	/^	} __attribute__((packed)) PxSIG;$/;"	m	struct:PORT	typeref:union:PORT::__anon13	file:
PxSNTF	ahci.c	/^	uint32_t	PxSNTF;$/;"	m	struct:PORT	file:
PxSSTS	ahci.c	/^	} __attribute__((packed)) PxSSTS;$/;"	m	struct:PORT	typeref:union:PORT::__anon14	file:
PxTFD	ahci.c	/^	uint32_t	PxTFD;$/;"	m	struct:PORT	file:
PxVS	ahci.c	/^	uint8_t		PxVS[16];$/;"	m	struct:PORT	file:
R	ahci.c	/^	int R:1;$/;"	m	struct:CommandHeader	file:
RAP	pcnet.h	8;"	d
RBADR	pcnet.h	/^	uint32_t RBADR:24;	\/\/ 00 - 31$/;"	m	struct:pcnet_rx_16
RBADR	pcnet.h	/^	uint32_t RBADR;		\/\/ 00 - 31$/;"	m	struct:pcnet_rx_32
RCC	pcnet.h	/^	unsigned RCC;$/;"	m	struct:pcnet_rx_32
RDP	pcnet.h	7;"	d
RDRA	pcnet.h	/^	uint32_t RDRA:24;$/;"	m	struct:pcnet_init_16
RDRA	pcnet.h	/^	uint32_t RDRA;		\/\/ 00 - 31$/;"	m	struct:pcnet_init_32
RD_0_MINOR	ram.h	10;"	d
RD_MAJOR	ram.h	9;"	d
RD_SIZE	ram.h	7;"	d
READY_STAT	ide.h	62;"	d
RES	pcnet.h	/^	uint16_t RES:12;		\/\/ 04 - 15$/;"	m	struct:pcnet_tx_32
RESET	pcnet.h	9;"	d
RLEN	pcnet.h	/^	unsigned  RLEN:4;$/;"	m	struct:pcnet_init_16
RLEN	pcnet.h	/^	unsigned RLEN:4;		\/\/ 20 - 23$/;"	m	struct:pcnet_init_32
RPC	pcnet.h	/^	unsigned RPC;$/;"	m	struct:pcnet_rx_32
RSDP	acpi.c	/^static volatile const struct RSDPDescriptor20 *RSDP;$/;"	v	typeref:struct:RSDPDescriptor20	file:
RSDPDescriptor20	acpi.h	/^struct RSDPDescriptor20 {$/;"	s
RSDT	acpi.c	/^static volatile const struct ACPIRSDT *RSDT;$/;"	v	typeref:struct:ACPIRSDT	file:
RTRY	pcnet.h	/^	unsigned RTRY:1;		\/\/ 26$/;"	m	struct:pcnet_tx_16
RTRY	pcnet.h	/^	unsigned RTRY:1;		\/\/ 26$/;"	m	struct:pcnet_tx_32
RX_RLEN	pcnet.h	14;"	d
Revision	acpi.h	/^	uint8_t  Revision;$/;"	m	struct:ACPISDTHeader
Revision	acpi.h	/^	uint8_t  Revision;$/;"	m	struct:RSDPDescriptor20
RsdtAddress	acpi.h	/^	uint32_t RsdtAddress;$/;"	m	struct:RSDPDescriptor20
S64A	ahci.c	/^	int	S64A:1;$/;"	m	struct:_CAP	file:
SAL	ahci.c	/^	int	SAL:1;$/;"	m	struct:_CAP	file:
SALP	ahci.c	/^	int	SALP:1;$/;"	m	struct:_CAP	file:
SAM	ahci.c	/^	int	SAM:1;$/;"	m	struct:_CAP	file:
SCLO	ahci.c	/^	int	SCLO:1;$/;"	m	struct:_CAP	file:
SCREEN_COLS	dev.c	415;"	d	file:
SCREEN_ROWS	dev.c	416;"	d	file:
SECOND_COMP	klibc.h	50;"	d
SEC_CMD_BLOCK	ide.h	42;"	d
SEC_CON_BLOCK	ide.h	43;"	d
SEEK_CUR	file.h	10;"	d
SEEK_DATA	file.h	12;"	d
SEEK_END	file.h	11;"	d
SEEK_HOLE	file.h	13;"	d
SEEK_MAX	file.h	14;"	d
SEEK_SET	file.h	9;"	d
SEEK_STAT	ide.h	60;"	d
SEL_CS	mboot.S	/^SEL_CS		equ	gdtcode64 - gdt_desc$/;"	d
SEL_DS	mboot.S	/^SEL_DS		equ	gdtdata64 - gdt_desc$/;"	d
SER_0_MINOR	dev.h	107;"	d
SER_1_MINOR	dev.h	108;"	d
SER_BUFFER_SIZE	dev.h	104;"	d
SER_CTRL	dev.h	28;"	d
SER_DATA	dev.h	24;"	d
SER_FCR	dev.h	29;"	d
SER_FCR_14B	dev.h	45;"	d
SER_FCR_1B	dev.h	42;"	d
SER_FCR_4B	dev.h	43;"	d
SER_FCR_8B	dev.h	44;"	d
SER_FCR_CLR_RX	dev.h	38;"	d
SER_FCR_CLR_TX	dev.h	39;"	d
SER_FCR_DMA_1	dev.h	40;"	d
SER_FCR_ENABLE	dev.h	37;"	d
SER_INTEN	dev.h	25;"	d
SER_LCR	dev.h	30;"	d
SER_LCR_2S	dev.h	58;"	d
SER_LCR_5	dev.h	63;"	d
SER_LCR_6	dev.h	62;"	d
SER_LCR_7	dev.h	61;"	d
SER_LCR_8	dev.h	60;"	d
SER_LCR_DLAB	dev.h	49;"	d
SER_LCR_EVENP	dev.h	54;"	d
SER_LCR_HIGHP	dev.h	55;"	d
SER_LCR_LOWP	dev.h	56;"	d
SER_LCR_NOP	dev.h	52;"	d
SER_LCR_ODDP	dev.h	53;"	d
SER_LCR_SBR	dev.h	50;"	d
SER_LSB_DIV	dev.h	26;"	d
SER_LSR	dev.h	32;"	d
SER_LSR_BREAK	dev.h	88;"	d
SER_LSR_DR	dev.h	84;"	d
SER_LSR_FIFO_ERR	dev.h	91;"	d
SER_LSR_FR_ERR	dev.h	87;"	d
SER_LSR_OR_ERR	dev.h	85;"	d
SER_LSR_P_ERR	dev.h	86;"	d
SER_LSR_THR	dev.h	89;"	d
SER_LSR_THR_IDLE	dev.h	90;"	d
SER_MAJOR	dev.h	106;"	d
SER_MCR	dev.h	31;"	d
SER_MCR_AUX1	dev.h	80;"	d
SER_MCR_AUX2	dev.h	81;"	d
SER_MCR_DTR	dev.h	78;"	d
SER_MCR_LOOP	dev.h	82;"	d
SER_MCR_RTS	dev.h	79;"	d
SER_MSB_DIV	dev.h	27;"	d
SER_MSR	dev.h	33;"	d
SER_MSR_CTS	dev.h	68;"	d
SER_MSR_DCD	dev.h	65;"	d
SER_MSR_DCTS	dev.h	76;"	d
SER_MSR_DDCD	dev.h	70;"	d
SER_MSR_DDSR	dev.h	74;"	d
SER_MSR_DSR	dev.h	67;"	d
SER_MSR_RI	dev.h	66;"	d
SER_MSR_TERI	dev.h	72;"	d
SER_SCRATCH	dev.h	34;"	d
SET_PHYS	page.h	99;"	d
SET_PHYS_K	page.h	100;"	d
SET_PTP	page.h	91;"	d
SHELL	Makefile	/^SHELL	:= \/bin\/sh$/;"	m
SHF_ALLOC	elf64.h	193;"	d
SHF_EXECINSTR	elf64.h	194;"	d
SHF_WRITE	elf64.h	192;"	d
SHT_DYANMIC	elf64.h	171;"	d
SHT_HASH	elf64.h	170;"	d
SHT_MAX	elf64.h	174;"	d
SHT_NOBITS	elf64.h	173;"	d
SHT_NOTE	elf64.h	172;"	d
SHT_NULL	elf64.h	165;"	d
SHT_PROGBITS	elf64.h	166;"	d
SHT_RELA	elf64.h	169;"	d
SHT_STRTAB	elf64.h	168;"	d
SHT_SYMTAB	elf64.h	167;"	d
SIG	ahci.c	/^struct SIG {$/;"	s	file:
SLIP_END	slip.c	6;"	d	file:
SLIP_ESC	slip.c	7;"	d	file:
SLIP_ESC_END	slip.c	8;"	d	file:
SLIP_ESC_ESC	slip.c	9;"	d	file:
SLIP_MAX_PACKET	slip.c	5;"	d	file:
SMPS	ahci.c	/^	int	SMPS:1;$/;"	m	struct:_CAP	file:
SNCQ	ahci.c	/^	int	SNCQ:1;$/;"	m	struct:_CAP	file:
SOCK_STREAM	ip.h	48;"	d
SPM	ahci.c	/^	int	SPM:1;$/;"	m	struct:_CAP	file:
SSC	ahci.c	/^	int	SSC:1;$/;"	m	struct:_CAP	file:
SSDE0	ide.h	14;"	d
SSDE1	ide.h	13;"	d
SSNTF	ahci.c	/^	int	SSNTF:1;$/;"	m	struct:_CAP	file:
SSS	ahci.c	/^	int	SSS:1;$/;"	m	struct:_CAP	file:
SSTS	ahci.c	/^struct SSTS {$/;"	s	file:
ST	ahci.c	/^	unsigned ST:1;$/;"	m	struct:_PxCMD	file:
STACK_BOTTOM	mboot.S	/^STACK_BOTTOM	equ	PML4+PAGE_SIZE$/;"	d
STACK_SIZE	mboot.S	/^STACK_SIZE	equ	0x8000$/;"	d
STACK_SIZE	proc.h	10;"	d
STACK_TOP	mboot.S	/^STACK_TOP	equ	STACK_BOTTOM+STACK_SIZE$/;"	d
STAR	cpu.h	/^} __attribute__((packed)) STAR;$/;"	t	typeref:union:__anon17
STATE_CREATING	proc.h	100;"	d
STATE_EMPTY	proc.h	98;"	d
STATE_EXECVE	proc.h	103;"	d
STATE_FORK	proc.h	104;"	d
STATE_KILLING	proc.h	99;"	d
STATE_NUM	proc.h	105;"	d
STATE_RUNNING	proc.h	101;"	d
STATE_WAIT	proc.h	102;"	d
STP	pcnet.h	/^	unsigned STP:1;		\/\/ 25$/;"	m	struct:pcnet_rx_16
STP	pcnet.h	/^	unsigned STP:1;		\/\/ 25$/;"	m	struct:pcnet_rx_32
STP	pcnet.h	/^	unsigned STP:1;		\/\/ 25$/;"	m	struct:pcnet_tx_16
STP	pcnet.h	/^	unsigned STP:1;		\/\/ 25$/;"	m	struct:pcnet_tx_32
SUD	ahci.c	/^	unsigned SUD:1;$/;"	m	struct:_PxCMD	file:
SXS	ahci.c	/^	int	SXS:1;$/;"	m	struct:_CAP	file:
SYNC_READ	file.h	211;"	d
SYNC_WRITE	file.h	212;"	d
SYN_RECV	tcp.h	60;"	d
SYN_SENT	tcp.h	59;"	d
SYSCALL0	libc.h	83;"	d
SYSCALL1	libc.h	84;"	d
SYSCALL2	libc.h	85;"	d
SYSCALL3	libc.h	86;"	d
SYSCALL4	libc.h	87;"	d
SYSCALL_ACCEPT	syscall.h	74;"	d
SYSCALL_ARCH_PRCTL	syscall.h	100;"	d
SYSCALL_BIND	syscall.h	75;"	d
SYSCALL_BRK	syscall.h	64;"	d
SYSCALL_CLOSE	syscall.h	62;"	d
SYSCALL_CREAT	syscall.h	87;"	d
SYSCALL_EXECVE	syscall.h	80;"	d
SYSCALL_EXIT	syscall.h	81;"	d
SYSCALL_EXIT_GROUP	syscall.h	106;"	d
SYSCALL_FORK	syscall.h	78;"	d
SYSCALL_GETEGID	syscall.h	96;"	d
SYSCALL_GETEUID	syscall.h	95;"	d
SYSCALL_GETGID	syscall.h	93;"	d
SYSCALL_GETPID	syscall.h	70;"	d
SYSCALL_GETPPID	syscall.h	98;"	d
SYSCALL_GETTID	syscall.h	102;"	d
SYSCALL_GETUID	syscall.h	91;"	d
SYSCALL_IOCTL	syscall.h	66;"	d
SYSCALL_KILL	syscall.h	83;"	d
SYSCALL_KLUDGE	syscall.h	89;"	d
SYSCALL_LISTEN	syscall.h	76;"	d
SYSCALL_MKDIR	syscall.h	85;"	d
SYSCALL_OPEN	syscall.h	61;"	d
SYSCALL_PAUSE	syscall.h	68;"	d
SYSCALL_READ	syscall.h	59;"	d
SYSCALL_SOCKET	syscall.h	72;"	d
SYSCALL_TIME	syscall.h	104;"	d
SYSCALL_WAIT4	syscall.h	82;"	d
SYSCALL_WRITE	syscall.h	60;"	d
S_IFBLK	file.h	33;"	d
S_IFCHR	file.h	35;"	d
S_IFDIR	file.h	34;"	d
S_IFIFO	file.h	36;"	d
S_IFLNK	file.h	31;"	d
S_IFMT	file.h	29;"	d
S_IFREG	file.h	32;"	d
S_IFSOCK	file.h	30;"	d
S_IRGRP	file.h	46;"	d
S_IROTH	file.h	50;"	d
S_IRUSR	file.h	42;"	d
S_IRWXG	file.h	45;"	d
S_IRWXO	file.h	49;"	d
S_IRWXU	file.h	41;"	d
S_ISBLK	file.h	57;"	d
S_ISCHR	file.h	56;"	d
S_ISDIR	file.h	55;"	d
S_ISFIFO	file.h	58;"	d
S_ISGID	file.h	39;"	d
S_ISLNK	file.h	59;"	d
S_ISREG	file.h	54;"	d
S_ISSOCK	file.h	60;"	d
S_ISUID	file.h	38;"	d
S_ISVTX	file.h	40;"	d
S_IWGRP	file.h	47;"	d
S_IWOTH	file.h	51;"	d
S_IWUSR	file.h	43;"	d
S_IXGRP	file.h	48;"	d
S_IXOTH	file.h	52;"	d
S_IXUSR	file.h	44;"	d
Signature	acpi.h	/^	char     Signature[4];$/;"	m	struct:ACPISDTHeader
Signature	acpi.h	/^	char     Signature[8];$/;"	m	struct:RSDPDescriptor20
TABLE_ENTRIES	page.h	8;"	d
TBADR	pcnet.h	/^	uint32_t TBADR:24;	\/\/ 00 - 23$/;"	m	struct:pcnet_tx_16
TBADR	pcnet.h	/^	uint32_t TBADR;$/;"	m	struct:pcnet_tx_32
TCP_ACK	tcp.h	51;"	d
TCP_FIN	tcp.h	47;"	d
TCP_HDR	tcp.h	54;"	d
TCP_PHDR	tcp.h	55;"	d
TCP_PSH	tcp.h	50;"	d
TCP_RST	tcp.h	49;"	d
TCP_STATES	tcp.h	68;"	d
TCP_SYN	tcp.h	48;"	d
TCP_URG	tcp.h	52;"	d
TDR	pcnet.h	/^	uint16_t TDR:10;		\/\/ 16 - 25$/;"	m	struct:pcnet_tx_16
TDR	pcnet.h	/^	uint16_t TDR:10;		\/\/ 16 - 25$/;"	m	struct:pcnet_tx_32
TDRA	pcnet.h	/^	uint32_t TDRA:24;$/;"	m	struct:pcnet_init_16
TDRA	pcnet.h	/^	uint32_t TDRA;		\/\/ 00 - 31$/;"	m	struct:pcnet_init_32
TEXT	mboot_hdr.S	/^TEXT		equ	code$/;"	d
TIME_WAIT	tcp.h	65;"	d
TLEN	pcnet.h	/^	unsigned  TLEN:4;$/;"	m	struct:pcnet_init_16
TLEN	pcnet.h	/^	unsigned TLEN:4;		\/\/ 28 - 31$/;"	m	struct:pcnet_init_32
TRC	pcnet.h	/^	unsigned TRC:4;		\/\/ 00 - 03$/;"	m	struct:pcnet_tx_32
TSEL	pcnet.h	/^	unsigned TSEL:1;$/;"	m	struct:CSR15_mode
TTY	ramfs.c	9;"	d	file:
TX_TLEN	pcnet.h	13;"	d
UDMACTL	ide.h	11;"	d
UFLO	pcnet.h	/^	unsigned UFLO:1;		\/\/ 30$/;"	m	struct:pcnet_tx_16
UFLO	pcnet.h	/^	unsigned UFLO:1;		\/\/ 30$/;"	m	struct:pcnet_tx_32
USER_STACK_START	proc.h	110;"	d
USER_TASK	proc.h	117;"	d
VS	ahci.c	/^	uint32_t	VS;$/;"	m	struct:GHC	file:
W	ahci.c	/^	int W:1;$/;"	m	struct:CommandHeader	file:
WIN_IDENTIFY	ide.h	67;"	d
WIN_READ_SECTORS	ide.h	65;"	d
WIN_WRITE_SECTORS	ide.h	66;"	d
WRERR_STAT	ide.h	61;"	d
XSDT	acpi.c	/^static volatile const struct ACPIXSDT *XSDT;$/;"	v	typeref:struct:ACPIXSDT	file:
XsdtAddress	acpi.h	/^	uint64_t XsdtAddress;$/;"	m	struct:RSDPDescriptor20
_ACPI_H	acpi.h	2;"	d
_AHCI_H	ahci.h	2;"	d
_ARP_H	arp.h	2;"	d
_BLOCK_H	block.h	2;"	d
_CAP	ahci.c	/^struct _CAP {$/;"	s	file:
_CHAR_H	char.h	2;"	d
_CPU_C	cpu.c	1;"	d	file:
_CPU_H	cpu.h	2;"	d
_DEV_C	dev.c	1;"	d	file:
_DEV_H	dev.h	2;"	d
_ELF64_H	elf64.h	2;"	d
_ERRNO_H	errno.h	2;"	d
_ETH_H	eth.h	2;"	d
_FILE_H	file.h	2;"	d
_FRAME_C	frame.c	1;"	d	file:
_FRAME_H	frame.h	2;"	d
_IDE_H	ide.h	2;"	d
_INIT_C	init.c	1;"	d	file:
_INT	klibc.c	47;"	d	file:
_INTR_H	intr.h	2;"	d
_IP_H	ip.h	2;"	d
_KERNEL	failfs.c	9;"	d	file:
_KERNEL	libc.h	1;"	d
_KERNEL	ram.c	2;"	d	file:
_KERNEL	syscall.c	3;"	d	file:
_KERNEL_CS	cpu.h	313;"	d
_KERNEL_DS	cpu.h	314;"	d
_KLIBC_H	klibc.h	2;"	d
_LIBC_C	klibc.c	1;"	d	file:
_LIBC_H	libc.h	3;"	d
_LONG	klibc.c	49;"	d	file:
_MBOOT_H	mboot.h	2;"	d
_MEM_H	mem.h	2;"	d
_NET_H	net.h	2;"	d
_NULL_CS	cpu.h	312;"	d
_PAGE_C	page.c	1;"	d	file:
_PAGE_H	page.h	2;"	d
_PCI_H	pci.h	2;"	d
_PCNET_H	pcnet.h	2;"	d
_PPP_H	ppp.h	2;"	d
_PROC_C	proc.c	1;"	d	file:
_PROC_H	proc.h	2;"	d
_PxCMD	ahci.c	/^struct _PxCMD {$/;"	s	file:
_RAMFS_H	ramfs.h	2;"	d
_RAM_H	ram.h	2;"	d
_SHORT	klibc.c	48;"	d	file:
_SLIP_H	slip.h	2;"	d
_SSIZE	cpu.h	307;"	d
_STAR	cpu.h	/^struct _STAR {$/;"	s
_SYSCALL_C	syscall.c	1;"	d	file:
_SYSCALL_H	syscall.h	2;"	d
_TCP_H	tcp.h	2;"	d
_TSS_CS	cpu.h	319;"	d
_USER32_CS	cpu.h	315;"	d
_USER32_DS	cpu.h	316;"	d
_USER_CS	cpu.h	317;"	d
_USER_DS	cpu.h	318;"	d
_Unused	klibc.h	6;"	d
_XOPEN_SOURCE	task2.c	1;"	d	file:
_brk	cpu.h	9;"	d
_cpuid	init.c	686;"	d	file:
_dosyscall	syscalls.S	/^_dosyscall:$/;"	l
_ffs_data_block	failfs.h	/^typedef struct _ffs_data_block {$/;"	s
_ffs_file_block	failfs.h	/^typedef struct _ffs_file_block {$/;"	s
_ffs_free_block	failfs.h	/^typedef struct _ffs_free_block {$/;"	s
_ffs_superblock	failfs.h	/^typedef struct _ffs_superblock {$/;"	s
_kfs_data_block	kirkfs.h	/^typedef struct _kfs_data_block {$/;"	s
_kfs_file_block	kirkfs.h	/^typedef struct _kfs_file_block {$/;"	s
_kfs_free_block	kirkfs.h	/^typedef struct _kfs_free_block {$/;"	s
_kfs_superblock	kirkfs.h	/^typedef struct _kfs_superblock {$/;"	s
_kp_head	mem.h	/^typedef struct _kp_head {$/;"	s
_kp_node	mem.h	/^typedef struct _kp_node {$/;"	s
_start	crt0.c	/^void _start()$/;"	f
a	acpi.h	/^	uint16_t a;$/;"	m	union:__anon9
a	acpi.h	/^	uint32_t a;$/;"	m	union:__anon7
a	ahci.c	/^		struct SIG a;$/;"	m	union:PORT::__anon13	typeref:struct:PORT::__anon13::SIG	file:
a	ahci.c	/^		struct SSTS a;$/;"	m	union:PORT::__anon14	typeref:struct:PORT::__anon14::SSTS	file:
a	ahci.c	/^		struct _CAP	a;$/;"	m	union:GHC::__anon11	typeref:struct:GHC::__anon11::_CAP	file:
a	ahci.c	/^		struct _PxCMD a;$/;"	m	union:PORT::__anon12	typeref:struct:PORT::__anon12::_PxCMD	file:
a	cpu.h	/^	struct _STAR a;$/;"	m	union:__anon17	typeref:struct:__anon17::_STAR
a	init.c	/^	uint8_t a;$/;"	m	union:__anon23	file:
a	init.c	/^	uint8_t a;$/;"	m	union:__anon25	file:
access	page.h	/^	unsigned	access:1;		\/\/ 5$/;"	m	struct:__anon37
access_check	file.c	/^static int access_check(struct fileh *const fh, struct task *const tsk, const int flags)$/;"	f	file:
access_size	acpi.h	/^	uint8_t  access_size;$/;"	m	struct:__anon6
accessed	cpu.h	/^	unsigned	accessed:1;		\/\/ 08$/;"	m	struct:gdt_entry
ack	tcp.h	/^	unsigned    ack:1;$/;"	m	struct:tcp_hdr
ack_num	tcp.h	/^	uint32_t  ack_num;$/;"	m	struct:tcp_hdr
acpi_cpu_id	acpi.h	/^			uint8_t  acpi_cpu_id;$/;"	m	struct:MADTEntry::__anon1::__anon2
acpi_cpu_id	acpi.h	/^			uint8_t  acpi_cpu_id;$/;"	m	struct:MADTEntry::__anon1::__anon5
acpi_disable	acpi.h	/^	uint8_t  acpi_disable;$/;"	m	struct:ACPIFADT
acpi_enable	acpi.h	/^	uint8_t  acpi_enable;$/;"	m	struct:ACPIFADT
acpi_id	acpi.c	/^static const uint64_t acpi_id = 0x2052545020445352;$/;"	v	file:
acpi_probe	acpi.c	/^int acpi_probe(void)$/;"	f
add_dev	dev.c	/^struct dev *add_dev(uint64_t id, uint64_t type, const void *ops, char *name, $/;"	f
add_disk	ide.c	/^__attribute__((nonnull)) static struct dev *add_disk(struct disk_dev *dd)$/;"	f	file:
add_fsent	file.c	/^static void add_fsent(struct fsent *const i)$/;"	f	file:
add_inode	file.c	/^static void add_inode(struct inode *const i)$/;"	f	file:
add_listen	ip.c	/^uint64_t add_listen(struct fileh *f)$/;"	f
add_pci_device	pci.c	/^struct pci_dev *add_pci_device(int bus, int dev, int func)$/;"	f
add_to_useable_mem	frame.c	/^void add_to_useable_mem(uint8_t *const from, const uint64_t len)$/;"	f
addr	acpi.h	/^			uint32_t addr;$/;"	m	struct:MADTEntry::__anon1::__anon3
addr	eth.h	/^	uint8_t	addr[6];$/;"	m	struct:eth_dev
addr	ip.h	/^		struct sockaddr_in addr;$/;"	m	union:ifreq::__anon28	typeref:struct:ifreq::__anon28::sockaddr_in
addr	net.h	/^    uint32_t addr;$/;"	m	struct:ip_addr
addr	page.h	/^	uint64_t addr;$/;"	m	union:__anon36
addr	pci.h	/^	uint32_t addr;$/;"	m	struct:pcibar
addr	ppp.h	/^	uint8_t	addr;$/;"	m	struct:hdlc_ppp_hdr
address	acpi.h	/^		uint64_t address;$/;"	m	struct:ACPIHPET::address_structure
address	acpi.h	/^	uint64_t address;$/;"	m	struct:__anon6
address	acpi.h	/^	} __attribute__((packed)) address;$/;"	m	struct:ACPIHPET	typeref:struct:ACPIHPET::address_structure
address_interval	init.c	/^		unsigned address_interval:1;$/;"	m	struct:__anon23::__anon24	file:
address_space	acpi.h	/^	uint8_t  address_space;$/;"	m	struct:__anon6
address_space_id	acpi.h	/^		uint8_t  address_space_id;    \/\/ 0 - system memory, 1 - system I\/O$/;"	m	struct:ACPIHPET::address_structure
address_structure	acpi.h	/^	struct address_structure {$/;"	s	struct:ACPIHPET
alt	dev.c	/^bool shift = false, alt = false, ctrl = false;$/;"	v
always0	cpu.h	/^	unsigned	always0:1;$/;"	m	struct:idt_entry
always0a	cpu.h	/^	unsigned	always0a:1;$/;"	m	struct:callgate_entry
always0a	cpu.h	/^	unsigned	always0a:1;$/;"	m	struct:gdt_sysdesc_64
always0b	cpu.h	/^	unsigned	always0b:2;$/;"	m	struct:gdt_sysdesc_64
always0b	cpu.h	/^	unsigned	always0b:5;			\/\/  8-12$/;"	m	struct:callgate_entry
always0c	cpu.h	/^	uint8_t		always0c:8;$/;"	m	struct:gdt_sysdesc_64
always0d	cpu.h	/^	unsigned	always0d:5;$/;"	m	struct:gdt_sysdesc_64
always0e	cpu.h	/^	unsigned	always0e:27;$/;"	m	struct:gdt_sysdesc_64
always1	init.c	/^		unsigned always1:1;$/;"	m	struct:__anon23::__anon24	file:
aout_sym	mboot.h	/^		aout_symbol_table_t aout_sym;$/;"	m	union:multiboot_info::__anon31
aout_symbol_table	mboot.h	/^typedef struct aout_symbol_table {$/;"	s
aout_symbol_table_t	mboot.h	/^} aout_symbol_table_t;$/;"	t	typeref:struct:aout_symbol_table
apic_base	cpu.h	/^		uint64_t apic_base:40;$/;"	m	struct:__anon15::__anon16
apic_enable	cpu.h	/^		unsigned apic_enable:1;$/;"	m	struct:__anon15::__anon16
apic_id	acpi.h	/^			uint8_t  apic_id;$/;"	m	struct:MADTEntry::__anon1::__anon2
apic_id	cpu.h	/^	uint8_t	apic_id;$/;"	m	struct:cpu
apm_table	mboot.h	/^	unsigned int apm_table;$/;"	m	struct:multiboot_info
apr	cpu.h	/^	const uint32_t	apr __attribute__((aligned(16)));$/;"	m	struct:lapic
arm_boot_arch	acpi.h	/^	uint16_t arm_boot_arch;$/;"	m	struct:ACPIFADT
arp_entry	arp.h	/^struct arp_entry$/;"	s
arp_handle	arp.c	/^void arp_handle(struct net_dev *nd, uint8_t *data, uint64_t len)$/;"	f
arp_header	arp.h	/^struct arp_header$/;"	s
arp_scan	arp.c	/^void arp_scan()$/;"	f
arptable	arp.c	/^struct arp_entry *arptable;$/;"	v	typeref:struct:arp_entry
atime	failfs.h	/^	unsigned long	atime,mtime,ctime;$/;"	m	struct:_ffs_file_block
atime	kirkfs.h	/^	unsigned long	atime,mtime,ctime;$/;"	m	struct:_kfs_file_block
attrib	dev.c	/^static uint16_t attrib = 0x07;$/;"	v	file:
auto_end_int	init.c	/^		unsigned auto_end_int:1;$/;"	m	struct:__anon25::__anon26	file:
avail	page.h	/^	unsigned	avail:11;		\/\/ 51,..,62$/;"	m	struct:__anon37
avl	cpu.h	/^	unsigned	avl:1;			\/\/ 20$/;"	m	struct:gdt_entry
avl	cpu.h	/^	unsigned	avl:1;$/;"	m	struct:gdt_sysdesc_64
avl	page.h	/^	unsigned	avl:2;			\/\/ 10,11: 2 free bits i AVL$/;"	m	struct:__anon37
b	ahci.c	/^		uint32_t		b;$/;"	m	union:PORT::__anon12	file:
b	ahci.c	/^		uint32_t	b;$/;"	m	union:GHC::__anon11	file:
b	ahci.c	/^		uint32_t    b;$/;"	m	union:PORT::__anon14	file:
b	ahci.c	/^		uint32_t   b;$/;"	m	union:PORT::__anon13	file:
b	cpu.h	/^	uint64_t b;$/;"	m	union:__anon15
b	cpu.h	/^	uint64_t b;$/;"	m	union:__anon17
bar	pci.h	/^	uint32_t	bar[PCI_NUM_BARS];$/;"	m	struct:pcicfg
bars	pci.h	/^	pcibar_t bars[PCI_NUM_BARS];$/;"	m	struct:pci_dev
base	cpu.h	/^	uint64_t	base;$/;"	m	struct:gdt64_ptr
base	cpu.h	/^	uint64_t	base;$/;"	m	struct:idt64_ptr
base	ide.h	/^	uint8_t	base;$/;"	m	struct:PRD
base	page.h	/^	uint64_t	base:40;		\/\/ 12,..,50; for lowest PML 12=pat$/;"	m	struct:__anon37
base_addr_high	mboot.h	/^	unsigned int base_addr_high;$/;"	m	struct:memory_map
base_addr_low	mboot.h	/^	unsigned int base_addr_low;$/;"	m	struct:memory_map
base_high	cpu.h	/^	uint8_t		base_high;		\/\/ 24-31$/;"	m	struct:gdt_entry
base_high	cpu.h	/^	uint8_t		base_high;$/;"	m	struct:gdt_sysdesc_64
base_low	cpu.h	/^	uint16_t	base_low;		\/\/ 16-31$/;"	m	struct:gdt_entry
base_low	cpu.h	/^	uint16_t	base_low;$/;"	m	struct:gdt_sysdesc_64
base_middle	cpu.h	/^	uint8_t		base_middle;	\/\/ 00-07$/;"	m	struct:gdt_entry
base_middle	cpu.h	/^	uint8_t		base_middle;$/;"	m	struct:gdt_sysdesc_64
base_very_high	cpu.h	/^	uint32_t	base_very_high;$/;"	m	struct:gdt_entry_high
base_very_high	cpu.h	/^	uint32_t	base_very_high;$/;"	m	struct:gdt_sysdesc_64
basename	klibc.c	/^__attribute__((nonnull)) char *basename(const char *path)$/;"	f
bcast	net.h	/^    uint32_t bcast;$/;"	m	struct:ip_addr
bcount	block.h	/^	uint64_t  bcount;$/;"	m	struct:block_dev
bdev	ide.h	/^	struct block_dev *bdev; \/* parent *\/$/;"	m	struct:disk_dev	typeref:struct:disk_dev::block_dev
bif_size	ide.h	/^	uint16_t	bif_size;$/;"	m	struct:hdd_ident
bio_do_req	block.c	/^struct bio_req *bio_do_req(struct block_dev *const dev, $/;"	f
bio_poll	block.c	/^void bio_poll()$/;"	f
bio_proc	block.c	/^void bio_proc(struct block_dev *const dev)$/;"	f
bio_proc_one	block.c	/^int bio_proc_one(struct bio_req *const req)$/;"	f
bio_proc_read	block.c	/^ssize_t bio_proc_read(struct bio_req *const req)$/;"	f
bio_proc_write	block.c	/^ssize_t bio_proc_write(struct bio_req *const req)$/;"	f
bio_req	block.c	/^struct bio_req {$/;"	s	file:
bio_signal_done	block.c	/^void bio_signal_done(struct bio_req *const req)$/;"	f
bit_offset	acpi.h	/^	uint8_t  bit_offset;$/;"	m	struct:__anon6
bit_width	acpi.h	/^	uint8_t  bit_width;$/;"	m	struct:__anon6
bits	pci.h	/^			uint8_t bits;$/;"	m	struct:pcibar::__anon39::__anon41
bits_ELF_PF	elf64.h	/^const char *bits_ELF_PF[] = {$/;"	v
bits_IDE_STAT	ide.c	/^static const char *bits_IDE_STAT[] = {$/;"	v	file:
bits_PF	cpu.h	/^const char *bits_PF[] = {$/;"	v
bits_SHF	elf64.h	/^const char *bits_SHF[] = {$/;"	v
bits_fadt_flags	acpi.c	/^static const char *bits_fadt_flags[] = {$/;"	v	file:
bits_fadt_iapc_boot_arch	acpi.c	/^static const char *bits_fadt_iapc_boot_arch[] = {$/;"	v	file:
bl_dev	dev.h	/^		struct block_dev *bl_dev;$/;"	m	union:dev::__anon18	typeref:struct:dev::__anon18::block_dev
blk_dev	file.h	/^		struct block_dev *blk_dev;$/;"	m	union:fileh::__anon22	typeref:struct:fileh::__anon22::block_dev
blkcnt_t	klibc.h	/^typedef unsigned long	blkcnt_t;$/;"	t
blksize_t	klibc.h	/^typedef long			blksize_t;$/;"	t
block_dev	block.h	/^struct block_dev {$/;"	s
block_ops	block.h	/^struct block_ops {$/;"	s
block_read	block.c	/^ssize_t block_read(struct block_dev *dev, char *dst, size_t len, off_t off)$/;"	f
block_size	failfs.h	/^	unsigned short	block_size;		\/* >= 512 *\/$/;"	m	struct:_ffs_superblock
block_size	kirkfs.h	/^	unsigned short	block_size;		\/* >= 512 *\/$/;"	m	struct:_kfs_superblock
block_type	failfs.h	/^	unsigned short	block_type;$/;"	m	struct:_ffs_data_block
block_type	failfs.h	/^	unsigned short	block_type;$/;"	m	struct:_ffs_file_block
block_type	failfs.h	/^	unsigned short	block_type;$/;"	m	struct:_ffs_free_block
block_type	failfs.h	/^	unsigned short	block_type;$/;"	m	struct:_ffs_superblock
block_type	kirkfs.h	/^	unsigned short	block_type;$/;"	m	struct:_kfs_data_block
block_type	kirkfs.h	/^	unsigned short	block_type;$/;"	m	struct:_kfs_file_block
block_type	kirkfs.h	/^	unsigned short	block_type;$/;"	m	struct:_kfs_free_block
block_type	kirkfs.h	/^	unsigned short	block_type;$/;"	m	struct:_kfs_superblock
block_write	block.c	/^ssize_t block_write(struct block_dev *dev, const char *src, size_t len, off_t off)$/;"	f
bool	klibc.h	/^typedef _Bool bool;$/;"	t
bool	libc.h	/^	typedef enum { false, true } bool;$/;"	t	typeref:enum:__anon29
boot_device	mboot.h	/^	unsigned int boot_device;$/;"	m	struct:multiboot_info
boot_done	init.c	/^bool boot_done = false;$/;"	v
boot_loader_name	mboot.h	/^	unsigned int boot_loader_name;$/;"	m	struct:multiboot_info
brk	libc.c	/^int brk(void *addr)$/;"	f
bsect	ide.h	/^	uint16_t bsect;$/;"	m	struct:disk_dev
bsize	block.h	/^	uint32_t  bsize;$/;"	m	struct:block_dev
buf	dev.h	/^	char buf[CON_BUFF];$/;"	m	struct:con_private
buf	dev.h	/^	char buf[CON_BUFF];$/;"	m	struct:ser_private
buf	init.c	/^		unsigned buf:1;$/;"	m	struct:__anon25::__anon26	file:
buf_type	ide.h	/^	uint16_t	buf_type;$/;"	m	struct:hdd_ident
buffer	mem.h	/^	uint8_t *buffer;$/;"	m	struct:ring_head
bus	acpi.h	/^			uint8_t  bus;$/;"	m	struct:MADTEntry::__anon1::__anon4
bus	pci.h	/^	uint8_t bus, dev, func;$/;"	m	struct:pci_dev
busybox	busybox.h	/^unsigned char busybox[] = {$/;"	v
busybox_len	busybox.h	/^unsigned int busybox_len = 1045992;$/;"	v
bytes_per_sector	ide.h	/^	uint16_t	bytes_per_sector;$/;"	m	struct:hdd_ident
bytes_per_track	ide.h	/^	uint16_t	bytes_per_track;$/;"	m	struct:hdd_ident
c	ide.h	/^	uint16_t c,h,s;$/;"	m	struct:disk_dev
calc_div	mem.c	/^static void calc_div(const uint64_t len, int *const div, char *const suf)$/;"	f	file:
callgate_entry	cpu.h	/^struct callgate_entry$/;"	s
cap_id	hpet.h	/^		uint64_t cap_id;$/;"	m	union:hpet::__anon42
capability	ide.h	/^	uint8_t	capability;$/;"	m	struct:hdd_ident
ce	cpu.h	/^	unsigned	ce:1;			\/\/ 10		CS:Conforming	DSExpand-Down$/;"	m	struct:gdt_entry
century	acpi.h	/^	uint8_t  century;$/;"	m	struct:ACPIFADT
cfg	pci.h	/^	pcicfg_t cfg;$/;"	m	struct:pci_dev
ch_dev	dev.h	/^		struct char_dev *ch_dev;$/;"	m	union:dev::__anon18	typeref:struct:dev::__anon18::char_dev
char_dev	char.h	/^struct char_dev {$/;"	s
char_dev	file.h	/^		struct char_dev	 *char_dev;$/;"	m	union:fileh::__anon22	typeref:struct:fileh::__anon22::char_dev
char_ops	char.h	/^struct char_ops {$/;"	s
check	ip.h	/^	uint16_t check;$/;"	m	struct:icmp_hdr
checksum	ip.c	/^uint16_t checksum(uint16_t *data, uint32_t len)$/;"	f
checksum	ip.h	/^	uint16_t checksum;$/;"	m	struct:ip_hdr
checksum	mboot.h	/^    unsigned int checksum;$/;"	m	struct:multiboot_header
child	failfs.h	/^	unsigned int	child;			\/* 1st child dirent             *\/$/;"	m	struct:_ffs_file_block
child	file.h	/^	struct fsent *child;	\/* in the case of soft links, this is the target    *\/$/;"	m	struct:fsent	typeref:struct:fsent::fsent
child_ino	file.h	/^	ino_t	child_ino;$/;"	m	struct:fsent
childi	ramfs.h	/^	ino_t childi;$/;"	m	struct:ramfs_ino
chip_version_lo	pcnet.h	/^	uint32_t chip_version_lo;$/;"	m	struct:pcnet_private
chip_version_up	pcnet.h	/^	uint32_t chip_version_up;$/;"	m	struct:pcnet_private
chksum	tcp.h	/^	uint16_t  chksum;$/;"	m	struct:tcp_hdr
class_code	pci.h	/^	uint8_t	class_code;$/;"	m	struct:pcicfg
clear_frame	frame.c	/^void clear_frame(const uint8_t *const addr)$/;"	f
clear_n_frames	frame.c	/^void clear_n_frames(const uint8_t *const addr, const uint64_t number_of_frames)$/;"	f
cli	cpu.h	6;"	d
clone_mm	page.c	/^void clone_mm(pt_t *const old_pt4, pt_t *const new_pt4, void *const owner, const bool cow_existing)$/;"	f
close	eth.h	/^	uint64_t (*close)(struct eth_dev *d) __attribute__((nonnull));$/;"	m	struct:eth_ops
close	file.h	/^	int   (*close)   (struct task  *, struct fileh *                                                        )__attribute__((nonnull(2)));$/;"	m	struct:fs_ops
close_inode	file.c	/^static void close_inode(struct inode *const i)$/;"	f	file:
cls	dev.c	/^void cls(void)$/;"	f
cmd_reg	pci.h	/^	uint16_t	cmd_reg;$/;"	m	struct:pcicfg
cmdline	mboot.h	/^	unsigned int cmdline;$/;"	m	struct:multiboot_info
cnt	ide.h	/^	int	cnt;$/;"	m	struct:disk_dev
cnt	ide.h	/^	uint16_t	cnt;$/;"	m	struct:PRD
code	ip.h	/^	uint8_t code;$/;"	m	struct:icmp_hdr
code_end	proc.h	/^	void	*code_end;$/;"	m	struct:task
code_start	proc.h	/^	void	*code_start;$/;"	m	struct:task
command_sets	ide.h	/^	uint16_t	command_sets;$/;"	m	struct:hdd_ident
comp	hpet.h	/^		uint64_t comp;$/;"	m	struct:hpet::__anon46
comparator_count	acpi.h	/^	unsigned comparator_count:5;$/;"	m	struct:ACPIHPET
con_dev	dev.c	/^struct char_dev *con_dev = NULL;$/;"	v	typeref:struct:char_dev
con_init	dev.c	/^int con_init(struct char_dev *dev)$/;"	f
con_pending	dev.c	/^ssize_t con_pending(struct char_dev *dev)$/;"	f
con_private	dev.h	/^struct con_private {$/;"	s
con_read	dev.c	/^ssize_t con_read(struct char_dev *_dev, char *dest, size_t len)$/;"	f
con_write	dev.c	/^ssize_t con_write(struct char_dev *const _dev, const char *const src, const size_t len)$/;"	f
conf	hpet.h	/^			uint64_t conf;$/;"	m	union:hpet::__anon46::__anon47
conf	hpet.h	/^		uint64_t conf;$/;"	m	union:hpet::__anon44
config	ide.h	/^	uint16_t	config;$/;"	m	struct:hdd_ident
config_table	mboot.h	/^	unsigned int config_table;$/;"	m	struct:multiboot_info
console_char_ops	dev.c	/^const struct char_ops console_char_ops = {$/;"	v	typeref:struct:char_ops
cont	ppp.h	/^	uint8_t	cont;$/;"	m	struct:hdlc_ppp_hdr
copy_to_user	mem.c	/^void copy_to_user(uint8_t *const dst, const struct task *const task, const uint8_t *const data, const uint64_t len)$/;"	f
count	file.h	/^	int			count;$/;"	m	struct:inode
count	file.h	/^	int     count;$/;"	m	struct:fsent
count_size_cap	hpet.h	/^			unsigned count_size_cap:1;$/;"	m	struct:hpet::__anon42::__anon43
counter_clk	hpet.h	/^			unsigned counter_clk:32;$/;"	m	struct:hpet::__anon42::__anon43
counter_size	acpi.h	/^	unsigned counter_size:1;$/;"	m	struct:ACPIHPET
cow	page.h	/^	unsigned	cow:1;			\/\/ 9: 1 bit of AVL$/;"	m	struct:__anon37
cpu	cpu.h	/^struct cpu {$/;"	s
cpu_init	init.c	/^static void cpu_init(void)$/;"	f	file:
cpu_sw_slp	acpi.h	/^		unsigned cpu_sw_slp:1;$/;"	m	struct:__anon7::__anon8
cpus	cpu.c	/^struct cpu cpus[MAX_CPU];$/;"	v	typeref:struct:cpu
crap	proc.h	/^	uint64_t	crap;$/;"	m	struct:rusage
crap0	mboot.h	/^	unsigned int crap0;$/;"	m	struct:aout_symbol_table
crap0	mboot.h	/^	unsigned int crap0;$/;"	m	struct:elf_section_header_table
crap1	mboot.h	/^	unsigned int crap1;$/;"	m	struct:aout_symbol_table
crap1	mboot.h	/^	unsigned int crap1;$/;"	m	struct:elf_section_header_table
crap2	mboot.h	/^	unsigned int crap2;$/;"	m	struct:aout_symbol_table
crap2	mboot.h	/^	unsigned int crap2;$/;"	m	struct:elf_section_header_table
crap3	mboot.h	/^	unsigned int crap3;$/;"	m	struct:aout_symbol_table
crap3	mboot.h	/^	unsigned int crap3;$/;"	m	struct:elf_section_header_table
create	file.h	/^	ino_t (*create)  (struct task  *, struct mount *, struct fileh *, int, mode_t, dev_t, void **     )__attribute__((nonnull(2,3,7)));$/;"	m	struct:fs_ops
create_fsent	file.c	/^struct fsent *create_fsent(struct mount *const mnt, struct fsent *const parent, ino_t ino, int *const error, const char *const new_name, const bool is_new)$/;"	f
create_link	file.c	/^static int create_link(struct task *const tsk, struct fsent *const cwd, const char *name, struct mount *const mnt, const ino_t dest, struct fsent **ret)$/;"	f	file:
create_page_entry_1g	page.c	/^bool create_page_entry_1g(pt_t *const pt4, const uint64_t _virt, $/;"	f
create_page_entry_2m	page.c	/^bool create_page_entry_2m(pt_t *const pt4, const uint64_t _virt, $/;"	f
create_page_entry_4k	page.c	/^bool create_page_entry_4k(pt_t *const pt4, const uint64_t _virt, $/;"	f
create_tasks	init.c	/^static void create_tasks(bool has_root)$/;"	f	file:
cs	cpu.h	/^	uint64_t	cs;						\/\/ 0xb0$/;"	m	struct:regs
cst_cnt	acpi.h	/^	uint8_t  cst_cnt;$/;"	m	struct:ACPIFADT
ctime	failfs.h	/^	unsigned long	atime,mtime,ctime;$/;"	m	struct:_ffs_file_block
ctime	kirkfs.h	/^	unsigned long	atime,mtime,ctime;$/;"	m	struct:_kfs_file_block
ctrl	dev.c	/^bool shift = false, alt = false, ctrl = false;$/;"	v
cur	block.c	/^	struct sector 		*first,*last,*cur;$/;"	m	struct:bio_req	typeref:struct:bio_req::	file:
cur_capacity0	ide.h	/^	uint16_t	cur_capacity0;$/;"	m	struct:hdd_ident
cur_capacity1	ide.h	/^	uint16_t	cur_capacity1;$/;"	m	struct:hdd_ident
cur_cyl	ide.h	/^	uint16_t	cur_cyl;$/;"	m	struct:hdd_ident
cur_heads	ide.h	/^	uint16_t	cur_heads;$/;"	m	struct:hdd_ident
cur_sectors	ide.h	/^	uint16_t	cur_sectors;$/;"	m	struct:hdd_ident
cur_x	dev.c	/^static uint8_t cur_x = 0;$/;"	v	file:
cur_y	dev.c	/^static uint8_t cur_y = 0;$/;"	v	file:
curtask	proc.c	/^uint64_t	curtask = 0;$/;"	v
cwd	proc.h	/^	struct iname    *cwd;$/;"	m	struct:task	typeref:struct:task::iname
cwr	tcp.h	/^	unsigned    cwr:1;$/;"	m	struct:tcp_hdr
cyl	ide.h	/^	uint16_t	cyl;$/;"	m	struct:hdd_ident
cylinders	mboot.h	/^	unsigned short cylinders;$/;"	m	struct:__anon32
data	block.c	/^	char	  			*data;$/;"	m	struct:bio_req	file:
data	block.c	/^	char	  		*data;$/;"	m	struct:sector	file:
data	elf64.h	/^	void *data;$/;"	m	struct:elf_segment
data	failfs.h	/^	unsigned char	data[];$/;"	m	struct:_ffs_data_block
data	failfs.h	/^	unsigned int	data;			\/* first data block  *\/$/;"	m	struct:_ffs_file_block
data	failfs.h	/^	unsigned long	data[];		\/* bitfield: 64*4*8 = 2048 blocks *\/$/;"	m	struct:_ffs_free_block
data	kirkfs.h	/^	unsigned char	data[0];$/;"	m	struct:_kfs_data_block
data	kirkfs.h	/^	unsigned char	data[0];$/;"	m	struct:_kfs_file_block
data	kirkfs.h	/^	unsigned char	data[0];$/;"	m	struct:_kfs_superblock
data	kirkfs.h	/^	unsigned long	data[64];		\/* 64*4*8 = 2048 blocks *\/$/;"	m	struct:_kfs_free_block
data	mem.h	/^	int data;$/;"	m	struct:ring_head
data	pcnet.c	/^	uint8_t	data[1500];$/;"	m	struct:eth_frame	file:
data	ram.h	/^	unsigned char	*data;$/;"	m	struct:ramdisk
data	ramfs.h	/^	const unsigned char *const data;$/;"	m	struct:ramfs_ino
data_end	proc.h	/^	void	*data_end;$/;"	m	struct:task
data_offset	tcp.h	/^	unsigned    data_offset:4;$/;"	m	struct:tcp_hdr
data_start	proc.h	/^	void	*data_start;$/;"	m	struct:task
day_alrm	acpi.h	/^	uint8_t  day_alrm;$/;"	m	struct:ACPIFADT
decode_facp	acpi.c	/^__attribute__((nonnull)) static void decode_facp(struct ACPIFADT *h)$/;"	f	file:
decode_flags	page.c	/^void decode_flags(const pe_t *const pe)$/;"	f
decode_hpet	acpi.c	/^__attribute__((nonnull)) static void decode_hpet(struct ACPIHPET *const h)$/;"	f	file:
decode_madt	acpi.c	/^__attribute__((nonnull)) static void decode_madt(struct ACPIMADT *const h)$/;"	f	file:
decode_sdt	acpi.c	/^__attribute__((nonnull)) static void decode_sdt(const struct ACPISDTHeader *const h)$/;"	f	file:
def	cpu.h	/^	unsigned	def:1;			\/\/ 22		CS:1=32B		DS:				SS:1=32B$/;"	m	struct:gdt_entry
def_isr	intr.S	/^def_isr:$/;"	l
delay	cpu.c	/^uint16_t delay;$/;"	v
delay_ms	dev.c	/^void delay_ms(uint32_t ms)$/;"	f
delete_one	file.c	/^static void delete_one(struct fsent *ent)$/;"	f	file:
desc	mem.h	/^	char		desc[DESC_LEN];$/;"	m	struct:_kp_node
det	ahci.c	/^	unsigned det:4;$/;"	m	struct:SSTS	file:
dev	arp.h	/^	struct	net_dev	*dev;$/;"	m	struct:arp_entry	typeref:struct:arp_entry::net_dev
dev	block.c	/^	struct block_dev 	*dev;$/;"	m	struct:bio_req	typeref:struct:bio_req::block_dev	file:
dev	dev.h	/^struct dev {$/;"	s
dev	eth.h	/^	struct dev				*dev;$/;"	m	struct:eth_dev	typeref:struct:eth_dev::dev
dev	file.h	/^		void			 *dev;$/;"	m	union:fileh::__anon22
dev	file.h	/^	struct block_dev    *dev;$/;"	m	struct:mount	typeref:struct:mount::block_dev
dev	ip.c	/^	struct net_dev *dev;$/;"	m	struct:ip4_route	typeref:struct:ip4_route::net_dev	file:
dev	net.h	/^    struct net_dev *dev;$/;"	m	struct:ip_addr	typeref:struct:ip_addr::net_dev
dev	pci.h	/^	uint8_t bus, dev, func;$/;"	m	struct:pci_dev
dev	pcnet.h	/^	struct pci_dev			*dev;$/;"	m	struct:pcnet_private	typeref:struct:pcnet_private::pci_dev
dev_init	init.c	/^static inline void dev_init(void)$/;"	f	file:
dev_t	klibc.h	/^typedef unsigned int    dev_t;$/;"	t
device_id	pci.h	/^	uint16_t	device_id;$/;"	m	struct:pcicfg
devid	block.h	/^	dev_t     devid;   \/\/ major|minor$/;"	m	struct:block_dev
devid	char.h	/^	uint64_t	devid;					\/\/ major|minor$/;"	m	struct:char_dev
devs	dev.c	/^struct dev *devs;$/;"	v	typeref:struct:dev
dfr	cpu.h	/^	uint32_t		dfr __attribute__((aligned(16)));$/;"	m	struct:lapic
dirname	klibc.c	/^__attribute__((nonnull)) char *dirname(const char *path)$/;"	f
dirty	page.h	/^	unsigned	dirty:1;		\/\/ 6$/;"	m	struct:__anon37
disk_dev	ide.h	/^struct disk_dev {$/;"	s
dkc_cap	acpi.h	/^		unsigned dkc_cap:1;$/;"	m	struct:__anon7::__anon8
dma_1word	ide.h	/^	uint16_t	dma_1word;$/;"	m	struct:hdd_ident
dma_mword	ide.h	/^	uint16_t	dma_mword;$/;"	m	struct:hdd_ident
dma_ultra	ide.h	/^	uint16_t	dma_ultra;$/;"	m	struct:hdd_ident
do_accept	net.c	/^int do_accept(struct task *this_task, struct fileh *f, struct sockaddr *sa, socklen_t *len)$/;"	f
do_bind	net.c	/^int do_bind(struct task *this_task, struct fileh *f, struct sockaddr *sa, socklen_t len)$/;"	f
do_brk	syscall.c	/^void *do_brk(struct task *const t, const void *const brk)$/;"	f
do_close	file.c	/^int do_close(struct fileh *const fh, struct task *const t)$/;"	f
do_close_socket	file.c	/^int do_close_socket(struct fileh *const fh, struct task *const this)$/;"	f
do_dup	file.c	/^struct fileh *do_dup(const struct fileh *const fh, struct task *const t)$/;"	f
do_exec	proc.c	/^long do_exec(struct task *const t, const char *const f, uint8_t **const code, $/;"	f
do_fork	proc.c	/^__attribute__((nonnull)) static uint64_t do_fork(const struct task *const ctask, const struct regs *const cr, $/;"	f	file:
do_listen	net.c	/^int do_listen(struct task *this_task, struct fileh *f, int32_t listen)$/;"	f
do_lseek	file.c	/^off_t do_lseek(struct fileh *const fh, const off_t off, const int whence)$/;"	f
do_mkdir	file.c	/^int do_mkdir(struct task *const tsk, const char *pathname, const mode_t mode)$/;"	f
do_mount	file.c	/^struct mount *do_mount(struct block_dev *const dev, struct fsent *const point, const struct fs_ops *const fsops)$/;"	f
do_one_pool	mem.c	/^int do_one_pool(struct task *const owner)$/;"	f
do_open	file.c	/^struct fileh *do_open(const char *const name, struct task *const tsk, const int flags, const mode_t mode, int *const err)$/;"	f
do_read	file.c	/^ssize_t do_read(struct fileh *const fh, char *const dst, const size_t len)$/;"	f
do_socket	net.c	/^struct fileh *do_socket(struct task *this_task, uint64_t family, uint64_t type, uint64_t proto)$/;"	f
do_write	file.c	/^ssize_t do_write(struct fileh *const fh, const char *const src, const size_t len)$/;"	f
dpl	cpu.h	/^	unsigned	dpl:2;			\/\/ 13-14$/;"	m	struct:gdt_entry
dpl	cpu.h	/^	unsigned	dpl:2;$/;"	m	struct:callgate_entry
dpl	cpu.h	/^	unsigned	dpl:2;$/;"	m	struct:gdt_sysdesc_64
dpl	cpu.h	/^	unsigned	dpl:2;$/;"	m	struct:idt_entry
drives_addr	mboot.h	/^	unsigned int drives_addr;$/;"	m	struct:multiboot_info
drives_length	mboot.h	/^	unsigned int drives_length;$/;"	m	struct:multiboot_info
ds	cpu.h	/^	uint64_t	ds, es, fs, gs;			\/\/ 0x00	$/;"	m	struct:regs
dsdt	acpi.h	/^	uint32_t dsdt;$/;"	m	struct:ACPIFADT
dst	ip.c	/^	uint32_t dst;$/;"	m	struct:ip4_route	file:
dst	ip.h	/^	uint32_t dst;$/;"	m	struct:ip_hdr
dst	pcnet.c	/^	uint8_t	dst[6];$/;"	m	struct:eth_frame	file:
dst	tcp.h	/^	uint32_t  dst;$/;"	m	struct:tcp_phdr
dst	tcp.h	/^	uint32_t dst;		\/\/ their IP$/;"	m	struct:tcb
dst_ack	tcp.h	/^	uint32_t dst_ack;	\/\/ our ack of them$/;"	m	struct:tcb
dst_port	tcp.h	/^	uint16_t  dst_port;$/;"	m	struct:tcp_hdr
dst_port	tcp.h	/^	uint16_t dst_port;	\/\/ their port$/;"	m	struct:tcb
dst_seq	tcp.h	/^	uint32_t dst_seq; \/\/ their initial seq$/;"	m	struct:tcb
dummy0	ide.h	/^	uint16_t	dummy0[12];$/;"	m	struct:hdd_ident
dummy1	ide.h	/^	uint16_t	dummy1[5];$/;"	m	struct:hdd_ident
dummy2	ide.h	/^	uint16_t	dummy2[38];$/;"	m	struct:hdd_ident
dump_arp	arp.c	/^void dump_arp()$/;"	f
dump_fb	failfs.c	/^static void dump_fb(const struct failfs_private *const fb)$/;"	f	file:
dump_ffb	failfs.c	/^static void dump_ffb(const ffs_file_block *const ffb)$/;"	f	file:
dump_fsent	file.c	/^static void dump_fsent(struct fsent *const start, const bool children)$/;"	f	file:
dump_fsents	file.c	/^void dump_fsents()$/;"	f
dump_listen	ip.c	/^void dump_listen(void)$/;"	f
dump_pool	mem.c	/^static void dump_pool(const kp_head *const kph)$/;"	f	file:
dump_pools	mem.c	/^void dump_pools()$/;"	f
dump_sb	failfs.c	/^static void dump_sb(const ffs_superblock *const sb)$/;"	f	file:
dump_task	proc.c	/^__attribute__((nonnull)) static void dump_task(const struct task *const t)$/;"	f	file:
dump_taskbm	frame.c	/^void dump_taskbm(void)$/;"	f
dump_tasks	proc.c	/^void dump_tasks()$/;"	f
dump_tcbs	tcp.c	/^void dump_tcbs()$/;"	f
duty_offset	acpi.h	/^	uint8_t  duty_offset;$/;"	m	struct:ACPIFADT
duty_width	acpi.h	/^	uint8_t  duty_width;$/;"	m	struct:ACPIFADT
dw2_res	ahci.c	/^	uint32_t	dw2_res;$/;"	m	struct:PRDT	file:
dw_res	ahci.c	/^	uint32_t dw_res[4];$/;"	m	struct:CommandHeader	file:
dword_io	ide.h	/^	uint16_t	dword_io;$/;"	m	struct:hdd_ident
e_cyl	disk.h	/^    uint16_t e_cyl:10;$/;"	m	struct:part
e_ehsize	elf64.h	/^	uint16_t	e_ehsize;$/;"	m	struct:__anon19
e_entry	elf64.h	/^	uint64_t	e_entry;$/;"	m	struct:__anon19
e_flags	elf64.h	/^	uint32_t	e_flags;$/;"	m	struct:__anon19
e_head	disk.h	/^    uint8_t  e_head;$/;"	m	struct:part
e_machine	elf64.h	/^	uint16_t	e_machine;$/;"	m	struct:__anon19
e_phentsize	elf64.h	/^	uint16_t	e_phentsize;$/;"	m	struct:__anon19
e_phnum	elf64.h	/^	uint16_t	e_phnum;$/;"	m	struct:__anon19
e_phoff	elf64.h	/^	uint64_t	e_phoff;$/;"	m	struct:__anon19
e_sec	disk.h	/^    uint8_t  e_sec:6;$/;"	m	struct:part
e_shentsize	elf64.h	/^	uint16_t	e_shentsize;$/;"	m	struct:__anon19
e_shnum	elf64.h	/^	uint16_t	e_shnum;$/;"	m	struct:__anon19
e_shoff	elf64.h	/^	uint64_t	e_shoff;$/;"	m	struct:__anon19
e_shstrndx	elf64.h	/^	uint16_t	e_shstrndx;$/;"	m	struct:__anon19
e_type	elf64.h	/^	uint16_t	e_type;$/;"	m	struct:__anon19
e_version	elf64.h	/^	uint32_t	e_version;$/;"	m	struct:__anon19
ecc_bytes	ide.h	/^	uint16_t	ecc_bytes;$/;"	m	struct:hdd_ident
ece	tcp.h	/^	unsigned    ece:1;$/;"	m	struct:tcp_hdr
egid	proc.h	/^	gid_t	 egid;$/;"	m	struct:task
ei_abiversion	elf64.h	/^	uint8_t	ei_abiversion;	\/\/ 8$/;"	m	struct:__anon19
ei_class	elf64.h	/^	uint8_t	ei_class;		\/\/ 4$/;"	m	struct:__anon19
ei_data	elf64.h	/^	uint8_t	ei_data;		\/\/ 5$/;"	m	struct:__anon19
ei_mag	elf64.h	/^	uint8_t	ei_mag[4];		\/\/ 0,1,2,3$/;"	m	struct:__anon19
ei_osabi	elf64.h	/^	uint8_t	ei_osabi;		\/\/ 7$/;"	m	struct:__anon19
ei_pad	elf64.h	/^	uint8_t	ei_pad[7];		\/\/ 9,10,11,12,13,14,15$/;"	m	struct:__anon19
ei_version	elf64.h	/^	uint8_t	ei_version;		\/\/ 6$/;"	m	struct:__anon19
eide_dma_min	ide.h	/^	uint16_t	eide_dma_min;$/;"	m	struct:hdd_ident
eide_dma_time	ide.h	/^	uint16_t	eide_dma_time;$/;"	m	struct:hdd_ident
eide_pio	ide.h	/^	uint16_t	eide_pio;$/;"	m	struct:hdd_ident
eide_pio_iordy	ide.h	/^	uint16_t	eide_pio_iordy;$/;"	m	struct:hdd_ident
eide_pio_modes	ide.h	/^	uint16_t	eide_pio_modes;$/;"	m	struct:hdd_ident
elf	elf64.h	/^struct elf {$/;"	s
elf	proc.h	/^	struct elf		*elf;$/;"	m	struct:task	typeref:struct:task::elf
elf64_hdr	elf64.h	/^elf64_hdr;$/;"	t	typeref:struct:__anon19
elf64_phdr	elf64.h	/^} elf64_phdr;$/;"	t	typeref:struct:__anon20
elf64_shdr	elf64.h	/^} elf64_shdr;$/;"	t	typeref:struct:__anon21
elf_sec	mboot.h	/^		elf_section_header_table_t elf_sec;$/;"	m	union:multiboot_info::__anon31
elf_section	elf64.h	/^struct elf_section {$/;"	s
elf_section_header_table	mboot.h	/^typedef struct elf_section_header_table {$/;"	s
elf_section_header_table_t	mboot.h	/^} elf_section_header_table_t;$/;"	t	typeref:struct:elf_section_header_table
elf_segment	elf64.h	/^struct elf_segment {$/;"	s
empty	cpu.h	/^	uint32_t	empty;$/;"	m	struct:gdt_entry_high
enable_cnf	hpet.h	/^			unsigned enable_cnf:1;$/;"	m	struct:hpet::__anon44::__anon45
end	mem.h	/^	uint64_t	end;$/;"	m	struct:_kp_head
end_of_kernel	end.c	/^unsigned char end_of_kernel;$/;"	v
eoi	cpu.h	/^	uint32_t		eoi __attribute__((aligned(16))); \/* WO *\/$/;"	m	struct:lapic
errn	block.c	/^	int                  errn;$/;"	m	struct:bio_req	file:
error_code	cpu.h	/^	uint64_t	error_code;				\/\/ 0xa0$/;"	m	struct:regs
error_strings	klibc.c	/^static const char *const error_strings[] = {$/;"	v	file:
error_strings_len	klibc.c	/^static const int error_strings_len = sizeof(error_strings) \/ sizeof(error_strings[0]) - 1;$/;"	v	file:
es	cpu.h	/^	uint64_t	ds, es, fs, gs;			\/\/ 0x00	$/;"	m	struct:regs
esr	cpu.h	/^	const uint32_t	esr;$/;"	m	struct:lapic
eth	pcnet.h	/^	struct eth_dev			*eth;$/;"	m	struct:pcnet_private	typeref:struct:pcnet_private::eth_dev
eth_alloc	eth.c	/^__attribute__((nonnull)) struct eth_dev *eth_alloc(void *phys, const struct eth_ops *ops)$/;"	f
eth_cnt	eth.c	/^uint8_t eth_cnt = 0;$/;"	v
eth_dev	eth.h	/^struct eth_dev {$/;"	s
eth_frame	pcnet.c	/^struct eth_frame {$/;"	s	file:
eth_free	eth.c	/^void eth_free(struct eth_dev *e)$/;"	f
eth_init	eth.c	/^uint64_t eth_init(struct net_dev *nd, void *phys, int type, struct net_proto *np)$/;"	f
eth_init_socket	eth.c	/^uint64_t eth_init_socket(struct fileh *fh, struct net_dev *nd)$/;"	f
eth_net_ops	eth.c	/^const struct net_ops eth_net_ops = {$/;"	v	typeref:struct:net_ops
eth_ops	eth.h	/^struct eth_ops {$/;"	s
eth_process	eth.c	/^uint64_t eth_process(struct net_dev *nd)$/;"	f
eth_write	eth.c	/^uint64_t eth_write(struct fileh *fh, struct net_dev *nd, char *d, $/;"	f
eths	eth.c	/^struct eth_dev *eths = NULL;$/;"	v	typeref:struct:eth_dev
euid	proc.h	/^	uid_t	 euid;$/;"	m	struct:task
exceptions	cpu.c	/^static const char *const exceptions[] = {$/;"	v	file:
execve	libc.c	/^int execve(const char *file, char *const argv[], char *const envp[])$/;"	f
execvp	libc.c	/^int execvp(const char *file, char *const argv[])$/;"	f
exit	libc.c	/^void exit(int status)$/;"	f
exit_status	proc.h	/^	int		 exit_status;$/;"	m	struct:task
extern	mboot_hdr.S	/^extern	code$/;"	l
extern	mboot_hdr.S	/^extern	data_end$/;"	l
extern	mboot_hdr.S	/^extern	kernel_end$/;"	l
extern	mboot_hdr.S	/^extern	kernel_start$/;"	l
extern	mboot_hdr.S	/^extern	loader$/;"	l
extern	mboot_hdr.S	/^extern	main$/;"	l
f	ip.h	/^	struct fileh *f;$/;"	m	struct:ip_sock	typeref:struct:ip_sock::fileh
fadt_flags	acpi.h	/^} fadt_flags;$/;"	t	typeref:union:__anon7
fadt_gas	acpi.h	/^} __attribute__((packed)) fadt_gas;$/;"	t	typeref:struct:__anon6
fadt_iapc_boot_arch	acpi.h	/^} fadt_iapc_boot_arch;$/;"	t	typeref:union:__anon9
fadt_minor_version	acpi.h	/^	uint8_t  fadt_minor_version;$/;"	m	struct:ACPIFADT
failfs_close	failfs.c	/^static int failfs_close(_Unused struct task *t,_Unused struct fileh *fh)$/;"	f	file:
failfs_create	failfs.c	/^static ino_t failfs_create(struct task *const t, struct mount *const mnt,$/;"	f	file:
failfs_find	failfs.c	/^static int failfs_find(_Unused struct task *const tsk, struct mount *const mnt, struct fsent *const cwd,$/;"	f	file:
failfs_ioctl	failfs.c	/^static int failfs_ioctl(_Unused struct task *const t,_Unused struct fileh *const fh, const uint64_t req, ...)$/;"	f	file:
failfs_link	failfs.c	/^static int failfs_link(_Unused struct task *const tsk, struct fsent *const fsent, const ino_t ino)$/;"	f	file:
failfs_mkdir	failfs.c	/^static ino_t failfs_mkdir(struct task *const t, struct mount *mnt, struct fsent *cwd,$/;"	f	file:
failfs_mount	failfs.c	/^static int failfs_mount(struct mount *const mnt)$/;"	f	file:
failfs_open	failfs.c	/^static ino_t failfs_open(_Unused struct task *const t,_Unused  struct mount *const mnt,struct fsent *const file,$/;"	f	file:
failfs_ops	failfs.c	/^const struct fs_ops failfs_ops = {$/;"	v	typeref:struct:fs_ops
failfs_private	failfs.h	/^struct failfs_private {$/;"	s
failfs_read	failfs.c	/^__attribute__((nonnull)) static ssize_t failfs_read(struct fileh *f, char *dst, size_t len, off_t from)$/;"	f	file:
failfs_sync_fsent	failfs.c	/^static int failfs_sync_fsent(struct fsent *const fsent, const int mode)$/;"	f	file:
failfs_sync_inode	failfs.c	/^static int failfs_sync_inode(struct inode *const inode, const ino_t ino, const int mode)$/;"	f	file:
failfs_umount	failfs.c	/^static int failfs_umount(struct mount *const mnt)$/;"	f	file:
failfs_write	failfs.c	/^static ssize_t failfs_write(_Unused struct fileh *f, _Unused const char *src, _Unused size_t len, _Unused off_t from)$/;"	f	file:
false	klibc.h	48;"	d
false	libc.h	/^	typedef enum { false, true } bool;$/;"	e	enum:__anon29
family	cpu.h	/^	uint8_t	family;$/;"	m	struct:cpu
family	file.h	/^	int			family;$/;"	m	struct:fileh
fd	libc.h	/^	int fd;$/;"	m	struct:__anon30
ffs_block_types	failfs.h	/^enum ffs_block_types {$/;"	g
ffs_data_block	failfs.h	/^} __attribute__ ((packed)) ffs_data_block;$/;"	t	typeref:struct:_ffs_data_block
ffs_file_block	failfs.h	/^} __attribute__ ((packed)) ffs_file_block;$/;"	t	typeref:struct:_ffs_file_block
ffs_file_types	failfs.h	/^enum ffs_file_types {$/;"	g
ffs_free_block	failfs.h	/^} __attribute__ ((packed)) ffs_free_block;$/;"	t	typeref:struct:_ffs_free_block
ffs_magic	failfs.h	/^const unsigned char ffs_magic[] = "FAILFS";$/;"	v
ffs_superblock	failfs.h	/^}  __attribute__ ((packed)) ffs_superblock;$/;"	t	typeref:struct:_ffs_superblock
fgetc	libc.c	/^int fgetc(FILE *s)$/;"	f
field_value	ide.h	/^	uint16_t	field_value;$/;"	m	struct:hdd_ident
file_init	file.c	/^void file_init(void)$/;"	f
fileh	file.h	/^struct fileh {$/;"	s
fin	tcp.h	/^	unsigned    fin:1;$/;"	m	struct:tcp_hdr
find	file.h	/^	int   (*find)    (struct task  *, struct mount *, struct fsent *, const char *  , struct fsent ** )__attribute__((nonnull(2,4,5)));$/;"	m	struct:fs_ops
find_arp_entry	arp.c	/^struct arp_entry *find_arp_entry(uint32_t ip)$/;"	f
find_dev	dev.c	/^void *find_dev(uint64_t id, uint64_t type)$/;"	f
find_dev_ip	net.c	/^struct net_dev *find_dev_ip(uint32_t ip)$/;"	f
find_dev_name	dev.c	/^struct dev *find_dev_name(const char *name, uint64_t type)$/;"	f
find_dev_route	ip.c	/^struct net_dev *find_dev_route(uint32_t dst)$/;"	f
find_frame	frame.c	/^uint8_t *find_frame(const void *const owner)$/;"	f
find_free_inode	failfs.c	/^static ino_t find_free_inode(struct mount *const mnt)$/;"	f	file:
find_free_task	proc.c	/^uint64_t find_free_task(const bool lock)$/;"	f
find_fsent	file.c	/^static struct fsent *find_fsent(struct fsent *const cwd, const char *const name, int *const error)$/;"	f	file:
find_listen	net.c	/^struct fileh *find_listen(uint16_t family, struct sockaddr *sa, uint16_t proto)$/;"	f
find_listen_ip	ip.c	/^struct fileh *find_listen_ip(struct sockaddr_in *sin, uint32_t proto)$/;"	f
find_n_frames	frame.c	/^uint8_t *find_n_frames(const unsigned long nframes, const void *const owner)$/;"	f
find_or_create	file.c	/^static struct fsent *find_or_create(struct mount *mnt, struct fsent *cwd, ino_t ino)$/;"	f	file:
find_sym	mem.c	/^const char *find_sym(const void *const addr)$/;"	f
find_tcbs	tcp.c	/^struct tcb *find_tcbs(uint32_t src, uint32_t dst, uint16_t src_port, uint16_t dst_port)$/;"	f
firmware_ctrl	acpi.h	/^	uint32_t firmware_ctrl;$/;"	m	struct:ACPIFADT
first	block.c	/^	struct sector 		*first,*last,*cur;$/;"	m	struct:bio_req	typeref:struct:bio_req::sector	file:
first	kirkfs.h	/^	unsigned char	first;$/;"	m	struct:_kfs_file_block
first	mem.h	/^	kp_node	        *first;$/;"	m	struct:_kp_head
first_normal_block	failfs.h	/^	ino_t			first_normal_block;$/;"	m	struct:failfs_private
first_zero_bit	failfs.c	/^static inline int first_zero_bit(uint64_t i)$/;"	f	file:
firsttask	proc.c	/^unsigned long firsttask = 1;$/;"	v
fix_ide_string	ide.c	/^__attribute__((nonnull)) static void fix_ide_string(uint8_t *s, uint8_t cnt)$/;"	f	file:
fix_rtc	acpi.h	/^		unsigned fix_rtc:1;$/;"	m	struct:__anon7::__anon8
flag	disk.h	/^    uint8_t  flag;$/;"	m	struct:part
flag	ppp.h	/^	uint8_t	flag;$/;"	m	struct:hdlc_ppp_hdr
flags	acpi.h	/^			uint16_t flags;$/;"	m	struct:MADTEntry::__anon1::__anon4
flags	acpi.h	/^			uint16_t flags;$/;"	m	struct:MADTEntry::__anon1::__anon5
flags	acpi.h	/^			uint32_t flags;$/;"	m	struct:MADTEntry::__anon1::__anon2
flags	acpi.h	/^	fadt_flags flags;$/;"	m	struct:ACPIFADT
flags	acpi.h	/^	uint32_t flags;$/;"	m	struct:ACPIMADT
flags	block.c	/^	uint64_t			 flags;$/;"	m	struct:bio_req	file:
flags	elf64.h	/^	int flags;$/;"	m	struct:elf_segment
flags	failfs.h	/^	unsigned long	flags;$/;"	m	struct:_ffs_file_block
flags	failfs.h	/^	unsigned long	flags;$/;"	m	struct:_ffs_free_block
flags	file.h	/^	int		flags;$/;"	m	struct:fsent
flags	file.h	/^	uint64_t	flags;	\/* O_* *\/$/;"	m	struct:fileh
flags	file.h	/^	uint64_t	flags;$/;"	m	struct:inode
flags	frame.h	/^	uint64_t	 flags;$/;"	m	struct:phys_mem_slot
flags	kirkfs.h	/^	unsigned char	flags;$/;"	m	struct:_kfs_free_block
flags	kirkfs.h	/^	unsigned long	flags;$/;"	m	struct:_kfs_file_block
flags	mboot.h	/^	unsigned int flags;$/;"	m	struct:multiboot_info
flags	mboot.h	/^    unsigned int flags;$/;"	m	struct:multiboot_header
flags	mem.h	/^	uint64_t	flags;$/;"	m	struct:_kp_node
flags	ramfs.h	/^	uint64_t flags;$/;"	m	struct:ramfs_ino
flush_fsents	file.c	/^void flush_fsents()$/;"	f
flush_size	acpi.h	/^	uint16_t flush_size;$/;"	m	struct:ACPIFADT
flush_stride	acpi.h	/^	uint16_t flush_stride;$/;"	m	struct:ACPIFADT
force_apic_cluster_model	acpi.h	/^		unsigned force_apic_cluster_model:1;$/;"	m	struct:__anon7::__anon8
force_apic_phys_dest_mode	acpi.h	/^		unsigned force_apic_phys_dest_mode:1;$/;"	m	struct:__anon7::__anon8
force_sched	proc.c	/^bool force_sched = false;$/;"	v
fork	libc.c	/^pid_t fork(void)$/;"	f
fprintf	libc.c	/^void fprintf(FILE *fp, const char *format, ...)$/;"	f
fps	proc.h	/^	struct fileh	*fps[MAX_FD];$/;"	m	struct:task	typeref:struct:task::fileh
fputc	libc.c	/^int fputc(int c, FILE *s)$/;"	f
fputs	libc.c	/^int fputs(const char *c, FILE *s)$/;"	f
frames	elf64.h	/^	uint64_t	 frames;$/;"	m	struct:elf
frames_lock	frame.c	/^static int frames_lock = 0;$/;"	v	file:
free_block	failfs.h	/^	uint64_t       *free_block;$/;"	m	struct:failfs_private
free_block	failfs.h	/^	unsigned short	free_block;		\/* 1st block containing free block list *\/$/;"	m	struct:_ffs_superblock
free_block	kirkfs.h	/^	unsigned char	free_block;		\/* block containing free block list *\/$/;"	m	struct:_kfs_superblock
free_cnt	failfs.h	/^	uint64_t		free_cnt;$/;"	m	struct:failfs_private
free_dev	dev.c	/^void free_dev(struct dev *const d)$/;"	f
free_fsent	file.c	/^static int free_fsent(struct fsent *const fsent)$/;"	f	file:
free_mm	page.c	/^void free_mm(pt_t *const pt4)$/;"	f
free_netdev	net.c	/^void free_netdev(struct net_dev *nd)$/;"	f
free_page_size	frame.c	/^unsigned long high_mem_start=0, top_of_mem=0, free_page_size=0, total_frames=0;$/;"	v
from	frame.h	/^	uint8_t		*from;$/;"	m	struct:phys_mem_slot
fs	cpu.h	/^	uint64_t	ds, es, fs, gs;			\/\/ 0x00	$/;"	m	struct:regs
fs	file.h	/^	struct mount	*fs;	\/\/ ptr to fs structure, NULL for sockets$/;"	m	struct:fileh	typeref:struct:fileh::mount
fs	file.h	/^	struct mount *fs;		\/* the filesystem containing this fsent             *\/$/;"	m	struct:fsent	typeref:struct:fsent::mount
fs_init	init.c	/^static void fs_init(void)$/;"	f	file:
fs_ops	dev.h	/^		struct fs_ops *fs_ops;$/;"	m	union:dev::__anon18	typeref:struct:dev::__anon18::fs_ops
fs_ops	file.h	/^struct fs_ops {$/;"	s
fsb_en_cnf	hpet.h	/^				unsigned fsb_en_cnf:1;$/;"	m	struct:hpet::__anon46::__anon47::__anon48
fsb_int_del_cap	hpet.h	/^				unsigned fsb_int_del_cap:1;$/;"	m	struct:hpet::__anon46::__anon47::__anon48
fsent	file.h	/^	struct fsent *fsent;	\/* the name used to open this file (NULL for sockets)        *\/$/;"	m	struct:fileh	typeref:struct:fileh::fsent
fsent	file.h	/^struct fsent {$/;"	s
fsents	file.c	/^static struct fsent *fsents;$/;"	v	typeref:struct:fsent	file:
fsents_lock	file.c	/^static int fsents_lock;$/;"	v	file:
func	pci.h	/^	uint8_t bus, dev, func;$/;"	m	struct:pci_dev
function	symtable.h	/^	const char *function;$/;"	m	struct:symtable
function	task2.c	/^int function(int a)$/;"	f
g	page.h	/^	gb_pe g;$/;"	m	union:__anon36
gb_pe	page.h	/^} __attribute__((packed)) gb_pe;$/;"	t	typeref:struct:__anon35
gdt	cpu.c	/^volatile struct gdt_entry	gdt[GDT_SIZE]	__attribute__((aligned (16)));$/;"	v	typeref:struct:gdt_entry
gdt64_ptr	cpu.h	/^struct gdt64_ptr$/;"	s
gdt_desc	mboot.S	/^gdt_desc:$/;"	l
gdt_desc_end	mboot.S	/^gdt_desc_end:$/;"	l
gdt_entry	cpu.h	/^struct gdt_entry$/;"	s
gdt_entry_high	cpu.h	/^struct gdt_entry_high$/;"	s
gdt_flush	cpu.c	/^void gdt_flush(void)$/;"	f
gdt_sel	mboot.S	/^gdt_sel:	$/;"	l
gdt_set_gate32	cpu.c	/^void gdt_set_gate32(uint8_t entry, uint32_t base, uint32_t limit, uint8_t dpl, uint8_t flag, uint8_t type)$/;"	f
gdt_set_gate64	cpu.c	/^void gdt_set_gate64(uint8_t entry, uint64_t base, uint32_t limit, uint8_t dpl, uint8_t flag, uint8_t type)$/;"	f
gdt_sysdesc_64	cpu.h	/^struct gdt_sysdesc_64 {$/;"	s
gdtcode32	mboot.S	/^gdtcode32:				; 0x4 0x20$/;"	l
gdtcode64	mboot.S	/^gdtcode64:				; 0x2 0x10$/;"	l
gdtdata32	mboot.S	/^gdtdata32:				; 0x3 0x18$/;"	l
gdtdata64	mboot.S	/^gdtdata64:				; 0x1 0x08$/;"	l
gdtnull	mboot.S	/^gdtnull:				; 0x0 0x00$/;"	l
gdtp	cpu.c	/^volatile struct gdt64_ptr	gdtp			__attribute__((aligned (16)));$/;"	v	typeref:struct:gdt64_ptr
get_cr0	cpu.h	/^static inline uint64_t get_cr0(void)$/;"	f
get_cr2	cpu.h	/^static inline uint64_t get_cr2(void)$/;"	f
get_cr3	cpu.h	/^static inline pt_t *get_cr3(void)$/;"	f
get_cr4	cpu.h	/^static inline uint64_t get_cr4(void)$/;"	f
get_pe	page.c	/^pe_t *get_pe(pt_t *const pd, const uint64_t _virt)$/;"	f
get_pe_size	page.c	/^uint64_t get_pe_size(const pt_t *const pd, const uint64_t _virt)$/;"	f
get_phys_address	page.c	/^uint64_t get_phys_address(const pt_t *const pd, const uint64_t _virt)$/;"	f
get_task	proc.c	/^struct task *get_task(const uint64_t i)$/;"	f
getch_s	dev.c	/^bool getch_s(uint16_t port, unsigned char *c)$/;"	f
getchar	libc.c	/^int getchar(void)$/;"	f
getpid	libc.c	/^pid_t getpid(void)$/;"	f
getrflags	cpu.h	11;"	d
gid	proc.h	/^	gid_t	 gid;$/;"	m	struct:task
gid_t	klibc.h	/^typedef unsigned		gid_t;$/;"	t
global	acpi.h	/^			uint32_t global;$/;"	m	struct:MADTEntry::__anon1::__anon3
global	page.h	/^	unsigned	global:1;		\/\/ 8$/;"	m	struct:__anon37
global_tss	cpu.c	/^volatile struct tss_64		global_tss		__attribute__((aligned (16)));$/;"	v	typeref:struct:tss_64
gousermode	intr.S	/^gousermode:$/;"	l
gpe0_blk	acpi.h	/^	uint32_t gpe0_blk;$/;"	m	struct:ACPIFADT
gpe0_blk_len	acpi.h	/^	uint8_t  gpe0_blk_len;$/;"	m	struct:ACPIFADT
gpe1_base	acpi.h	/^	uint8_t  gpe1_base;$/;"	m	struct:ACPIFADT
gpe1_blk	acpi.h	/^	uint32_t gpe1_blk;$/;"	m	struct:ACPIFADT
gpe1_blk_len	acpi.h	/^	uint8_t  gpe1_blk_len;$/;"	m	struct:ACPIFADT
granularity	cpu.h	/^	unsigned	granularity:1;	\/\/ 23$/;"	m	struct:gdt_entry
granularity	cpu.h	/^	unsigned	granularity:1;$/;"	m	struct:gdt_sysdesc_64
group	failfs.h	/^	unsigned int	group;$/;"	m	struct:_ffs_file_block
group	kirkfs.h	/^	unsigned long	group;$/;"	m	struct:_kfs_file_block
grow_page	page.c	/^int grow_page(struct task *const ctsk, void *const addr, pt_t *const pt)$/;"	f
gs	cpu.h	/^	uint64_t	ds, es, fs, gs;			\/\/ 0x00	$/;"	m	struct:regs
gsbase	proc.h	/^	void	*gsbase;$/;"	m	struct:task
gsi	acpi.h	/^			uint32_t gsi;$/;"	m	struct:MADTEntry::__anon1::__anon4
gw	ip.c	/^	uint32_t gw;$/;"	m	struct:ip4_route	file:
h	acpi.h	/^	const struct ACPISDTHeader h;$/;"	m	struct:ACPIFADT	typeref:struct:ACPIFADT::ACPISDTHeader
h	acpi.h	/^	const struct ACPISDTHeader h;$/;"	m	struct:ACPIHPET	typeref:struct:ACPIHPET::ACPISDTHeader
h	acpi.h	/^	const struct ACPISDTHeader h;$/;"	m	struct:ACPIMADT	typeref:struct:ACPIMADT::ACPISDTHeader
h	acpi.h	/^	const struct ACPISDTHeader h;$/;"	m	struct:ACPIRSDT	typeref:struct:ACPIRSDT::ACPISDTHeader
h	acpi.h	/^	const struct ACPISDTHeader h;$/;"	m	struct:ACPIXSDT	typeref:struct:ACPIXSDT::ACPISDTHeader
h	elf64.h	/^	elf64_hdr	h;$/;"	m	struct:elf
h	ide.h	/^	uint16_t c,h,s;$/;"	m	struct:disk_dev
handle_frame	pcnet.c	/^__attribute__((nonnull)) void handle_frame(struct eth_dev *e, struct net_dev *nd,$/;"	f
hardware_rev_id	acpi.h	/^	uint8_t  hardware_rev_id;$/;"	m	struct:ACPIHPET
hdd_ident	ide.h	/^struct hdd_ident {$/;"	s
hdlc_ppp_hdr	ppp.h	/^struct hdlc_ppp_hdr {$/;"	s
hdr	elf64.h	/^	elf64_phdr	hdr;$/;"	m	struct:elf_segment
hdr	elf64.h	/^	elf64_shdr hdr;$/;"	m	struct:elf_section
hdr	tcp.h	/^	struct  tcp_hdr hdr;$/;"	m	struct:tcp_phdr	typeref:struct:tcp_phdr::tcp_hdr
hdr	tcp.h	/^	struct tcp_hdr	hdr;$/;"	m	struct:tcp_buf	typeref:struct:tcp_buf::tcp_hdr
head	dev.h	/^	int head;$/;"	m	struct:con_private
head	dev.h	/^	int head;$/;"	m	struct:ser_private
head	failfs.h	/^	unsigned int	head;			\/* should be a ffs_file_block *\/$/;"	m	struct:_ffs_data_block
head	kirkfs.h	/^	unsigned char	head;$/;"	m	struct:_kfs_data_block
head	mem.h	/^	struct _kp_head		*head;$/;"	m	struct:_kp_node	typeref:struct:_kp_node::_kp_head
header_type	pci.h	/^	uint8_t	header_type;$/;"	m	struct:pcicfg
headless	acpi.h	/^		unsigned headless:1;$/;"	m	struct:__anon7::__anon8
heads	ide.h	/^	uint16_t	heads;$/;"	m	struct:hdd_ident
heads	mboot.h	/^	unsigned char  heads;$/;"	m	struct:__anon32
heap_end	proc.h	/^	void	*heap_end;$/;"	m	struct:task
heap_start	proc.h	/^	void	*heap_start;$/;"	m	struct:task
high_mem_start	frame.c	/^unsigned long high_mem_start=0, top_of_mem=0, free_page_size=0, total_frames=0;$/;"	v
highaddr	elf64.h	/^	uint64_t	 highaddr;$/;"	m	struct:elf
hlen	arp.h	/^	uint8_t	hlen;$/;"	m	struct:arp_header
hlen	ip.h	/^	unsigned hlen:4;$/;"	m	struct:ip_hdr
hlt	cpu.h	8;"	d
hpet	hpet.h	/^struct hpet {$/;"	s
hpet_number	acpi.h	/^	uint8_t  hpet_number;$/;"	m	struct:ACPIHPET
htonl	klibc.c	/^uint32_t htonl(uint32_t word)$/;"	f
htons	klibc.c	/^uint16_t htons(uint16_t word)$/;"	f
htype	arp.h	/^	uint16_t	htype;$/;"	m	struct:arp_header
hw	ppp.h	/^	struct char_dev *hw;$/;"	m	struct:ppp_private	typeref:struct:ppp_private::char_dev
hw	slip.h	/^	struct char_dev *hw;$/;"	m	struct:slip_private	typeref:struct:slip_private::char_dev
hw_reduced_acpi	acpi.h	/^		unsigned hw_reduced_acpi:1;$/;"	m	struct:__anon7::__anon8
hyp_vend_id	acpi.h	/^	uint64_t hyp_vend_id;$/;"	m	struct:ACPIFADT
i8042	acpi.h	/^		unsigned i8042:1;$/;"	m	struct:__anon9::__anon10
iapc_boot_arch	acpi.h	/^	fadt_iapc_boot_arch iapc_boot_arch;$/;"	m	struct:ACPIFADT
icmp	ip.h	/^		uint64_t icmp;$/;"	m	union:ip_sock::__anon27
icmp_hdr	ip.h	/^struct icmp_hdr {$/;"	s
icmp_recv	ip.c	/^uint64_t icmp_recv(struct net_dev *nd, uint32_t src, uint32_t dst, $/;"	f
icr	cpu.h	/^	uint64_t		icr;$/;"	m	struct:lapic
icw4	init.c	/^		unsigned icw4:1;$/;"	m	struct:__anon23::__anon24	file:
id	acpi.h	/^			uint8_t  id;$/;"	m	struct:MADTEntry::__anon1::__anon3
id	dev.h	/^	uint64_t	id;$/;"	m	struct:dev
id	disk.h	/^    uint8_t  id;$/;"	m	struct:part
id	ip.h	/^	uint16_t id;$/;"	m	struct:ip_hdr
id_reg	cpu.h	/^	const uint32_t	id_reg __attribute__((aligned(16)));$/;"	m	struct:lapic
ide_init	ide.c	/^__attribute__((nonnull)) int ide_init(struct block_dev *b)$/;"	f
ide_ops	ide.c	/^const struct block_ops ide_ops = {$/;"	v	typeref:struct:block_ops
ide_read_one	ide.c	/^__attribute__((nonnull)) static ssize_t ide_read_one(struct block_dev *b, char *dst, off_t off)$/;"	f	file:
ide_wait	ide.c	/^__attribute__((nonnull)) static bool ide_wait(uint16_t cmd, uint8_t mask, uint8_t *code)$/;"	f	file:
ide_write_one	ide.c	/^__attribute__((nonnull)) static ssize_t ide_write_one(struct block_dev *b, const char *src, off_t off)$/;"	f	file:
idle_task_code	init.c	/^static const unsigned char idle_task_code[] = {$/;"	v	file:
idt	cpu.c	/^volatile struct idt_entry	idt[IDT_SIZE]	__attribute__((aligned (16)));$/;"	v	typeref:struct:idt_entry
idt64_ptr	cpu.h	/^struct idt64_ptr$/;"	s
idt_entry	cpu.h	/^struct idt_entry$/;"	s
idt_flush	cpu.c	/^void idt_flush(void)$/;"	f
idt_main	cpu.c	/^void idt_main(volatile struct regs *const r)$/;"	f
idt_set_gate64	cpu.c	/^void idt_set_gate64(const uint8_t num, const uint64_t base, $/;"	f
idtp	cpu.c	/^volatile struct idt64_ptr	idtp			__attribute__((aligned (16)));$/;"	v	typeref:struct:idt64_ptr
ifreq	ip.h	/^struct ifreq {$/;"	s
in_addr	ip.h	/^struct in_addr {$/;"	s
init	block.h	/^	int (*init)(struct block_dev *)__attribute__((nonnull));$/;"	m	struct:block_ops
init	char.h	/^	int     (*init)(struct char_dev *)__attribute__((nonnull));$/;"	m	struct:char_ops
init	net.h	/^	uint64_t (*init)(struct net_dev *, void *phys, int type, struct net_proto *);$/;"	m	struct:net_ops
init	net.h	/^	uint64_t (*init)(struct net_proto *)__attribute__((nonnull));$/;"	m	struct:net_proto_ops
init	pcnet.h	/^	struct pcnet_init_32	*init;$/;"	m	struct:pcnet_private	typeref:struct:pcnet_private::pcnet_init_32
init_ahci	ahci.c	/^void init_ahci(struct pci_dev *d)$/;"	f
init_ide	ide.c	/^__attribute__((nonnull)) void init_ide(struct pci_dev *const d)$/;"	f
init_ide_port	ide.c	/^static void init_ide_port(uint16_t cmd, uint8_t bus)$/;"	f	file:
init_lapic	init.c	/^__attribute__((nonnull)) static void init_lapic(volatile struct lapic *l)$/;"	f	file:
init_netdev	net.c	/^uint64_t init_netdev(struct net_dev *nd, void *phys, $/;"	f
init_nic_pcnet	pcnet.c	/^__attribute__((nonnull)) uint64_t init_nic_pcnet(struct pci_dev *d)$/;"	f
init_pool	mem.c	/^void init_pool(void *const loc, const unsigned long len, const uint64_t pool)$/;"	f
init_socket	net.h	/^	uint64_t (*init_socket)(struct fileh *fh, struct net_dev *);$/;"	m	struct:net_ops
ino	file.h	/^	ino_t	ino;$/;"	m	struct:fsent
ino	ramfs.h	/^	ino_t ino;$/;"	m	struct:ramfs_ino
ino_t	klibc.h	/^typedef long			ino_t;$/;"	t
inode	file.h	/^	struct inode *inode;	\/* can be NULL *\/$/;"	m	struct:fsent	typeref:struct:fsent::inode
inode	file.h	/^	struct inode *inode;	\/* the inode the filehandle is attached to (NULL for sockets *\/$/;"	m	struct:fileh	typeref:struct:fileh::inode
inode	file.h	/^struct inode {$/;"	s
inodes	file.c	/^static struct inode *inodes;$/;"	v	typeref:struct:inode	file:
inodes_lock	file.c	/^static int inodes_lock;$/;"	v	file:
inportb	dev.c	/^uint8_t inportb (unsigned short _port)$/;"	f
inportl	dev.c	/^uint32_t inportl (unsigned short _port)$/;"	f
inportw	dev.c	/^uint16_t inportw (unsigned short _port)$/;"	f
insw	dev.h	/^__attribute__((unused)) static inline void insw (unsigned short _port, void *addr, uint64_t _cnt)$/;"	f
int16_t	klibc.h	/^typedef	short			int16_t;$/;"	t
int32_t	klibc.h	/^typedef	int				int32_t;$/;"	t
int64_t	klibc.h	/^typedef long			int64_t;$/;"	t
int8_t	klibc.h	/^typedef	char			int8_t;$/;"	t
int_enb_cnf	hpet.h	/^				unsigned int_enb_cnf:1;$/;"	m	struct:hpet::__anon46::__anon47::__anon48
int_line	pci.h	/^	uint8_t	int_line;$/;"	m	struct:pcicfg
int_num	cpu.h	/^	uint64_t	int_num;				\/\/ 0x98$/;"	m	struct:regs
int_pin	pci.h	/^	uint8_t	int_pin;$/;"	m	struct:pcicfg
int_route_cap	hpet.h	/^				unsigned int_route_cap:32;$/;"	m	struct:hpet::__anon46::__anon47::__anon48
int_route_cnf	hpet.h	/^				unsigned int_route_cnf:5;$/;"	m	struct:hpet::__anon46::__anon47::__anon48
int_type_cnf	hpet.h	/^				unsigned int_type_cnf:1;$/;"	m	struct:hpet::__anon46::__anon47::__anon48
intr	hpet.h	/^		uint64_t intr;$/;"	m	struct:hpet::__anon46
intr	hpet.h	/^	uint64_t intr;$/;"	m	struct:hpet
io	pci.h	/^		} io;$/;"	m	union:pcibar::__anon39	typeref:struct:pcibar::__anon39::__anon40
io_map_base_addr	proc.h	/^	uint16_t	io_map_base_addr;$/;"	m	struct:tss_64
io_perm_bitmap	proc.h	/^	uint8_t		io_perm_bitmap[0x2000];$/;"	m	struct:tss_64
ioapic	acpi.h	/^		} ioapic __attribute__((packed));$/;"	m	union:MADTEntry::__anon1	typeref:struct:MADTEntry::__anon1::__anon3
ioctl	file.h	/^	int (*ioctl)     (struct task  *, struct fileh *, uint64_t request, ... )__attribute__((nonnull(2)));$/;"	m	struct:fs_ops
ioctl	net.h	/^	uint64_t (*ioctl)(struct fileh *f, int cmd, void *arg);$/;"	m	struct:net_proto_ops
ip	arp.h	/^	uint32_t	ip;$/;"	m	struct:arp_entry
ip	net.h	/^	struct ip_addr	ip;$/;"	m	struct:net_dev	typeref:struct:net_dev::ip_addr
ip4_route	ip.c	/^struct ip4_route {$/;"	s	file:
ip4_table	ip.c	/^struct ip4_route *ip4_table;$/;"	v	typeref:struct:ip4_route
ip_accept	ip.c	/^int ip_accept(struct fileh *f, struct fileh *newf, struct sockaddr_in *sin, socklen_t *len)$/;"	f
ip_addr	net.h	/^struct ip_addr {$/;"	s
ip_bind	ip.c	/^int ip_bind(struct fileh *f, struct sockaddr_in *sa, socklen_t len)$/;"	f
ip_hdr	ip.h	/^struct ip_hdr {$/;"	s
ip_init	ip.c	/^uint64_t ip_init(struct net_proto *np)$/;"	f
ip_init_socket	ip.c	/^void ip_init_socket(struct fileh *f, int32_t type, int32_t proto)$/;"	f
ip_ioctl	ip.c	/^uint64_t ip_ioctl(struct fileh *f, int cmd, void *arg)$/;"	f
ip_listen	ip.c	/^int ip_listen(struct fileh *f, int32_t listen)$/;"	f
ip_proto_ops	ip.c	/^struct net_proto_ops ip_proto_ops = {$/;"	v	typeref:struct:net_proto_ops
ip_recv	ip.c	/^uint64_t ip_recv(struct net_dev *nd, struct net_proto *np, $/;"	f
ip_send	ip.c	/^uint64_t ip_send(struct net_dev *nd, uint32_t src, uint32_t dst, $/;"	f
ip_sock	ip.h	/^struct ip_sock {$/;"	s
ipm	ahci.c	/^	unsigned ipm:4;$/;"	m	struct:SSTS	file:
irq	acpi.h	/^			uint8_t  irq;$/;"	m	struct:MADTEntry::__anon1::__anon4
irr	cpu.h	/^	const uint32_t	irr[8]; \/* 256 bits *\/$/;"	m	struct:lapic
is_useable	frame.c	/^bool is_useable(const uint8_t *const ad)$/;"	f
is_valid	mem.c	/^bool is_valid(const void *const vaddr)$/;"	f
isdigit	klibc.c	/^int isdigit(int c)$/;"	f
islong	cpu.h	/^	unsigned	islong:1;		\/\/ 21$/;"	m	struct:gdt_entry
isprint	klibc.c	/^int isprint(int ch)$/;"	f
isr0	cpu.h	/^	const uint32_t	isr0 __attribute__((aligned(16)));$/;"	m	struct:lapic
isr1	cpu.h	/^	const uint32_t	isr1 __attribute__((aligned(16)));$/;"	m	struct:lapic
isr2	cpu.h	/^	const uint32_t	isr2 __attribute__((aligned(16)));$/;"	m	struct:lapic
isr3	cpu.h	/^	const uint32_t	isr3 __attribute__((aligned(16)));$/;"	m	struct:lapic
isr4	cpu.h	/^	const uint32_t	isr4 __attribute__((aligned(16)));$/;"	m	struct:lapic
isr5	cpu.h	/^	const uint32_t	isr5 __attribute__((aligned(16)));$/;"	m	struct:lapic
isr6	cpu.h	/^	const uint32_t	isr6 __attribute__((aligned(16)));$/;"	m	struct:lapic
isr7	cpu.h	/^	const uint32_t	isr7 __attribute__((aligned(16)));$/;"	m	struct:lapic
isr_low	init.c	/^		unsigned isr_low:3;$/;"	m	struct:__anon23::__anon24	file:
issegment	cpu.h	/^	unsigned	issegment:1;	\/\/ 12		CS:1			DS:1$/;"	m	struct:gdt_entry
ist	cpu.h	/^	unsigned	ist:3;$/;"	m	struct:idt_entry
ist1	proc.h	/^	uint64_t	ist1;$/;"	m	struct:tss_64
ist2	proc.h	/^	uint64_t	ist2;$/;"	m	struct:tss_64
ist3	proc.h	/^	uint64_t	ist3;$/;"	m	struct:tss_64
ist4	proc.h	/^	uint64_t	ist4;$/;"	m	struct:tss_64
ist5	proc.h	/^	uint64_t	ist5;$/;"	m	struct:tss_64
ist6	proc.h	/^	uint64_t	ist6;$/;"	m	struct:tss_64
ist7	proc.h	/^	uint64_t	ist7;$/;"	m	struct:tss_64
itoa	klibc.c	/^__attribute__((nonnull)) void itoa (char *const buffer, const int base, const uint64_t d, const bool pad, const int size)$/;"	f
itoa	libc.c	/^void itoa (char *buf, int base, unsigned long d, bool pad, int size)$/;"	f
k	page.h	/^	kb_pe k;$/;"	m	union:__anon36
kb_pe	page.h	/^} __attribute__((packed)) kb_pe;$/;"	t	typeref:struct:__anon33
kern_pool	mem.c	/^uint8_t *kern_pool[KERN_POOLS];$/;"	v
kernel_ds_end	frame.c	/^unsigned long kernel_ds_end=0;$/;"	v
kernel_pd	page.c	/^volatile struct pt_t *kernel_pd;$/;"	v	typeref:struct:pt_t
kernel_stack	init.c	/^uint8_t	kernel_stack[STACK_SIZE*2];$/;"	v
kernelsptr	proc.h	/^		void	*kernelsptr;				\/\/ 0xd8$/;"	m	struct:task
kernelstack	proc.h	/^	void	*kernelstack;$/;"	m	struct:task
kerngsbase	proc.h	/^	void	*kerngsbase;$/;"	m	struct:task
kernmain	init.c	/^__attribute__((nonnull)) void kernmain(const unsigned long magic, const multiboot_info_t *const restrict mbd)$/;"	f
kerntime	cpu.c	/^static struct timeval kerntime;$/;"	v	typeref:struct:timeval	file:
keymap	dev.c	/^const char keymap[MAX_KEYS] = $/;"	v
keymap_shift	dev.c	/^const char keymap_shift[MAX_KEYS] = $/;"	v
kfree	mem.c	/^int kfree(void *const free)$/;"	f
kfs_data_block	kirkfs.h	/^} __attribute__ ((packed)) kfs_data_block;$/;"	t	typeref:struct:_kfs_data_block
kfs_file_block	kirkfs.h	/^} __attribute__ ((packed)) kfs_file_block;$/;"	t	typeref:struct:_kfs_file_block
kfs_free_block	kirkfs.h	/^} __attribute__ ((packed)) kfs_free_block;$/;"	t	typeref:struct:_kfs_free_block
kfs_superblock	kirkfs.h	/^}  __attribute__ ((packed)) kfs_superblock;$/;"	t	typeref:struct:_kfs_superblock
kmalloc	mem.c	/^__attribute__((malloc)) void *kmalloc(const uint64_t len, const char *const desc, void *const owner, int flags)$/;"	f
kmalloc_align	mem.c	/^__attribute__((malloc)) void *kmalloc_align(const unsigned long len, const char *const desc, void *const owner, int flags)$/;"	f
kmalloc_int	mem.c	/^__attribute__((malloc)) void *kmalloc_int(const unsigned long length, const int align)$/;"	f
kmerge_free	mem.c	/^void kmerge_free(kp_node *const a, kp_node *const b)$/;"	f
kp_head	mem.h	/^} __attribute__((packed)) kp_head;$/;"	t	typeref:struct:_kp_head
kp_node	mem.h	/^}  __attribute__((packed)) kp_node;$/;"	t	typeref:struct:_kp_node
kplock	mem.c	/^int kplock[KERN_POOLS];$/;"	v
kscan	mem.c	/^void kscan(void)$/;"	f
kscan_pool	mem.c	/^void kscan_pool(const kp_head *const h)$/;"	f
lapic	acpi.h	/^		} lapic __attribute__((packed));$/;"	m	union:MADTEntry::__anon1	typeref:struct:MADTEntry::__anon1::__anon2
lapic	cpu.h	/^	volatile struct lapic *lapic;$/;"	m	struct:cpu	typeref:struct:cpu::lapic
lapic	cpu.h	/^struct lapic {$/;"	s
lapic_addr	acpi.h	/^	uint32_t lapic_addr;$/;"	m	struct:ACPIMADT
last	block.c	/^	struct sector 		*first,*last,*cur;$/;"	m	struct:bio_req	typeref:struct:bio_req::	file:
last	page.h	/^	unsigned	last:1;			\/\/ 7 for a PML3\/PML2 a 1 means no more PMLs$/;"	m	struct:__anon37
lba	ide.h	/^	uint32_t lba;$/;"	m	struct:disk_dev
lba_capacity	ide.h	/^	uint32_t	lba_capacity;$/;"	m	struct:hdd_ident
lba_high	ahci.c	/^	unsigned lba_high:8;$/;"	m	struct:SIG	file:
lba_low	ahci.c	/^	unsigned lba_low:8;$/;"	m	struct:SIG	file:
lba_mid	ahci.c	/^	unsigned lba_mid:8;$/;"	m	struct:SIG	file:
lcp_add	ppp.c	/^uint64_t lcp_add(uint8_t *buf, uint8_t *cnt, uint16_t *len, uint8_t ptype, uint8_t plen, $/;"	f
lcp_close	ppp.c	/^uint64_t lcp_close(uint8_t *buf, uint8_t *cnt, uint16_t *len)$/;"	f
lcp_init_reply	ppp.c	/^uint64_t lcp_init_reply(uint8_t *buf, uint8_t code, uint8_t id, uint8_t *cnt,$/;"	f
ldr	cpu.h	/^	uint32_t		ldr __attribute__((aligned(16)));$/;"	m	struct:lapic
leg_rt_cap	hpet.h	/^			unsigned leg_rt_cap:1;$/;"	m	struct:hpet::__anon42::__anon43
leg_rt_cnf	hpet.h	/^			unsigned leg_rt_cnf:1;$/;"	m	struct:hpet::__anon44::__anon45
legacy_devices	acpi.h	/^		unsigned legacy_devices:1;$/;"	m	struct:__anon9::__anon10
legacy_replacement	acpi.h	/^	unsigned legacy_replacement:1;$/;"	m	struct:ACPIHPET
len	acpi.h	/^	const uint8_t len;$/;"	m	struct:MADTEntry
len	block.c	/^	ssize_t 		 len;$/;"	m	struct:sector	file:
len	block.c	/^	ssize_t  			 len;$/;"	m	struct:bio_req	file:
len	failfs.h	/^	unsigned short	len;			\/* <= sb.block-size - header, elements in data *\/$/;"	m	struct:_ffs_data_block
len	failfs.h	/^	unsigned short  len;		\/* elements in data[] <= sb.block_size - header *\/$/;"	m	struct:_ffs_free_block
len	frame.h	/^	uint64_t	 len;$/;"	m	struct:phys_mem_slot
len	ip.h	/^	uint16_t len;$/;"	m	struct:ip_hdr
len	kirkfs.h	/^	unsigned short	len;$/;"	m	struct:_kfs_data_block
len	mem.h	/^	uint64_t	len;$/;"	m	struct:_kp_head
len	mem.h	/^	uint64_t	len;$/;"	m	struct:_kp_node
len	pci.h	/^	uint32_t len;$/;"	m	struct:pcibar
len	pcnet.c	/^	uint16_t	len;$/;"	m	struct:eth_frame	file:
len	ramfs.h	/^	size_t len;$/;"	m	struct:ramfs_ino
length	mem.h	/^	int length;$/;"	m	struct:ring_head
length	ram.h	/^	uint32_t		 length;$/;"	m	struct:ramdisk
length_high	mboot.h	/^	unsigned int length_high;$/;"	m	struct:memory_map
length_low	mboot.h	/^	unsigned int length_low;$/;"	m	struct:memory_map
level_triggered_int_mode	init.c	/^		unsigned level_triggered_int_mode:1;$/;"	m	struct:__anon23::__anon24	file:
limit	cpu.h	/^	uint16_t	limit;$/;"	m	struct:gdt64_ptr
limit	cpu.h	/^	uint16_t	limit;$/;"	m	struct:idt64_ptr
limit_low	cpu.h	/^	uint16_t	limit_low;		\/\/ 00-15$/;"	m	struct:gdt_entry
limit_low	cpu.h	/^	uint16_t	limit_low;$/;"	m	struct:gdt_sysdesc_64
limit_middle	cpu.h	/^	unsigned	limit_middle:4;	\/\/ 16-19$/;"	m	struct:gdt_entry
limit_middle	cpu.h	/^	unsigned	limit_middle:4;$/;"	m	struct:gdt_sysdesc_64
link	file.h	/^	int   (*link)    (struct task  *, struct fsent *, ino_t                                           )__attribute__((nonnull(2)));$/;"	m	struct:fs_ops
lint_num	acpi.h	/^			uint8_t  lint_num;$/;"	m	struct:MADTEntry::__anon1::__anon5
listen	ip.c	/^struct fileh *listen = NULL;$/;"	v	typeref:struct:fileh
listen_next	file.h	/^	struct fileh *listen_next;$/;"	m	struct:fileh	typeref:struct:fileh::fileh
lmode	mboot.S	/^lmode:$/;"	l
loader	mboot.S	/^loader:$/;"	l
loc	mem.h	/^	struct _kp_head *loc;$/;"	m	struct:_kp_head	typeref:struct:_kp_head::_kp_head
local	ip.h	/^	struct sockaddr_in local;$/;"	m	struct:ip_sock	typeref:struct:ip_sock::sockaddr_in
location	symtable.h	/^	void *location;$/;"	m	struct:symtable
lock	elf64.h	/^	uint64_t	 lock;$/;"	m	struct:elf
lock	file.h	/^	int			lock;$/;"	m	struct:inode
lock	file.h	/^	int		lock;$/;"	m	struct:fsent
lock_frames	frame.c	/^static inline void lock_frames(void)$/;"	f	file:
lock_pool	mem.c	/^static inline void lock_pool(const unsigned long pool)$/;"	f	file:
lock_tasks	proc.c	/^void lock_tasks(void)$/;"	f
low_power_s0_idle_cap	acpi.h	/^		unsigned low_power_s0_idle_cap:1;$/;"	m	struct:__anon7::__anon8
lowaddr	elf64.h	/^	uint64_t	 lowaddr;$/;"	m	struct:elf
lvt_cmci	cpu.h	/^	uint32_t		lvt_cmci;$/;"	m	struct:lapic
lvt_err	cpu.h	/^	uint32_t		lvt_err;$/;"	m	struct:lapic
lvt_lint0	cpu.h	/^	uint32_t		lvt_lint0;$/;"	m	struct:lapic
lvt_lint1	cpu.h	/^	uint32_t		lvt_lint1;$/;"	m	struct:lapic
lvt_pmcr	cpu.h	/^	uint32_t		lvt_pmcr;$/;"	m	struct:lapic
lvt_tr	cpu.h	/^	uint32_t		lvt_tr;$/;"	m	struct:lapic
lvt_tsr	cpu.h	/^	uint32_t		lvt_tsr;$/;"	m	struct:lapic
m	page.h	/^	mb_pe m;$/;"	m	union:__anon36
mac	arp.h	/^	uint8_t	mac[6];$/;"	m	struct:arp_entry
magic	failfs.h	/^	unsigned char	magic[6];$/;"	m	struct:_ffs_data_block
magic	failfs.h	/^	unsigned char   magic[6];$/;"	m	struct:_ffs_file_block
magic	failfs.h	/^	unsigned char   magic[6];$/;"	m	struct:_ffs_free_block
magic	failfs.h	/^	unsigned char   magic[6];$/;"	m	struct:_ffs_superblock
magic	kirkfs.h	/^	unsigned long	magic;$/;"	m	struct:_kfs_data_block
magic	kirkfs.h	/^	unsigned long	magic;$/;"	m	struct:_kfs_file_block
magic	kirkfs.h	/^	unsigned long	magic;$/;"	m	struct:_kfs_free_block
magic	kirkfs.h	/^	unsigned long	magic;$/;"	m	struct:_kfs_superblock
magic	mboot.h	/^    unsigned int magic;$/;"	m	struct:multiboot_header
magic	mem.h	/^	uint64_t	magic;$/;"	m	struct:_kp_head
magic	mem.h	/^	uint64_t	magic;$/;"	m	struct:_kp_node
main	hpet.h	/^	uint64_t main;$/;"	m	struct:hpet
main	task2.c	/^int main(void)$/;"	f
main	task3.c	/^int main(int ac, char *av[])$/;"	f
major	failfs.h	/^	unsigned short	major;$/;"	m	struct:_ffs_file_block
major	kirkfs.h	/^	unsigned long	major;$/;"	m	struct:_kfs_file_block
mask	ip.c	/^	uint32_t mask;$/;"	m	struct:ip4_route	file:
master	init.c	/^		unsigned master:1;$/;"	m	struct:__anon25::__anon26	file:
max_bits_fadt_flags	acpi.c	/^static const int max_bits_fadt_flags = sizeof(bits_fadt_flags)\/sizeof(bits_fadt_flags[0]) - 1;$/;"	v	file:
max_bits_fadt_iapc_boot_arch	acpi.c	/^static const int max_bits_fadt_iapc_boot_arch = sizeof(bits_fadt_iapc_boot_arch)\/sizeof(bits_fadt_iapc_boot_arch[0]) - 1;$/;"	v	file:
max_exceptions	cpu.c	/^static const int max_exceptions = sizeof(exceptions)\/sizeof(exceptions[0]) - 1;$/;"	v	file:
max_multsect	ide.h	/^	uint8_t	max_multsect;$/;"	m	struct:hdd_ident
maxino	ramfs.h	/^	long maxino;$/;"	m	struct:ramfs_super
mb_drive_t	mboot.h	/^} mb_drive_t;$/;"	t	typeref:struct:__anon32
mb_magic	mboot.S	/^mb_magic:	dq	0x0$/;"	d
mb_mem_types	init.c	/^static const char *const mb_mem_types[] = {$/;"	v	file:
mb_mem_types_size	init.c	/^static const int mb_mem_types_size = sizeof(mb_mem_types) \/ sizeof(mb_mem_types[0]);$/;"	v	file:
mb_pe	page.h	/^} __attribute__((packed)) mb_pe;$/;"	t	typeref:struct:__anon34
mb_struct	mboot.S	/^mb_struct:	dq	0x0$/;"	d
mbh	mboot_hdr.S	/^mbh:	$/;"	l
mem	pci.h	/^		} mem;$/;"	m	union:pcibar::__anon39	typeref:struct:pcibar::__anon39::__anon41
mem	pci.h	/^	bool mem;$/;"	m	struct:pcibar
mem_init	mem.c	/^bool mem_init = false;$/;"	v
mem_lower	mboot.h	/^	unsigned int mem_lower;$/;"	m	struct:multiboot_info
mem_upper	mboot.h	/^	unsigned int mem_upper;$/;"	m	struct:multiboot_info
memcpy	klibc.c	/^__attribute__((nonnull)) void *memcpy(void *const dest, const void *const src, const size_t cnt)$/;"	f
memdebug	mem.c	/^bool memdebug = false;$/;"	v
memory_map	mboot.h	/^typedef struct memory_map$/;"	s
memory_map_t	mboot.h	/^} __attribute__((packed)) memory_map_t;$/;"	t	typeref:struct:memory_map
memset	klibc.c	/^__attribute__((nonnull)) void *memset(void *const dest, const int val, const size_t count)$/;"	f
memset	libc.c	/^void *memset(void *dest, unsigned char val, size_t count)$/;"	f
memsetw	klibc.c	/^__attribute__((nonnull)) uint16_t *memsetw(uint16_t *const dest, const uint16_t val, const uint64_t cnt)$/;"	f
minimum_tick	acpi.h	/^	uint16_t minimum_tick;$/;"	m	struct:ACPIHPET
minor	failfs.h	/^	unsigned short	minor;$/;"	m	struct:_ffs_file_block
minor	kirkfs.h	/^	unsigned long	minor;$/;"	m	struct:_kfs_file_block
mkdir	file.h	/^	ino_t (*mkdir)   (struct task  *, struct mount *, struct fsent *, const char *, mode_t            )__attribute__((nonnull(2,3,4)));$/;"	m	struct:fs_ops
mktime	cpu.c	/^static uint64_t mktime(uint64_t year, uint64_t mon, uint64_t day, uint64_t hour, uint64_t min, uint64_t sec)$/;"	f	file:
mmap_addr	mboot.h	/^	unsigned int mmap_addr;$/;"	m	struct:multiboot_info
mmap_length	mboot.h	/^	unsigned int mmap_length;$/;"	m	struct:multiboot_info
mnt	file.h	/^	struct mount *mnt;			\/* device containing this inode   $/;"	m	struct:inode	typeref:struct:inode::mount
mode	mboot.h	/^	unsigned char  mode;$/;"	m	struct:__anon32
mode8086	init.c	/^		unsigned mode8086:1;$/;"	m	struct:__anon25::__anon26	file:
mode_t	klibc.h	/^typedef unsigned        mode_t;$/;"	t
model	cpu.h	/^	uint8_t	model;$/;"	m	struct:cpu
model	ide.h	/^	uint8_t	model[40];$/;"	m	struct:hdd_ident
mods_addr	mboot.h	/^	unsigned int mods_addr;$/;"	m	struct:multiboot_info
mods_count	mboot.h	/^	unsigned int mods_count;$/;"	m	struct:multiboot_info
mon_alrm	acpi.h	/^	uint8_t  mon_alrm;$/;"	m	struct:ACPIFADT
mount	file.h	/^	int (*mount)     (struct mount *) __attribute__((nonnull));$/;"	m	struct:fs_ops
mount	file.h	/^struct mount {$/;"	s
mounts	file.c	/^struct mount *mounts;$/;"	v	typeref:struct:mount
mounts_lock	file.c	/^static int mounts_lock;$/;"	v	file:
move_csr	dev.c	/^void move_csr(void)$/;"	f
mtime	failfs.h	/^	unsigned long	atime,mtime,ctime;$/;"	m	struct:_ffs_file_block
mtime	kirkfs.h	/^	unsigned long	atime,mtime,ctime;$/;"	m	struct:_kfs_file_block
mult	ide.h	/^	uint8_t  mult;$/;"	m	struct:disk_dev
multiboot_header	mboot.h	/^struct multiboot_header$/;"	s
multiboot_info	mboot.h	/^typedef struct multiboot_info$/;"	s
multiboot_info_t	mboot.h	/^} multiboot_info_t;$/;"	t	typeref:struct:multiboot_info
multisect	ide.h	/^	uint8_t	multisect;$/;"	m	struct:hdd_ident
multisect_valid	ide.h	/^	uint8_t	multisect_valid;$/;"	m	struct:hdd_ident
name	block.h	/^	const char *const name;$/;"	m	struct:block_ops
name	char.h	/^	const char *const name;$/;"	m	struct:char_ops
name	dev.h	/^	char	name[DEVNAME];$/;"	m	struct:dev
name	eth.h	/^	const char *const name;$/;"	m	struct:eth_ops
name	failfs.h	/^	char			name[128];		\/* type != FT_NORMAL *\/$/;"	m	struct:_ffs_file_block
name	file.h	/^	const char *const name;$/;"	m	struct:fs_ops
name	file.h	/^	const char name[NAME_MAX];$/;"	m	struct:fsent
name	ip.h	/^	char name[DEVNAME];$/;"	m	struct:ifreq
name	kirkfs.h	/^	unsigned char	name[128];$/;"	m	struct:_kfs_file_block
name	net.h	/^	const char *const name;$/;"	m	struct:net_ops
name	net.h	/^	const char *const name;$/;"	m	struct:net_proto_ops
name	proc.h	/^	char	 name[256];$/;"	m	struct:task
name	ramfs.h	/^	const char *const name;$/;"	m	struct:ramfs_ino
net_dev	dev.h	/^		struct net_dev *net_dev;$/;"	m	union:dev::__anon18	typeref:struct:dev::__anon18::net_dev
net_dev	file.h	/^		struct net_dev	 *net_dev;$/;"	m	union:fileh::__anon22	typeref:struct:fileh::__anon22::net_dev
net_dev	net.h	/^struct net_dev {$/;"	s
net_init	init.c	/^static void net_init(void)$/;"	f	file:
net_loop	net.c	/^void net_loop()$/;"	f
net_ops	net.h	/^struct net_ops {$/;"	s
net_proto	dev.h	/^		struct net_proto *net_proto;$/;"	m	union:dev::__anon18	typeref:struct:dev::__anon18::net_proto
net_proto	net.h	/^struct net_proto {$/;"	s
net_proto_ops	net.h	/^struct net_proto_ops {$/;"	s
netdevs	net.c	/^struct net_dev *netdevs;$/;"	v	typeref:struct:net_dev
netmask	ip.h	/^		struct sockaddr_in netmask;$/;"	m	union:ifreq::__anon28	typeref:struct:ifreq::__anon28::sockaddr_in
netmask	net.h	/^    uint32_t netmask;$/;"	m	struct:ip_addr
next	arp.h	/^	struct	arp_entry *next;$/;"	m	struct:arp_entry	typeref:struct:arp_entry::arp_entry
next	block.c	/^	struct bio_req		*next;$/;"	m	struct:bio_req	typeref:struct:bio_req::bio_req	file:
next	block.c	/^	struct sector 	*next;$/;"	m	struct:sector	typeref:struct:sector::sector	file:
next	dev.h	/^	struct dev *next;$/;"	m	struct:dev	typeref:struct:dev::dev
next	eth.h	/^	struct	eth_dev	*next;$/;"	m	struct:eth_dev	typeref:struct:eth_dev::eth_dev
next	failfs.h	/^	unsigned int	next;		\/* multiple free_blocks to cover entire device *\/$/;"	m	struct:_ffs_free_block
next	failfs.h	/^	unsigned int	next;$/;"	m	struct:_ffs_data_block
next	failfs.h	/^	unsigned int    next;           \/* next peer dirent, 0 for none *\/$/;"	m	struct:_ffs_file_block
next	file.h	/^	struct fsent *next;		\/* The list of fille fsent objects in the kernel    *\/$/;"	m	struct:fsent	typeref:struct:fsent::fsent
next	file.h	/^	struct inode *next;			\/* global linked list of inodes       *\/$/;"	m	struct:inode	typeref:struct:inode::inode
next	file.h	/^	struct mount        *next;$/;"	m	struct:mount	typeref:struct:mount::mount
next	ip.c	/^	struct ip4_route *next;$/;"	m	struct:ip4_route	typeref:struct:ip4_route::ip4_route	file:
next	kirkfs.h	/^	unsigned char	next;$/;"	m	struct:_kfs_data_block
next	kirkfs.h	/^	unsigned char	next;$/;"	m	struct:_kfs_free_block
next	mem.h	/^	struct _kp_node		*next;$/;"	m	struct:_kp_node	typeref:struct:_kp_node::_kp_node
next	net.h	/^	struct net_dev				*next;$/;"	m	struct:net_dev	typeref:struct:net_dev::net_dev
next	net.h	/^	struct net_proto			*next;$/;"	m	struct:net_proto	typeref:struct:net_proto::net_proto
next	pci.h	/^	struct pci_dev *next;$/;"	m	struct:pci_dev	typeref:struct:pci_dev::pci_dev
next	tcp.h	/^	struct tcb 		*next;$/;"	m	struct:tcb	typeref:struct:tcb::tcb
next	tcp.h	/^	struct tcp_buf	*next;$/;"	m	struct:tcp_buf	typeref:struct:tcp_buf::tcp_buf
nexti	ramfs.h	/^	ino_t nexti;$/;"	m	struct:ramfs_ino
nlink	failfs.h	/^	unsigned long	nlink;$/;"	m	struct:_ffs_file_block
nlink_t	klibc.h	/^typedef unsigned long   nlink_t;$/;"	t
nmi	acpi.h	/^		} nmi __attribute__((packed));$/;"	m	union:MADTEntry::__anon1	typeref:struct:MADTEntry::__anon1::__anon5
no_cmos_rtc	acpi.h	/^		unsigned no_cmos_rtc:1;$/;"	m	struct:__anon9::__anon10
no_msi	acpi.h	/^		unsigned no_msi:1;$/;"	m	struct:__anon9::__anon10
no_vga	acpi.h	/^		unsigned no_vga:1;$/;"	m	struct:__anon9::__anon10
noreturn	klibc.h	5;"	d
nosched	frame.c	/^unsigned long nosched=0;$/;"	v
nosched	proc.c	/^unsigned long nosched;$/;"	v
ns	tcp.h	/^	unsigned    ns:1;$/;"	m	struct:tcp_hdr
ntohl	klibc.c	/^uint32_t ntohl(uint32_t word)$/;"	f
ntohs	klibc.c	/^uint16_t ntohs(uint16_t word)$/;"	f
nullsym	mem.c	/^static const char *const nullsym = "_";$/;"	v	file:
num_blocks	failfs.h	/^	unsigned int	num_blocks;		\/* max fs size is (2^32)*512 = 2TiB *\/$/;"	m	struct:_ffs_superblock
num_blocks	kirkfs.h	/^	unsigned short	num_blocks;		\/* max fs size is 65535*256*512 = 8GiB *\/$/;"	m	struct:_kfs_superblock
num_cpus	cpu.c	/^uint8_t num_cpus = (uint8_t)1;$/;"	v
num_free_blocks	failfs.h	/^	uint64_t		num_free_blocks;$/;"	m	struct:failfs_private
num_kern_pools	mem.c	/^uint64_t num_kern_pools;$/;"	v
num_of_set_bit64	failfs.c	/^static inline int num_of_set_bit64(uint64_t i)$/;"	f	file:
num_tim_cap	hpet.h	/^			unsigned num_tim_cap:5;$/;"	m	struct:hpet::__anon42::__anon43
number	mboot.h	/^	unsigned char  number;$/;"	m	struct:__anon32
nx	page.h	/^	unsigned	nx:1;			\/\/ 63$/;"	m	struct:__anon37
objdir	Makefile	/^objdir	:= .$/;"	m
off_t	klibc.h	/^typedef long			off_t;$/;"	t
offset	block.c	/^	uint64_t			 offset;$/;"	m	struct:bio_req	file:
offset	ip.h	/^	uint16_t offset;$/;"	m	struct:ip_hdr
offset	page.h	/^	unsigned	offset:12;$/;"	m	struct:__anon33
offset	page.h	/^	unsigned	offset:21;$/;"	m	struct:__anon34
offset	page.h	/^	unsigned	offset:30;$/;"	m	struct:__anon35
ones	pcnet.h	/^	unsigned ones:4;		\/\/ 12 - 15$/;"	m	struct:pcnet_rx_16
ones	pcnet.h	/^	unsigned ones:4;		\/\/ 12 - 15$/;"	m	struct:pcnet_rx_32
ones	pcnet.h	/^	unsigned ones:4;		\/\/ 12 - 15$/;"	m	struct:pcnet_tx_16
ones	pcnet.h	/^	unsigned ones:4;		\/\/ 12 - 15$/;"	m	struct:pcnet_tx_32
op	dev.h	/^	} op;$/;"	m	struct:dev	typeref:union:dev::__anon18
open	eth.h	/^	uint64_t (*open)(struct eth_dev *d) __attribute__((nonnull));$/;"	m	struct:eth_ops
open	file.h	/^	ino_t (*open)    (struct task  *, struct mount *, struct fsent *, struct fileh *, int, mode_t, void **)__attribute__((nonnull(2,3,4)));$/;"	m	struct:fs_ops
open	libc.c	/^int open(const char *pathname, int flags)$/;"	f
open_inode	file.c	/^struct inode *open_inode(struct mount *const m, const ino_t inode, int *const error)$/;"	f
oper	arp.h	/^	uint16_t	oper;$/;"	m	struct:arp_header
ops	block.h	/^	const struct block_ops	*ops;		\/\/ block ops$/;"	m	struct:block_dev	typeref:struct:block_dev::block_ops
ops	char.h	/^	const struct char_ops	*ops;	\/\/ block ops$/;"	m	struct:char_dev	typeref:struct:char_dev::char_ops
ops	dev.h	/^		void *ops;$/;"	m	union:dev::__anon18
ops	eth.h	/^	const struct eth_ops	*ops;$/;"	m	struct:eth_dev	typeref:struct:eth_dev::eth_ops
ops	file.h	/^	const struct fs_ops *ops;$/;"	m	struct:mount	typeref:struct:mount::fs_ops
ops	net.h	/^	const struct net_ops		*ops;$/;"	m	struct:net_dev	typeref:struct:net_dev::net_ops
ops	net.h	/^	const struct net_proto_ops	*ops;$/;"	m	struct:net_proto	typeref:struct:net_proto::net_proto_ops
otherSDT	acpi.h	/^	const uint32_t otherSDT[];$/;"	m	struct:ACPIRSDT
otherSDT	acpi.h	/^	const uint64_t otherSDT[];$/;"	m	struct:ACPIXSDT
outportb	dev.c	/^void outportb (unsigned short _port, uint8_t _data)$/;"	f
outportl	dev.c	/^void outportl (uint16_t _port, uint32_t _data)$/;"	f
outportw	dev.c	/^void outportw (unsigned short _port, uint16_t _data)$/;"	f
outw	dev.h	/^__attribute__((unused)) static inline void outw (unsigned short _port, const void *addr, uint64_t _cnt)$/;"	f
owner	block.c	/^	struct task 		*owner;$/;"	m	struct:bio_req	typeref:struct:bio_req::task	file:
owner	failfs.h	/^	unsigned int	owner;$/;"	m	struct:_ffs_file_block
owner	kirkfs.h	/^	unsigned long	owner;$/;"	m	struct:_kfs_file_block
owner	mem.h	/^	struct task			*owner;$/;"	m	struct:_kp_node	typeref:struct:_kp_node::task
p_align	elf64.h	/^	uint64_t	p_align;$/;"	m	struct:__anon20
p_filesz	elf64.h	/^	uint64_t	p_filesz;$/;"	m	struct:__anon20
p_flags	elf64.h	/^	uint32_t	p_flags;$/;"	m	struct:__anon20
p_lvl2_lat	acpi.h	/^	uint16_t p_lvl2_lat;$/;"	m	struct:ACPIFADT
p_lvl2_up	acpi.h	/^		unsigned p_lvl2_up:1;$/;"	m	struct:__anon7::__anon8
p_lvl3_lat	acpi.h	/^	uint16_t p_lvl3_lat;$/;"	m	struct:ACPIFADT
p_memsz	elf64.h	/^	uint64_t	p_memsz;$/;"	m	struct:__anon20
p_offset	elf64.h	/^	uint64_t	p_offset;$/;"	m	struct:__anon20
p_paddr	elf64.h	/^	uint64_t	p_paddr;$/;"	m	struct:__anon20
p_type	elf64.h	/^	uint32_t	p_type;$/;"	m	struct:__anon20
p_vaddr	elf64.h	/^	uint64_t	p_vaddr;$/;"	m	struct:__anon20
pad	kirkfs.h	/^	unsigned char	pad[3];$/;"	m	struct:_kfs_file_block
pad	kirkfs.h	/^	unsigned short	pad;$/;"	m	struct:_kfs_free_block
pad	pci.h	/^			uint8_t pad;$/;"	m	struct:pcibar::__anon39::__anon40
pad0	ahci.c	/^	char pad0;$/;"	m	struct:BOCH	file:
pad0	failfs.h	/^	unsigned short  pad0;$/;"	m	struct:_ffs_data_block
pad0	failfs.h	/^	unsigned short  pad0;$/;"	m	struct:_ffs_free_block
pad0	kirkfs.h	/^	unsigned char	pad0;$/;"	m	struct:_kfs_data_block
pad0	kirkfs.h	/^	unsigned short	pad0;			\/* res: 32bit num_blocks *\/$/;"	m	struct:_kfs_superblock
pad0	pci.h	/^	uint8_t	pad0;$/;"	m	struct:pcicfg
pad0	proc.h	/^		uint64_t	pad0;					\/\/ 0xf8$/;"	m	struct:task
pad1	pci.h	/^	uint8_t	pad1;$/;"	m	struct:pcicfg
pad1	proc.h	/^	uint64_t pad1 __attribute__((aligned (16))); \/* it explodes if struct is not aligned *\/$/;"	m	struct:task
pad2	pci.h	/^	uint8_t	pad2;$/;"	m	struct:pcicfg
pad3	pci.h	/^	uint32_t	pad3;$/;"	m	struct:pcicfg
pad4	pci.h	/^	uint32_t	pad4;$/;"	m	struct:pcicfg
pad5	pci.h	/^	unsigned	pad5:8;$/;"	m	struct:pcicfg
pad6	pci.h	/^	uint8_t	pad6;$/;"	m	struct:pcicfg
pad7	pci.h	/^	uint8_t	pad7;$/;"	m	struct:pcicfg
padding	cpu.h	/^	uint32_t padding;$/;"	m	struct:cpu
padding	disk.h	/^    uint8_t	padding[446];$/;"	m	struct:MBR
padding	net.h	/^	uint32_t	padding[16];$/;"	m	struct:net_proto
page_protection	acpi.h	/^	uint8_t  page_protection;$/;"	m	struct:ACPIHPET
page_start	elf64.h	/^	uint8_t		*page_start;$/;"	m	struct:elf
pagebm	frame.c	/^\/*@null@*\/ uint64_t *pagebm;$/;"	v
parent	failfs.h	/^	unsigned int    parent;         \/* containing directory entry   *\/$/;"	m	struct:_ffs_file_block
parent	file.h	/^	struct fsent *parent;	\/* The directory that this entry is within          *\/$/;"	m	struct:fsent	typeref:struct:fsent::fsent
parent	tcp.h	/^	struct tcb		*parent;$/;"	m	struct:tcb	typeref:struct:tcb::tcb
parenti	ramfs.h	/^	ino_t parenti;$/;"	m	struct:ramfs_ino
part	disk.h	/^struct part$/;"	s
parts	disk.h	/^    struct	part parts[4];$/;"	m	struct:MBR	typeref:struct:MBR::part
pause	cpu.h	10;"	d
pcd	page.h	/^	unsigned	pcd:1;			\/\/ 4$/;"	m	struct:__anon37
pci_dev	pci.h	/^struct pci_dev {$/;"	s
pci_devs	pci.c	/^struct pci_dev *pci_devs = NULL;$/;"	v	typeref:struct:pci_dev
pci_exp_wak	acpi.h	/^		unsigned pci_exp_wak:1;$/;"	m	struct:__anon7::__anon8
pci_init	init.c	/^static inline void pci_init(void)$/;"	f	file:
pci_read_conf16	pci.c	/^uint16_t pci_read_conf16(uint8_t bus, uint8_t dev, uint8_t func, uint8_t reg)$/;"	f
pci_read_conf32	pci.c	/^uint32_t pci_read_conf32(uint8_t bus, uint8_t dev, uint8_t func, uint8_t reg)$/;"	f
pci_read_conf8	pci.c	/^uint8_t pci_read_conf8(uint8_t bus, uint8_t dev, uint8_t func, uint8_t reg)$/;"	f
pci_vendor_id	acpi.h	/^	uint16_t pci_vendor_id;$/;"	m	struct:ACPIHPET
pci_write_conf16	pci.c	/^void pci_write_conf16(uint8_t bus, uint8_t dev, uint8_t func, uint8_t reg, uint16_t val)$/;"	f
pci_write_conf32	pci.c	/^void pci_write_conf32(uint8_t bus, uint8_t dev, uint8_t func, uint8_t reg, uint32_t val)$/;"	f
pcibar	pci.h	/^typedef struct pcibar {$/;"	s
pcibar_t	pci.h	/^} pcibar_t;$/;"	t	typeref:struct:pcibar
pcicfg	pci.h	/^typedef struct pcicfg {$/;"	s
pcicfg_t	pci.h	/^pcicfg_t;$/;"	t	typeref:struct:pcicfg
pcie_aspm	acpi.h	/^		unsigned pcie_aspm:1;$/;"	m	struct:__anon9::__anon10
pcnet_close	pcnet.c	/^__attribute__((nonnull)) uint64_t pcnet_close(struct eth_dev *e)$/;"	f
pcnet_init_16	pcnet.h	/^struct pcnet_init_16 {$/;"	s
pcnet_init_32	pcnet.h	/^struct pcnet_init_32 {$/;"	s
pcnet_open	pcnet.c	/^__attribute__((nonnull)) uint64_t pcnet_open(struct eth_dev *e)$/;"	f
pcnet_ops	pcnet.c	/^const struct eth_ops pcnet_ops = {$/;"	v	typeref:struct:eth_ops
pcnet_poll	pcnet.c	/^__attribute__((nonnull)) uint64_t pcnet_poll(struct eth_dev *e, struct net_dev *nd)$/;"	f
pcnet_private	pcnet.h	/^struct pcnet_private {$/;"	s
pcnet_rx_16	pcnet.h	/^struct pcnet_rx_16 {$/;"	s
pcnet_rx_32	pcnet.h	/^struct pcnet_rx_32 {$/;"	s
pcnet_send	pcnet.c	/^__attribute__((nonnull)) uint64_t pcnet_send(struct eth_dev *e, char *d, uint16_t len, uint8_t dst[6])$/;"	f
pcnet_tx_16	pcnet.h	/^struct pcnet_tx_16 {$/;"	s
pcnet_tx_32	pcnet.h	/^struct pcnet_tx_32 {$/;"	s
pd	proc.h	/^	pt_t	*pd;$/;"	m	struct:task
pe_t	page.h	/^} __attribute__((packed)) pe_t;$/;"	t	typeref:struct:__anon37
pending	char.h	/^	ssize_t (*pending)(struct char_dev *)__attribute__((nonnull));$/;"	m	struct:char_ops
pending	ip.h	/^	struct sockaddr_in pending[1];$/;"	m	struct:ip_sock	typeref:struct:ip_sock::sockaddr_in
per_int_cnf	hpet.h	/^				unsigned per_int_cnf:1;$/;"	m	struct:hpet::__anon46::__anon47::__anon48
perms	failfs.h	/^	unsigned long	perms;$/;"	m	struct:_ffs_file_block
perms	kirkfs.h	/^	unsigned long	perms;$/;"	m	struct:_kfs_file_block
perms	ramfs.h	/^	mode_t perms;$/;"	m	struct:ramfs_ino
ph	elf64.h	/^	struct	elf_segment *ph;$/;"	m	struct:elf	typeref:struct:elf::elf_segment
phys	eth.h	/^	void	*phys;$/;"	m	struct:eth_dev
phys_mem_list	frame.c	/^struct phys_mem_slot phys_mem_list[MAX_PHYS_MEM_SLOTS];$/;"	v	typeref:struct:phys_mem_slot
phys_mem_slot	frame.h	/^struct phys_mem_slot {$/;"	s
pid	proc.h	/^	pid_t	 pid;$/;"	m	struct:task
pid_t	klibc.h	/^typedef int				pid_t;$/;"	t
pid_t	libc.h	/^typedef	int				pid_t;$/;"	t
plen	arp.h	/^	uint8_t	plen;$/;"	m	struct:arp_header
pm1_cnt_len	acpi.h	/^	uint8_t  pm1_cnt_len;$/;"	m	struct:ACPIFADT
pm1_evt_len	acpi.h	/^	uint8_t  pm1_evt_len;$/;"	m	struct:ACPIFADT
pm1a_cnt_blk	acpi.h	/^	uint32_t pm1a_cnt_blk;$/;"	m	struct:ACPIFADT
pm1a_evt_blk	acpi.h	/^	uint32_t pm1a_evt_blk;$/;"	m	struct:ACPIFADT
pm1b_cnt_blk	acpi.h	/^	uint32_t pm1b_cnt_blk;$/;"	m	struct:ACPIFADT
pm1b_evt_blk	acpi.h	/^	uint32_t pm1b_evt_blk;$/;"	m	struct:ACPIFADT
pm2_cnt_blk	acpi.h	/^	uint32_t pm2_cnt_blk;$/;"	m	struct:ACPIFADT
pm2_cnt_len	acpi.h	/^	uint8_t  pm2_cnt_len;$/;"	m	struct:ACPIFADT
pm_tmr_blk	acpi.h	/^	uint32_t pm_tmr_blk;$/;"	m	struct:ACPIFADT
pm_tmr_len	acpi.h	/^	uint8_t  pm_tmr_len;$/;"	m	struct:ACPIFADT
pml1_offset	page.h	/^	unsigned	pml1_offset:9;$/;"	m	struct:__anon33
pml2_offset	page.h	/^	unsigned	pml2_offset:9;$/;"	m	struct:__anon33
pml2_offset	page.h	/^	unsigned	pml2_offset:9;$/;"	m	struct:__anon34
pml3_offset	page.h	/^	unsigned	pml3_offset:9;$/;"	m	struct:__anon33
pml3_offset	page.h	/^	unsigned	pml3_offset:9;$/;"	m	struct:__anon34
pml3_offset	page.h	/^	unsigned	pml3_offset:9;$/;"	m	struct:__anon35
pml4_offset	page.h	/^	unsigned	pml4_offset:9;$/;"	m	struct:__anon33
pml4_offset	page.h	/^	unsigned	pml4_offset:9;$/;"	m	struct:__anon34
pml4_offset	page.h	/^	unsigned	pml4_offset:9;$/;"	m	struct:__anon35
point	file.h	/^	struct fsent        *point;$/;"	m	struct:mount	typeref:struct:mount::fsent
poll	eth.h	/^	uint64_t (*poll)(struct eth_dev *d, struct net_dev *nd) __attribute__((nonnull));$/;"	m	struct:eth_ops
pool	mem.h	/^	uint64_t	pool;$/;"	m	struct:_kp_head
pool_page_num	mem.c	/^uint64_t pool_page_num;$/;"	v
popcountll	klibc.c	/^int popcountll(unsigned long long x)$/;"	f
populate_dir	file.c	/^static void populate_dir(struct fsent *const cwd)$/;"	f	file:
port	dev.h	/^	uint16_t port;$/;"	m	struct:ser_private
port	ide.h	/^	int	port;$/;"	m	struct:disk_dev
ports	mboot.h	/^	unsigned char  ports[];$/;"	m	struct:__anon32
ppid	proc.h	/^	pid_t	 ppid;$/;"	m	struct:task
ppp_byte	ppp.c	/^uint8_t ppp_byte(struct char_dev *cd)$/;"	f
ppp_init	ppp.c	/^uint64_t ppp_init(struct net_dev *nd, void *phys, int type, struct net_proto *up)$/;"	f
ppp_init_sock	ppp.c	/^uint64_t ppp_init_sock(struct fileh *fh, struct net_dev *nd)$/;"	f
ppp_net_ops	ppp.c	/^struct net_ops ppp_net_ops = {$/;"	v	typeref:struct:net_ops
ppp_private	ppp.h	/^struct ppp_private {$/;"	s
ppp_process	ppp.c	/^uint64_t ppp_process(struct net_dev *nd)$/;"	f
ppp_read	ppp.c	/^uint64_t ppp_read(struct fileh *fh, struct net_dev *nd, unsigned char *dst, uint64_t len, $/;"	f
ppp_wbyte	ppp.c	/^uint64_t ppp_wbyte(struct char_dev *cd, unsigned char byte)$/;"	f
ppp_write	ppp.c	/^uint64_t ppp_write(struct fileh *fh, struct net_dev *nd, char *src, uint64_t len, $/;"	f
ppr	cpu.h	/^	const uint32_t	ppr __attribute__((aligned(16)));$/;"	m	struct:lapic
preferred_pm_profile	acpi.h	/^	uint8_t  preferred_pm_profile;$/;"	m	struct:ACPIFADT
prefs	pci.h	/^			uint8_t prefs;$/;"	m	struct:pcibar::__anon39::__anon41
present	cpu.h	/^	unsigned	present:1;		\/\/ 15$/;"	m	struct:gdt_entry
present	cpu.h	/^	unsigned	present:1;$/;"	m	struct:callgate_entry
present	cpu.h	/^	unsigned	present:1;$/;"	m	struct:gdt_sysdesc_64
present	cpu.h	/^	unsigned	present:1;$/;"	m	struct:idt_entry
present	page.h	/^	unsigned	present:1;		\/\/ 0$/;"	m	struct:__anon37
prev	failfs.h	/^	unsigned int	prev;$/;"	m	struct:_ffs_data_block
prev	failfs.h	/^	unsigned int	prev;$/;"	m	struct:_ffs_free_block
prev	kirkfs.h	/^	unsigned char	prev;$/;"	m	struct:_kfs_data_block
prev	kirkfs.h	/^	unsigned char	prev;$/;"	m	struct:_kfs_free_block
prev	mem.h	/^	struct _kp_node		*prev;$/;"	m	struct:_kp_node	typeref:struct:_kp_node::_kp_node
prev	tcp.h	/^	struct tcp_buf	*prev;$/;"	m	struct:tcp_buf	typeref:struct:tcp_buf::tcp_buf
print_bits	klibc.c	/^__attribute__((nonnull)) void print_bits(uint64_t val, const char *bits[], uint64_t max, uint8_t br)$/;"	f
print_block	block.c	/^void print_block(struct block_dev *dev)$/;"	f
print_fh	file.c	/^void print_fh(const struct fileh *fh)$/;"	f
print_frame_stats	frame.c	/^void print_frame_stats(void)$/;"	f
print_kmem_stats	mem.c	/^void print_kmem_stats(void)$/;"	f
print_mac	pcnet.c	/^void print_mac(uint8_t t[6])$/;"	f
print_mm	page.c	/^void print_mm(const pt_t *const pt4)$/;"	f
print_nd	net.c	/^void print_nd(struct net_dev *nd)$/;"	f
print_pci_dev	pci.c	/^void print_pci_dev(struct pci_dev *d)$/;"	f
print_pcnet	pcnet.c	/^void print_pcnet(struct pcnet_private *p)$/;"	f
print_reg	cpu.c	/^void print_reg(const struct regs *restrict const r)$/;"	f
print_ring	mem.c	/^void print_ring(const struct ring_head *const rh)$/;"	f
print_task	proc.c	/^void print_task(const struct task *const restrict tsk)$/;"	f
print_tasks	proc.c	/^void print_tasks(void)$/;"	f
printf	klibc.c	/^__attribute__((nonnull)) int printf(const char *const format, ...)$/;"	f
printf	libc.c	/^void printf(const char *format, ...)$/;"	f
priv	block.h	/^	void	 *priv;	   \/\/ private structure$/;"	m	struct:block_dev
priv	char.h	/^	void	*priv;					\/\/ private structure$/;"	m	struct:char_dev
priv	file.h	/^	void			*priv;	\/\/ file system private data$/;"	m	struct:fileh
priv	file.h	/^	void         *priv;			\/* private inode data from the fs     *\/$/;"	m	struct:inode
priv	file.h	/^	void   *priv;           \/* file system specific directory entry information  *\/$/;"	m	struct:fsent
priv	net.h	/^	void						*priv;$/;"	m	struct:net_dev
proc_c1	acpi.h	/^		unsigned proc_c1:1;$/;"	m	struct:__anon7::__anon8
process	net.h	/^	uint64_t (*process)(struct net_dev *);$/;"	m	struct:net_ops
process_key	dev.c	/^void process_key()$/;"	f
process_lcp	ppp.c	/^uint64_t process_lcp(uint16_t proto, struct net_dev *nd, struct char_dev *cd)$/;"	f
processed	block.c	/^	ssize_t				 processed;$/;"	m	struct:bio_req	file:
processor_is_bsp	cpu.h	/^		unsigned processor_is_bsp:1;$/;"	m	struct:__anon15::__anon16
progif	pci.h	/^	uint8_t	progif;$/;"	m	struct:pcicfg
proto	ip.h	/^	uint64_t proto;$/;"	m	struct:ip_sock
proto	ip.h	/^	uint8_t proto;$/;"	m	struct:ip_hdr
proto_init	init.c	/^static inline void proto_init(void)$/;"	f	file:
protocol	file.h	/^	int			protocol;$/;"	m	struct:fileh
protocol	tcp.h	/^	uint8_t   protocol;$/;"	m	struct:tcp_phdr
psh	tcp.h	/^	unsigned    psh:1;$/;"	m	struct:tcp_hdr
pstate_cnt	acpi.h	/^	uint8_t  pstate_cnt;$/;"	m	struct:ACPIFADT
pt_t	page.h	/^pt_t;$/;"	t	typeref:union:__anon38
ptype	arp.h	/^	uint16_t	ptype;$/;"	m	struct:arp_header
putch	dev.c	/^void putch(unsigned char c)$/;"	f
putch_s	dev.c	/^void putch_s(const uint16_t port, const unsigned char c)$/;"	f
putchar	libc.c	/^int putchar(int c)$/;"	f
puts	klibc.c	/^__attribute__((nonnull)) int puts(const char *const text)$/;"	f
putsn	klibc.c	/^__attribute__((nonnull)) int putsn(const char *const text, const size_t max)$/;"	f
pwr_button	acpi.h	/^		unsigned pwr_button:1;$/;"	m	struct:__anon7::__anon8
pwt	page.h	/^	unsigned	pwt:1;			\/\/ 3$/;"	m	struct:__anon37
r	ip.h	/^	} r;$/;"	m	struct:ifreq	typeref:union:ifreq::__anon28
r10	cpu.h	/^	uint64_t	r11, r10, r9, r8;		\/\/ 0x40$/;"	m	struct:regs
r11	cpu.h	/^	uint64_t	r11, r10, r9, r8;		\/\/ 0x40$/;"	m	struct:regs
r12	cpu.h	/^	uint64_t	r15, r14, r13, r12; 	\/\/ 0x20$/;"	m	struct:regs
r13	cpu.h	/^	uint64_t	r15, r14, r13, r12; 	\/\/ 0x20$/;"	m	struct:regs
r14	cpu.h	/^	uint64_t	r15, r14, r13, r12; 	\/\/ 0x20$/;"	m	struct:regs
r15	cpu.h	/^	uint64_t	r15, r14, r13, r12; 	\/\/ 0x20$/;"	m	struct:regs
r8	cpu.h	/^	uint64_t	r11, r10, r9, r8;		\/\/ 0x40$/;"	m	struct:regs
r9	cpu.h	/^	uint64_t	r11, r10, r9, r8;		\/\/ 0x40$/;"	m	struct:regs
ram_block_ops	ram.c	/^struct block_ops ram_block_ops = {$/;"	v	typeref:struct:block_ops
ramdisk	ram.h	/^struct ramdisk {$/;"	s
ramfs_close	ramfs.c	/^__attribute__((nonnull(2))) static int ramfs_close($/;"	f	file:
ramfs_create	ramfs.c	/^static ino_t ramfs_create(struct task *const t, struct mount *const m, struct fileh *const f, $/;"	f	file:
ramfs_find	ramfs.c	/^__attribute__((nonnull(2,4,5))) static int ramfs_find($/;"	f	file:
ramfs_ino	ramfs.h	/^struct ramfs_ino {$/;"	s
ramfs_ioctl	ramfs.c	/^__attribute__((nonnull(2))) static int ramfs_ioctl($/;"	f	file:
ramfs_mount	ramfs.c	/^__attribute__((nonnull)) static int ramfs_mount(struct mount *mnt)$/;"	f	file:
ramfs_open	ramfs.c	/^static ino_t ramfs_open($/;"	f	file:
ramfs_ops	ramfs.c	/^const struct fs_ops ramfs_ops = {$/;"	v	typeref:struct:fs_ops
ramfs_read	ramfs.c	/^__attribute__((nonnull)) ssize_t ramfs_read(struct fileh *const f, char *const dst, const size_t reqlen, const off_t from)$/;"	f
ramfs_super	ramfs.h	/^struct ramfs_super {$/;"	s
ramfs_sync_fsent	ramfs.c	/^__attribute__((nonnull)) static int ramfs_sync_fsent(struct fsent *fsent, const int mode)$/;"	f	file:
ramfs_sync_inode	ramfs.c	/^__attribute__((nonnull)) static int ramfs_sync_inode(struct inode *const inode, const ino_t ino, const int mode)$/;"	f	file:
ramfs_umount	ramfs.c	/^__attribute__((nonnull)) static int ramfs_umount($/;"	f	file:
ramfs_write	ramfs.c	/^__attribute__((nonnull)) ssize_t ramfs_write(struct fileh *f, const char *src, size_t len, off_t from)$/;"	f
rax	cpu.h	/^	uint64_t	rdx, rcx, rbx, rax;		\/\/ 0x78$/;"	m	struct:regs
rbp	cpu.h	/^	uint64_t	rdi, rsi, rbp;			\/\/ 0x60$/;"	m	struct:regs
rbx	cpu.h	/^	uint64_t	rdx, rcx, rbx, rax;		\/\/ 0x78$/;"	m	struct:regs
rcx	cpu.h	/^	uint64_t	rdx, rcx, rbx, rax;		\/\/ 0x78$/;"	m	struct:regs
rd_init	ram.c	/^__attribute__((nonnull)) int rd_init(struct block_dev *b)$/;"	f
rd_read_one	ram.c	/^__attribute__((nonnull)) static ssize_t rd_read_one(struct block_dev *b, char *target, off_t start)$/;"	f	file:
rd_write_one	ram.c	/^__attribute__((nonnull)) static ssize_t rd_write_one(struct block_dev *b, const char *source, off_t start)$/;"	f	file:
rdi	cpu.h	/^	uint64_t	rdi, rsi, rbp;			\/\/ 0x60$/;"	m	struct:regs
rdtsc	dev.c	/^inline uint64_t rdtsc(void)$/;"	f
rdx	cpu.h	/^	uint64_t	rdx, rcx, rbx, rax;		\/\/ 0x78$/;"	m	struct:regs
read	block.h	/^	ssize_t (*read)(struct block_dev *d, char *data, size_t, off_t)__attribute__((nonnull));$/;"	m	struct:block_ops
read	char.h	/^	ssize_t (*read)(struct char_dev *, char *, size_t)__attribute__((nonnull));$/;"	m	struct:char_ops
read	file.h	/^	ssize_t (*read)  (struct fileh *,       char *, size_t, off_t)__attribute__((nonnull));$/;"	m	struct:fs_ops
read	libc.c	/^ssize_t read(int fd, void *buf, size_t count)$/;"	f
read	mem.h	/^	int read;$/;"	m	struct:ring_head
readBCR	pcnet.c	/^uint32_t readBCR(uint32_t base, uint32_t index)$/;"	f
readCSR	pcnet.c	/^uint32_t readCSR(uint32_t base, uint32_t index)$/;"	f
read_msr	cpu.h	/^static inline uint64_t read_msr(const uint32_t msr)$/;"	f
read_one	block.h	/^	ssize_t (*read_one)(struct block_dev *d, char *data, off_t sector)__attribute__((nonnull));$/;"	m	struct:block_ops
readable	cpu.h	/^	unsigned	readable:1;		\/\/ 09		CS:Readable		DS:Writeable$/;"	m	struct:gdt_entry
recv	net.h	/^	uint64_t (*recv)(struct net_dev *nd, struct net_proto *, char *, uint64_t);$/;"	m	struct:net_proto_ops
recv_q	tcp.h	/^	struct tcp_buf	*recv_q;$/;"	m	struct:tcb	typeref:struct:tcb::tcp_buf
reg_size	cpu.h	/^const int reg_size = sizeof(struct regs);$/;"	v
register_bit_offset	acpi.h	/^		uint8_t  register_bit_offset;$/;"	m	struct:ACPIHPET::address_structure
register_bit_width	acpi.h	/^		uint8_t  register_bit_width;$/;"	m	struct:ACPIHPET::address_structure
regs	cpu.h	/^struct regs$/;"	s
rel_sec	disk.h	/^    uint32_t rel_sec;$/;"	m	struct:part
remote	ip.h	/^	struct sockaddr_in remote;$/;"	m	struct:ip_sock	typeref:struct:ip_sock::sockaddr_in
remote_power_on_capable	acpi.h	/^		unsigned remote_power_on_capable:1;$/;"	m	struct:__anon7::__anon8
req	block.c	/^	struct bio_req 	*req;$/;"	m	struct:sector	typeref:struct:sector::bio_req	file:
req	block.h	/^	struct	bio_req			*req;$/;"	m	struct:block_dev	typeref:struct:block_dev::bio_req
res	acpi.h	/^			uint8_t  res;$/;"	m	struct:MADTEntry::__anon1::__anon3
res	ahci.c	/^	int	res:1;$/;"	m	struct:_CAP	file:
res	ahci.c	/^	int res:1;$/;"	m	struct:CommandHeader	file:
res	ahci.c	/^	uint32_t	res:9;$/;"	m	struct:PRDT	file:
res	ahci.c	/^	uint8_t	res[32];$/;"	m	struct:CommandTable	file:
res	ahci.c	/^	unsigned res:20;$/;"	m	struct:SSTS	file:
res	ahci.c	/^	unsigned res:3;$/;"	m	struct:_PxCMD	file:
res	cpu.h	/^	unsigned	res:1;			\/\/ 11		CS:1			DS:0$/;"	m	struct:gdt_entry
res	failfs.h	/^	unsigned long	res[4];$/;"	m	struct:_ffs_data_block
res	failfs.h	/^	unsigned long	res[4];$/;"	m	struct:_ffs_file_block
res	failfs.h	/^	unsigned long	res[4];$/;"	m	struct:_ffs_free_block
res	kirkfs.h	/^	unsigned long	res[4];$/;"	m	struct:_kfs_data_block
res	kirkfs.h	/^	unsigned long	res[4];$/;"	m	struct:_kfs_file_block
res	tcp.h	/^	uint8_t   res;$/;"	m	struct:tcp_phdr
res	tcp.h	/^	unsigned    res:3;$/;"	m	struct:tcp_hdr
res0	acpi.h	/^		unsigned res0:10;$/;"	m	struct:__anon9::__anon10
res0	acpi.h	/^	uint8_t  res0;$/;"	m	struct:ACPIFADT
res0	ahci.c	/^	uint32_t	res0;$/;"	m	struct:PORT	file:
res0	cpu.h	/^		unsigned res0:8;$/;"	m	struct:__anon15::__anon16
res0	cpu.h	/^	uint8_t		res0;$/;"	m	struct:callgate_entry
res0	cpu.h	/^	unsigned	res0:5;$/;"	m	struct:idt_entry
res0	hpet.h	/^				unsigned res0:1;$/;"	m	struct:hpet::__anon46::__anon47::__anon48
res0	hpet.h	/^			unsigned res0:1;$/;"	m	struct:hpet::__anon42::__anon43
res0	ide.h	/^	uint16_t	res0;$/;"	m	struct:hdd_ident
res0	ide.h	/^	uint8_t	res0;$/;"	m	struct:PRD
res0	pci.h	/^	unsigned	res0:24;$/;"	m	struct:pcicfg
res0	pcnet.h	/^	unsigned  res0:4;$/;"	m	struct:pcnet_init_16
res0	pcnet.h	/^	unsigned res0:4;		\/\/ 16 - 19$/;"	m	struct:pcnet_init_32
res0	proc.h	/^	uint32_t	res0;$/;"	m	struct:tss_64
res00	cpu.h	/^	const uint32_t	res00 __attribute__((aligned(16)));$/;"	m	struct:lapic
res01	cpu.h	/^	const uint32_t	res01 __attribute__((aligned(16)));$/;"	m	struct:lapic
res1	acpi.h	/^	uint8_t  res1;$/;"	m	struct:ACPIFADT
res1	ahci.c	/^	uint8_t		res1[44];$/;"	m	struct:PORT	file:
res1	cpu.h	/^		unsigned res1:2;$/;"	m	struct:__anon15::__anon16
res1	cpu.h	/^	uint32_t	res1;$/;"	m	struct:idt_entry
res1	cpu.h	/^	uint8_t		res1;				\/\/  0- 7$/;"	m	struct:callgate_entry
res1	hpet.h	/^				unsigned res1:2;$/;"	m	struct:hpet::__anon46::__anon47::__anon48
res1	ide.h	/^	uint8_t	res1:7;$/;"	m	struct:PRD
res1	pci.h	/^	uint32_t	res1;$/;"	m	struct:pcicfg
res1	pcnet.h	/^	unsigned  res1:4;$/;"	m	struct:pcnet_init_16
res1	pcnet.h	/^	unsigned res1:4;		\/\/ 24 - 27$/;"	m	struct:pcnet_init_32
res1	pcnet.h	/^	unsigned res1;			\/\/ 16 - 23$/;"	m	struct:pcnet_rx_32
res1	pcnet.h	/^	unsigned res1;			\/\/ 16 - 23$/;"	m	struct:pcnet_tx_32
res1	proc.h	/^	uint64_t	res1;$/;"	m	struct:tss_64
res10	cpu.h	/^	const uint32_t	res10 __attribute__((aligned(16)));$/;"	m	struct:lapic
res11	cpu.h	/^	const uint32_t	res11 __attribute__((aligned(16)));$/;"	m	struct:lapic
res12	cpu.h	/^	const uint32_t	res12 __attribute__((aligned(16)));$/;"	m	struct:lapic
res13	cpu.h	/^	const uint32_t	res13 __attribute__((aligned(16)));$/;"	m	struct:lapic
res2	cpu.h	/^		unsigned res2:12;$/;"	m	struct:__anon15::__anon16
res2	cpu.h	/^	const uint32_t	res2[6];$/;"	m	struct:lapic
res2	cpu.h	/^	unsigned	res2:27;			\/\/ 13-31$/;"	m	struct:callgate_entry
res2	hpet.h	/^				unsigned res2:16;$/;"	m	struct:hpet::__anon46::__anon47::__anon48
res2	pcnet.h	/^	uint16_t res2;		\/\/ 24 - 31$/;"	m	struct:pcnet_init_32
res2	pcnet.h	/^	uint32_t res2;		\/\/ 00 - 31$/;"	m	struct:pcnet_rx_32
res2	proc.h	/^	uint64_t	res2;$/;"	m	struct:tss_64
res3	cpu.h	/^	const uint32_t	res3[4];$/;"	m	struct:lapic
res4	cpu.h	/^	uint32_t		res4;$/;"	m	struct:lapic
res4	proc.h	/^	uint16_t	res4;$/;"	m	struct:tss_64
reserved	acpi.h	/^		uint8_t  reserved;$/;"	m	struct:ACPIHPET::address_structure
reserved	acpi.h	/^		unsigned reserved:10;$/;"	m	struct:__anon7::__anon8
reserved	acpi.h	/^	uint8_t  reserved[3];$/;"	m	struct:RSDPDescriptor20
reserved	acpi.h	/^	unsigned reserved:1;$/;"	m	struct:ACPIHPET
reserved	hpet.h	/^			unsigned long reserved:62;$/;"	m	struct:hpet::__anon44::__anon45
reserved	ide.h	/^	uint16_t	reserved[127];$/;"	m	struct:hdd_ident
reserved50	ide.h	/^	uint16_t	reserved50;$/;"	m	struct:hdd_ident
reset_reg	acpi.h	/^	fadt_gas reset_reg;$/;"	m	struct:ACPIFADT
reset_reg_sup	acpi.h	/^		unsigned reset_reg_sup:1;$/;"	m	struct:__anon7::__anon8
reset_value	acpi.h	/^	uint8_t  reset_value;$/;"	m	struct:ACPIFADT
resolve_file	file.c	/^struct fsent *resolve_file(const char *const name, struct fsent *const cwd, int *const error)$/;"	f
rev	ide.h	/^	uint8_t	rev[8];$/;"	m	struct:hdd_ident
rev	pci.h	/^	unsigned	rev:8;$/;"	m	struct:pcicfg
rev_id	hpet.h	/^			unsigned rev_id:8;$/;"	m	struct:hpet::__anon42::__anon43
rflags	cpu.h	/^	uint64_t	rflags;					\/\/ 0xb8$/;"	m	struct:regs
rh	dev.h	/^	struct ring_head *rh;$/;"	m	struct:con_private	typeref:struct:con_private::ring_head
rh	dev.h	/^	struct ring_head *rh;$/;"	m	struct:ser_private	typeref:struct:ser_private::ring_head
ring_head	mem.h	/^struct ring_head {$/;"	s
ring_init	mem.c	/^struct ring_head *ring_init(const int length, void *const owner)$/;"	f
ring_read	mem.c	/^bool ring_read(struct ring_head *const rh, uint8_t *const byte)$/;"	f
ring_write	mem.c	/^bool ring_write(struct ring_head *const rh, const uint8_t byte)$/;"	f
rip	cpu.h	/^	uint64_t	rip;					\/\/ 0xa8$/;"	m	struct:regs
root	failfs.h	/^	ffs_file_block  root;$/;"	m	struct:failfs_private
root	file.h	/^	struct fsent        *root;$/;"	m	struct:mount	typeref:struct:mount::fsent
root	ramfs.h	/^	const struct ramfs_ino *root;$/;"	m	struct:ramfs_super	typeref:struct:ramfs_super::ramfs_ino
root_block	failfs.h	/^	unsigned short	root_block;		\/* block containing \/ *\/$/;"	m	struct:_ffs_superblock
root_block	kirkfs.h	/^	unsigned char	root_block;		\/* block containing \/ *\/$/;"	m	struct:_kfs_superblock
root_fsent	file.c	/^struct fsent *root_fsent;$/;"	v	typeref:struct:fsent
root_mnt	file.c	/^struct mount *root_mnt;$/;"	v	typeref:struct:mount
rrd	cpu.h	/^	const uint32_t	rrd __attribute__((aligned(16)));$/;"	m	struct:lapic
rsi	cpu.h	/^	uint64_t	rdi, rsi, rbp;			\/\/ 0x60$/;"	m	struct:regs
rsp	cpu.h	/^	uint64_t	rsp;					\/\/ 0xc0$/;"	m	struct:regs
rsp0	proc.h	/^	uint64_t	rsp0;$/;"	m	struct:tss_64
rsp1	proc.h	/^	uint64_t	rsp1;$/;"	m	struct:tss_64
rsp2	proc.h	/^	uint64_t	rsp2;$/;"	m	struct:tss_64
rst	tcp.h	/^	unsigned    rst:1;$/;"	m	struct:tcp_hdr
rtc_s4	acpi.h	/^		unsigned rtc_s4:1;$/;"	m	struct:__anon7::__anon8
rusage	proc.h	/^struct rusage {$/;"	s
rx	pcnet.h	/^	struct pcnet_rx_32		*rx;$/;"	m	struct:pcnet_private	typeref:struct:pcnet_private::pcnet_rx_32
rx	tcp.h	/^	uint64_t rx;		\/\/ bytes they've sent$/;"	m	struct:tcb
s	ide.h	/^	uint16_t c,h,s;$/;"	m	struct:disk_dev
s	ip.h	/^	} s;$/;"	m	struct:ip_sock	typeref:union:ip_sock::__anon27
s4_rtc_sts_valid	acpi.h	/^		unsigned s4_rtc_sts_valid:1;$/;"	m	struct:__anon7::__anon8
s4bios_req	acpi.h	/^	uint8_t  s4bios_req;$/;"	m	struct:ACPIFADT
s_addr	ip.h	/^	uint32_t s_addr;$/;"	m	struct:in_addr
s_cyl	disk.h	/^    uint16_t s_cyl:10;$/;"	m	struct:part
s_head	disk.h	/^    uint8_t  s_head;$/;"	m	struct:part
s_sector	disk.h	/^    uint8_t  s_sector:6;$/;"	m	struct:part
save_state	proc.c	/^static inline void save_state(struct task *const restrict old, const volatile struct regs *const restrict r)$/;"	f	file:
sc_tbl	syscall.c	/^voidfunc sc_tbl[MAX_SYSCALL];$/;"	v
sched_main	proc.c	/^void sched_main(volatile struct regs *const r)$/;"	f
sci_int	acpi.h	/^	uint16_t sci_int;$/;"	m	struct:ACPIFADT
scroll	dev.c	/^void scroll(void)$/;"	f
sdev	file.h	/^	} sdev;$/;"	m	struct:fileh	typeref:union:fileh::__anon22
sealed_case	acpi.h	/^		unsigned sealed_case:1;$/;"	m	struct:__anon7::__anon8
section	mboot_hdr.S	/^section	.text$/;"	l
sector	ahci.c	/^	unsigned sector:8;$/;"	m	struct:SIG	file:
sector	block.c	/^	uint64_t 		 sector;$/;"	m	struct:sector	file:
sector	block.c	/^struct sector {$/;"	s	file:
sector_data	block.c	/^	void                *sector_data;$/;"	m	struct:bio_req	file:
sectors	block.c	/^	struct sector       *sectors;$/;"	m	struct:bio_req	typeref:struct:bio_req::sector	file:
sectors	ide.h	/^	uint16_t	sectors;$/;"	m	struct:hdd_ident
sectors	mboot.h	/^	unsigned char  sectors;$/;"	m	struct:__anon32
security	ide.h	/^	uint16_t	security;$/;"	m	struct:hdd_ident
seek	file.h	/^	uint64_t	seek;		$/;"	m	struct:fileh
seg	elf64.h	/^	struct elf_segment *seg;$/;"	m	struct:elf_section	typeref:struct:elf_section::elf_segment
sel	cpu.h	/^	uint16_t	sel;$/;"	m	struct:callgate_entry
send	eth.h	/^	uint64_t (*send)(struct eth_dev *, char *, uint16_t, uint8_t dst[6]) __attribute__((nonnull));$/;"	m	struct:eth_ops
send_frame	pcnet.c	/^__attribute__((nonnull)) void send_frame(struct pcnet_tx_32 *b, uint8_t src[6], uint8_t dst[6],$/;"	f
send_lcp	ppp.c	/^uint64_t send_lcp(struct char_dev *cd, uint8_t *buf, uint16_t len)$/;"	f
send_q	tcp.h	/^	struct tcp_buf	*send_q;$/;"	m	struct:tcb	typeref:struct:tcb::tcp_buf
seq_num	tcp.h	/^	uint32_t  seq_num;$/;"	m	struct:tcp_hdr
ser_init	dev.c	/^__attribute__((nonnull)) static int ser_init(struct char_dev *dev)$/;"	f	file:
ser_pending	dev.c	/^__attribute__((nonnull)) static ssize_t ser_pending(struct char_dev *dev)$/;"	f	file:
ser_private	dev.h	/^struct ser_private {$/;"	s
ser_read	dev.c	/^__attribute__((nonnull)) static ssize_t ser_read(struct char_dev *const dev, char *const dest, const size_t len)$/;"	f	file:
ser_status	dev.c	/^void ser_status(uint16_t port)$/;"	f
ser_write	dev.c	/^__attribute__((nonnull)) static ssize_t ser_write(struct char_dev *dev, const char *src, size_t len)$/;"	f	file:
serial	ide.h	/^	uint8_t	serial[20];$/;"	m	struct:hdd_ident
serial_char_ops	dev.c	/^const struct char_ops serial_char_ops = {$/;"	v	typeref:struct:char_ops
set_cr0	cpu.h	/^static inline void set_cr0(uint64_t cr0)$/;"	f
set_cr3	cpu.h	/^__attribute__((nonnull)) static inline void set_cr3(const pt_t *pml4)$/;"	f
set_cr4	cpu.h	/^static inline void set_cr4(uint64_t cr4)$/;"	f
set_frame	frame.c	/^void set_frame(const uint8_t *const addr)$/;"	f
set_n_frames	frame.c	/^void set_n_frames(const uint8_t *const addr, const uint64_t number_of_frames)$/;"	f
set_pe	page.c	/^void set_pe(pe_t *pe, uint64_t virt, uint64_t phys, unsigned present, $/;"	f
set_pe_in_pt	page.c	/^void set_pe_in_pt(pt_t *pt, uint64_t virt, uint64_t phys, int present, int write, int user, int is_frame)$/;"	f
setup_gdt	init.c	/^static inline void setup_gdt(void)$/;"	f	file:
setup_ldt	init.c	/^static inline void setup_ldt(void)$/;"	f	file:
setup_mem	init.c	/^__attribute__((nonnull)) static void setup_mem(const unsigned long magic, const multiboot_info_t *restrict const mbi)$/;"	f	file:
setup_msr	init.c	/^static inline void setup_msr(void)$/;"	f	file:
setup_pic	init.c	/^static void setup_pic(void)$/;"	f	file:
setup_pit	init.c	/^static void setup_pit(const uint32_t freq)$/;"	f	file:
setup_serial	init.c	/^static void setup_serial(const uint16_t port, const uint32_t speed)$/;"	f	file:
setup_task	proc.c	/^void setup_task(struct task *const tsk, const uint64_t rip, const int type, $/;"	f
setup_tsc	dev.c	/^void setup_tsc(void)$/;"	f
setup_tss	init.c	/^static inline void setup_tss(void)$/;"	f	file:
setup_vga	init.c	/^void setup_vga(void)$/;"	f
sh	elf64.h	/^	struct	elf_section *sh;$/;"	m	struct:elf	typeref:struct:elf::elf_section
sh_addr	elf64.h	/^	uint64_t	sh_addr;$/;"	m	struct:__anon21
sh_addrinfo	elf64.h	/^	uint64_t	sh_addrinfo;$/;"	m	struct:__anon21
sh_entsize	elf64.h	/^	uint64_t	sh_entsize;$/;"	m	struct:__anon21
sh_flags	elf64.h	/^	uint64_t	sh_flags;$/;"	m	struct:__anon21
sh_info	elf64.h	/^	uint32_t	sh_info;$/;"	m	struct:__anon21
sh_link	elf64.h	/^	uint32_t	sh_link;$/;"	m	struct:__anon21
sh_name	elf64.h	/^	uint32_t	sh_name;$/;"	m	struct:__anon21
sh_offset	elf64.h	/^	uint64_t	sh_offset;$/;"	m	struct:__anon21
sh_size	elf64.h	/^	uint64_t	sh_size;$/;"	m	struct:__anon21
sh_type	elf64.h	/^	uint32_t	sh_type;$/;"	m	struct:__anon21
shift	dev.c	/^bool shift = false, alt = false, ctrl = false;$/;"	v
sibling	file.h	/^	struct fsent *sibling;  \/* The next entry in this directory                 *\/$/;"	m	struct:fsent	typeref:struct:fsent::fsent
sibling_ino	file.h	/^	ino_t	sibling_ino;$/;"	m	struct:fsent
sign_extend	page.h	/^	unsigned	sign_extend:16;$/;"	m	struct:__anon33
sign_extend	page.h	/^	unsigned	sign_extend:16;$/;"	m	struct:__anon34
sign_extend	page.h	/^	unsigned	sign_extend:16;$/;"	m	struct:__anon35
sin_addr	ip.h	/^	struct in_addr sin_addr;$/;"	m	struct:sockaddr_in	typeref:struct:sockaddr_in::in_addr
sin_family	ip.h	/^	uint16_t 	sin_family;$/;"	m	struct:sockaddr_in
sin_port	ip.h	/^	uint16_t	sin_port;$/;"	m	struct:sockaddr_in
single_pic	init.c	/^		unsigned single_pic:1;$/;"	m	struct:__anon23::__anon24	file:
sivr	cpu.h	/^	uint32_t		sivr __attribute__((aligned(16)));$/;"	m	struct:lapic
size	failfs.h	/^	unsigned long   size;			\/* directories are 0 *\/$/;"	m	struct:_ffs_file_block
size	mboot.h	/^	unsigned int   size;$/;"	m	struct:__anon32
size	mboot.h	/^	unsigned int size;$/;"	m	struct:memory_map
size_cap	hpet.h	/^				unsigned size_cap:1;$/;"	m	struct:hpet::__anon46::__anon47::__anon48
size_t	klibc.h	/^typedef	unsigned long	size_t;$/;"	t
size_t	libc.h	/^typedef unsigned long	size_t;$/;"	t
sleep_control_reg	acpi.h	/^	fadt_gas sleep_control_reg;$/;"	m	struct:ACPIFADT
sleep_status_reg	acpi.h	/^	fadt_gas sleep_status_reg;$/;"	m	struct:ACPIFADT
slip_init	slip.c	/^uint64_t slip_init(struct net_dev *nd, void *phys, int type, $/;"	f
slip_init_sock	slip.c	/^uint64_t slip_init_sock(struct fileh *fh, struct net_dev *nd)$/;"	f
slip_net_ops	slip.c	/^struct net_ops slip_net_ops = {$/;"	v	typeref:struct:net_ops
slip_private	slip.h	/^struct slip_private {$/;"	s
slip_process	slip.c	/^uint64_t slip_process(struct net_dev *nd)$/;"	f
slip_recv_packet	slip.c	/^uint64_t slip_recv_packet(char *p, uint64_t len, struct char_dev *cd)$/;"	f
slip_send_packet	slip.c	/^uint64_t slip_send_packet(const char *p, uint64_t len, struct char_dev *cd)$/;"	f
slip_write	slip.c	/^uint64_t slip_write(struct fileh *fh, struct net_dev *nd, char *src, uint64_t len,$/;"	f
slp_button	acpi.h	/^		unsigned slp_button:1;$/;"	m	struct:__anon7::__anon8
smi_cmd	acpi.h	/^	uint32_t smi_cmd;$/;"	m	struct:ACPIFADT
sock	tcp.h	/^	struct fileh	*sock;$/;"	m	struct:tcb	typeref:struct:tcb::fileh
sockaddr_in	ip.h	/^struct sockaddr_in {$/;"	s
socklen_t	klibc.h	/^typedef unsigned int    socklen_t;$/;"	t
spd	ahci.c	/^	unsigned spd:4;$/;"	m	struct:SSTS	file:
special	ramfs.h	/^	mode_t special;$/;"	m	struct:ramfs_ino
special_nested_mode	init.c	/^		unsigned special_nested_mode:1;$/;"	m	struct:__anon25::__anon26	file:
spin_lock	cpu.c	/^void spin_lock(int *lock)$/;"	f
spin_unlock	cpu.c	/^void spin_unlock(int *lock)$/;"	f
src	acpi.h	/^		} src __attribute__((packed));$/;"	m	union:MADTEntry::__anon1	typeref:struct:MADTEntry::__anon1::__anon4
src	ip.h	/^	uint32_t src;$/;"	m	struct:ip_hdr
src	pcnet.c	/^	uint8_t	src[6];$/;"	m	struct:eth_frame	file:
src	tcp.h	/^	uint32_t  src;$/;"	m	struct:tcp_phdr
src	tcp.h	/^	uint32_t src;		\/\/ our IP$/;"	m	struct:tcb
src_ack	tcp.h	/^	uint32_t src_ack; \/\/ their ack of us$/;"	m	struct:tcb
src_port	tcp.h	/^	uint16_t  src_port;$/;"	m	struct:tcp_hdr
src_port	tcp.h	/^	uint16_t src_port;	\/\/ our port$/;"	m	struct:tcb
src_seq	tcp.h	/^	uint32_t src_seq; \/\/ our initial seq$/;"	m	struct:tcb
srcdir	Makefile	/^srcdir	:= .$/;"	m
ss	cpu.h	/^	uint64_t	ss;						\/\/ 0xc8$/;"	m	struct:regs
ssize_t	klibc.h	/^typedef long			ssize_t;$/;"	t
ssize_t	libc.h	/^typedef long			ssize_t;$/;"	t
st_atime	file.h	/^	time_t		st_atime;$/;"	m	struct:inode
st_blksize	file.h	/^	blksize_t	st_blksize;$/;"	m	struct:inode
st_blocks	file.h	/^	blkcnt_t	st_blocks;$/;"	m	struct:inode
st_ctime	file.h	/^	time_t		st_ctime;$/;"	m	struct:inode
st_dev	file.h	/^	dev_t		st_dev;$/;"	m	struct:inode
st_gid	file.h	/^	gid_t		st_gid;$/;"	m	struct:inode
st_ino	file.h	/^	ino_t		st_ino;$/;"	m	struct:inode
st_mode	file.h	/^	mode_t		st_mode;$/;"	m	struct:inode
st_mtime	file.h	/^	time_t		st_mtime;$/;"	m	struct:inode
st_nlink	file.h	/^	nlink_t		st_nlink;$/;"	m	struct:inode
st_rdev	file.h	/^	dev_t		st_rdev;$/;"	m	struct:inode
st_size	file.h	/^	off_t		st_size;$/;"	m	struct:inode
st_uid	file.h	/^	uid_t		st_uid;$/;"	m	struct:inode
stack_end	proc.h	/^	void	*stack_end;			\/\/ top of the stack$/;"	m	struct:task
stack_start	proc.h	/^	void	*stack_start;		\/\/ bottom of the stack$/;"	m	struct:task
stacksave	proc.h	/^		void	*stacksave;					\/\/ 0xd0$/;"	m	struct:task
state	ip.h	/^	uint64_t state;$/;"	m	struct:ip_sock
state	net.h	/^	uint16_t			state;$/;"	m	struct:net_dev
state	proc.h	/^	int		 state;$/;"	m	struct:task
state	tcp.h	/^	uint32_t state;$/;"	m	struct:tcb
state_names	proc.c	/^const char *const state_names[STATE_NUM] = {$/;"	v
status_reg	pci.h	/^	uint16_t	status_reg;$/;"	m	struct:pcicfg
stderr	crt0.c	/^FILE *stdin, *stdout, *stderr;$/;"	v
stdin	crt0.c	/^FILE *stdin, *stdout, *stderr;$/;"	v
stdout	crt0.c	/^FILE *stdin, *stdout, *stderr;$/;"	v
stepping	cpu.h	/^	uint8_t	stepping;$/;"	m	struct:cpu
sti	cpu.h	7;"	d
strchr	klibc.c	/^__attribute__((nonnull)) char *strchr(const char *const s, const int c)$/;"	f
strcmp	klibc.c	/^__attribute__((nonnull)) int strcmp(const char *const a, const char *const b)$/;"	f
strcpy	klibc.c	/^__attribute__((nonnull)) char *strcpy(char *const dest, const char *const src)$/;"	f
strdup	klibc.c	/^__attribute__((nonnull)) char *strdup(const char *const s)$/;"	f
strerror	klibc.c	/^const char *strerror(const int ec)$/;"	f
strlen	klibc.c	/^__attribute__((nonnull)) size_t strlen(const char *const string)$/;"	f
strlen	libc.c	/^size_t strlen(const char *str)$/;"	f
strncmp	klibc.c	/^__attribute__((nonnull)) int strncmp(const char *const a, const char *const b, const uint64_t length)$/;"	f
strncpy	klibc.c	/^__attribute__((nonnull)) char *strncpy(char *const dest, const char *const source, const unsigned long cnt)$/;"	f
strnlen	klibc.c	/^__attribute__((nonnull)) size_t strnlen(const char *const s, const size_t maxlen)$/;"	f
strtok_r	klibc.c	/^__attribute__((nonnull(2,3))) char *strtok_r(char *const str, const char *const delim, char **saveptr)$/;"	f
sub_id	pci.h	/^	uint16_t	sub_id;$/;"	m	struct:pcicfg
sub_vendor_id	pci.h	/^	uint16_t	sub_vendor_id;$/;"	m	struct:pcicfg
subclass	pci.h	/^	uint8_t	subclass;$/;"	m	struct:pcicfg
super	failfs.h	/^	ffs_superblock  super;$/;"	m	struct:failfs_private
super	file.h	/^	void                *super;$/;"	m	struct:mount
switch_to	proc.c	/^static inline void switch_to(const struct task *const restrict new_tsk, volatile struct regs *const restrict r)$/;"	f	file:
syms	dummy-syms.c	/^struct symtable syms[] = {$/;"	v	typeref:struct:symtable
symtable	symtable.h	/^struct symtable {$/;"	s
syn	tcp.h	/^	unsigned    syn:1;$/;"	m	struct:tcp_hdr
sync_free_block	failfs.c	/^static int sync_free_block(const struct failfs_private *const p, struct block_dev *const dev)$/;"	f	file:
sync_fsent	file.h	/^	int (*sync_fsent)(struct fsent *, int       )__attribute__((nonnull));$/;"	m	struct:fs_ops
sync_inode	file.h	/^	int (*sync_inode)(struct inode *, ino_t, int)__attribute__((nonnull));$/;"	m	struct:fs_ops
sys_accept	file.c	/^int sys_accept(const int fd, struct sockaddr *const sa, socklen_t *const len)$/;"	f
sys_arch_prctl	syscall.c	/^int sys_arch_prctl(int code, unsigned long addr)$/;"	f
sys_bind	file.c	/^int sys_bind(const int fd, struct sockaddr *const sa, const socklen_t len)$/;"	f
sys_brk	syscall.c	/^long sys_brk(void *const brk)$/;"	f
sys_close	file.c	/^int sys_close(const int fd)$/;"	f
sys_creat	file.c	/^int sys_creat(const char *pathname, const mode_t mode)$/;"	f
sys_execve	proc.c	/^int sys_execve(const char *const file, const char *const argv[], const char *const envp[])$/;"	f
sys_exit	proc.c	/^void sys_exit(const int status)$/;"	f
sys_exit_group	proc.c	/^void sys_exit_group(const int status)$/;"	f
sys_fork	proc.c	/^pid_t sys_fork(void)$/;"	f
sys_getegid	proc.c	/^uid_t sys_getegid(void)$/;"	f
sys_geteuid	proc.c	/^uid_t sys_geteuid(void)$/;"	f
sys_getgid	proc.c	/^uid_t sys_getgid(void)$/;"	f
sys_getpid	syscall.c	/^pid_t sys_getpid(void)$/;"	f
sys_getppid	syscall.c	/^pid_t sys_getppid(void)$/;"	f
sys_gettid	syscall.c	/^pid_t sys_gettid(void)$/;"	f
sys_getuid	proc.c	/^uid_t sys_getuid(void)$/;"	f
sys_ioctl	syscall.c	/^long sys_ioctl(unsigned int fd, unsigned int cmd, unsigned long arg)$/;"	f
sys_kill	syscall.c	/^long sys_kill(const pid_t pid, const int sig)$/;"	f
sys_kludge	syscall.c	/^long sys_kludge()$/;"	f
sys_listen	file.c	/^int sys_listen(const int fd, const int listen)$/;"	f
sys_lseek	file.c	/^off_t sys_lseek(const int fd, const off_t offset, const int whence)$/;"	f
sys_mkdir	file.c	/^int sys_mkdir(const char *const pathname, mode_t mode)$/;"	f
sys_open	file.c	/^int sys_open(const char *const name, const int flags, const mode_t mode)$/;"	f
sys_pause	syscall.c	/^long sys_pause()$/;"	f
sys_read	file.c	/^ssize_t sys_read(const int fd, void *const data, const size_t len)$/;"	f
sys_socket	file.c	/^int sys_socket(const int family, const int type, const int protocol)$/;"	f
sys_time	cpu.c	/^time_t sys_time(void *const tloc)$/;"	f
sys_unimp	syscall.c	/^long sys_unimp(void)$/;"	f
sys_wait4	proc.c	/^pid_t sys_wait4(pid_t pid, int *status, int options, struct rusage *rusage)$/;"	f
sys_write	file.c	/^ssize_t sys_write(const int fd, const void *const data, const size_t len)$/;"	f
syscall_csss	cpu.h	/^	uint16_t	syscall_csss;$/;"	m	struct:_STAR
syscall_eip	cpu.h	/^	uint32_t	syscall_eip;$/;"	m	struct:_STAR
syscall_init	syscall.c	/^void syscall_init(void)$/;"	f
syscall_rflags	proc.h	/^		uint64_t	syscall_rflags;			\/\/ 0xf0$/;"	m	struct:task
syscall_rip	proc.h	/^		uint64_t	syscall_rip;			\/\/ 0xe8$/;"	m	struct:task
sysenter	intr.S	/^sysenter:$/;"	l
sysret_csss	cpu.h	/^	uint16_t	sysret_csss;$/;"	m	struct:_STAR
t_ramfs_ino	ramfs.c	/^const struct ramfs_ino t_ramfs_ino[] = {$/;"	v	typeref:struct:ramfs_ino
t_ramfs_super	ramfs.c	/^const struct ramfs_super t_ramfs_super = {$/;"	v	typeref:struct:ramfs_super
table_pe	page.h	/^	pe_t table_pe[PT_SIZE]; $/;"	m	union:__anon38
table_u64	page.h	/^	uint64_t table_u64[PT_SIZE];$/;"	m	union:__anon38
target	failfs.h	/^	unsigned int    target;			\/* target inode                 *\/$/;"	m	struct:_ffs_file_block
target	file.h	/^	struct inode *target;		\/* for soft links                     *\/$/;"	m	struct:inode	typeref:struct:inode::inode
target_high	cpu.h	/^	uint16_t	target_high;$/;"	m	struct:callgate_entry
target_high	cpu.h	/^	uint16_t	target_high;$/;"	m	struct:idt_entry
target_low	cpu.h	/^	uint16_t	target_low;$/;"	m	struct:callgate_entry
target_low	cpu.h	/^	uint16_t	target_low;$/;"	m	struct:idt_entry
target_sel	cpu.h	/^	uint16_t	target_sel;$/;"	m	struct:idt_entry
target_very_high	cpu.h	/^	uint32_t	target_very_high;$/;"	m	struct:callgate_entry
target_very_high	cpu.h	/^	uint32_t	target_very_high;$/;"	m	struct:idt_entry
task	file.h	/^	struct task		*task;	\/\/ NULL for kernel$/;"	m	struct:fileh	typeref:struct:fileh::task
task	proc.h	/^struct task {$/;"	s
task2	task2.h	/^const unsigned char task2[] = {$/;"	v
task2_len	task2.h	/^const unsigned int task2_len = 18688;$/;"	v
task_lock	proc.c	/^static int task_lock = 0;$/;"	v	file:
taskbm	frame.c	/^const struct task **taskbm = NULL;$/;"	v	typeref:struct:task
tasks	proc.c	/^struct task tasks[NUM_TASKS] __attribute__((aligned (16)));$/;"	v	typeref:struct:task
tcb	tcp.h	/^struct tcb {$/;"	s
tcbs	tcp.c	/^struct tcb *tcbs = NULL;$/;"	v	typeref:struct:tcb
tcp	ip.h	/^		struct tcb *tcp;$/;"	m	union:ip_sock::__anon27	typeref:struct:ip_sock::__anon27::tcb
tcp_accept	tcp.c	/^uint64_t tcp_accept(struct tcb *tcb, struct tcb *new_tcb,$/;"	f
tcp_buf	tcp.h	/^struct tcp_buf {$/;"	s
tcp_hdr	tcp.h	/^struct tcp_hdr {$/;"	s
tcp_init_socket	tcp.c	/^void tcp_init_socket(struct fileh *f)$/;"	f
tcp_length	tcp.h	/^	uint16_t  tcp_length;$/;"	m	struct:tcp_phdr
tcp_listen	tcp.c	/^uint64_t tcp_listen(struct tcb *tcb)$/;"	f
tcp_phdr	tcp.h	/^struct tcp_phdr {$/;"	s
tcp_recv	tcp.c	/^uint64_t tcp_recv(struct net_dev *nd, uint32_t src, uint32_t dst,$/;"	f
tcp_send	tcp.c	/^uint64_t tcp_send(struct tcb *tcb, int8_t *data, uint64_t len, uint64_t flags)$/;"	f
tcp_states	tcp.c	/^const char *tcp_states[TCP_STATES] = {$/;"	v
tdma	ide.h	/^	uint8_t	tdma;$/;"	m	struct:hdd_ident
test_frame	frame.c	/^bool test_frame(const uint8_t *const addr)$/;"	f
this_task	proc.h	/^		struct task *this_task;				\/\/ 0xe0$/;"	m	struct:task	typeref:struct:task::task
tick	cpu.c	/^uint64_t tick = 0;$/;"	v
tim_ccr	cpu.h	/^	const uint32_t	tim_ccr;$/;"	m	struct:lapic
tim_dcr	cpu.h	/^	uint32_t		tim_dcr;$/;"	m	struct:lapic
tim_icr	cpu.h	/^	uint32_t		tim_icr;$/;"	m	struct:lapic
time_t	klibc.h	/^typedef long			time_t;$/;"	t
timer_int	cpu.c	/^void timer_int(void)$/;"	f
timers	hpet.h	/^	} __attribute__((packed)) timers[];$/;"	m	struct:hpet	typeref:struct:hpet::__anon46
timeval	cpu.h	/^struct timeval {$/;"	s
tls	proc.h	/^	void    *tls;$/;"	m	struct:task
tmr	cpu.h	/^	const uint32_t	tmr[8]; \/* 256 bits *\/$/;"	m	struct:lapic
tmr_val_ext	acpi.h	/^		unsigned tmr_val_ext:1;$/;"	m	struct:__anon7::__anon8
to	frame.h	/^	uint8_t		*to;$/;"	m	struct:phys_mem_slot
tod	cpu.c	/^void tod(void)$/;"	f
top_of_mem	frame.c	/^unsigned long high_mem_start=0, top_of_mem=0, free_page_size=0, total_frames=0;$/;"	v
tos	ip.h	/^	uint8_t tos;$/;"	m	struct:ip_hdr
tot_sec	disk.h	/^    uint32_t tot_sec;$/;"	m	struct:part
total_frames	frame.c	/^unsigned long high_mem_start=0, top_of_mem=0, free_page_size=0, total_frames=0;$/;"	v
tpio	ide.h	/^	uint8_t	tpio;$/;"	m	struct:hdd_ident
tpr	cpu.h	/^	uint32_t		tpr __attribute__((aligned(16)));$/;"	m	struct:lapic
true	klibc.h	47;"	d
true	libc.h	/^	typedef enum { false, true } bool;$/;"	e	enum:__anon29
tss	proc.h	/^		struct regs tss;					\/\/ 0x00$/;"	m	struct:task	typeref:struct:task::regs
tss_64	proc.h	/^struct tss_64 {$/;"	s
tss_flush	cpu.c	/^void tss_flush(uint16_t tsss)$/;"	f
ttl	ip.h	/^	uint8_t ttl;$/;"	m	struct:ip_hdr
tv_sec	cpu.h	/^	uint64_t	tv_sec;$/;"	m	struct:timeval
tv_usec	cpu.h	/^	uint64_t	tv_usec;$/;"	m	struct:timeval
tx	pcnet.h	/^	struct pcnet_tx_32		*tx;$/;"	m	struct:pcnet_private	typeref:struct:pcnet_private::pcnet_tx_32
tx	tcp.h	/^	uint64_t tx;		\/\/ bytes we've sent$/;"	m	struct:tcb
type	acpi.h	/^	const uint8_t type;$/;"	m	struct:MADTEntry
type	cpu.h	/^	unsigned	type:4;				\/\/ see GDT_TYPE_*$/;"	m	struct:idt_entry
type	cpu.h	/^	unsigned	type:4;$/;"	m	struct:callgate_entry
type	cpu.h	/^	unsigned	type:4;$/;"	m	struct:gdt_sysdesc_64
type	dev.h	/^	uint64_t	type;$/;"	m	struct:dev
type	failfs.h	/^	unsigned short  type;$/;"	m	struct:_ffs_file_block
type	file.h	/^	int			type;$/;"	m	struct:fileh
type	ip.h	/^	uint8_t type;$/;"	m	struct:icmp_hdr
type	mboot.h	/^	unsigned int type;$/;"	m	struct:memory_map
type	net.h	/^	int				type;$/;"	m	struct:net_dev
type_cnf	hpet.h	/^				unsigned type_cnf:1;$/;"	m	struct:hpet::__anon46::__anon47::__anon48
u	mboot.h	/^	} u;$/;"	m	struct:multiboot_info	typeref:union:multiboot_info::__anon31
udp	ip.h	/^		uint64_t udp;$/;"	m	union:ip_sock::__anon27
uid	proc.h	/^	uid_t	 uid;$/;"	m	struct:task
uid_t	klibc.h	/^typedef unsigned		uid_t;$/;"	t
uint16_t	klibc.h	/^typedef unsigned short	uint16_t;$/;"	t
uint32_t	klibc.h	/^typedef unsigned int 	uint32_t;$/;"	t
uint64_t	klibc.h	/^typedef unsigned long 	uint64_t;$/;"	t
uint8_t	klibc.h	/^typedef unsigned char	uint8_t;$/;"	t
umount	file.h	/^	int (*umount)    (struct mount *) __attribute__((nonnull));$/;"	m	struct:fs_ops
un	pci.h	/^	} un;$/;"	m	struct:pcibar	typeref:union:pcibar::__anon39
unit	eth.h	/^	uint8_t	unit;$/;"	m	struct:eth_dev
unlock_frames	frame.c	/^static inline void unlock_frames(void)$/;"	f	file:
unlock_pool	mem.c	/^static inline void unlock_pool(const unsigned long pool)$/;"	f	file:
unlock_tasks	proc.c	/^void unlock_tasks(void)$/;"	f
update_arp_entry	arp.c	/^void update_arp_entry(uint32_t ip, uint8_t mac[6], struct net_dev *nd)$/;"	f
upper	net.h	/^	struct net_proto			*upper;$/;"	m	struct:net_dev	typeref:struct:net_dev::net_proto
urg	tcp.h	/^	unsigned    urg:1;$/;"	m	struct:tcp_hdr
urg_ptr	tcp.h	/^	uint16_t  urg_ptr;$/;"	m	struct:tcp_hdr
use_platform_clock	acpi.h	/^		unsigned use_platform_clock:1;$/;"	m	struct:__anon7::__anon8
user	page.h	/^	unsigned	user:1;			\/\/ 2$/;"	m	struct:__anon37
v_addr	page.h	/^} __attribute__((packed)) v_addr;$/;"	t	typeref:union:__anon36
va_arg	klibc.h	37;"	d
va_arg	libc.h	6;"	d
va_end	klibc.h	38;"	d
va_end	libc.h	7;"	d
va_list	klibc.h	/^typedef __builtin_va_list va_list;$/;"	t
va_list	libc.h	4;"	d
va_start	klibc.h	36;"	d
va_start	libc.h	5;"	d
val_set_cnf	hpet.h	/^				unsigned val_set_cnf:1;$/;"	m	struct:hpet::__anon46::__anon47::__anon48
vendor0	ide.h	/^	uint16_t	vendor0;$/;"	m	struct:hdd_ident
vendor1	ide.h	/^	uint16_t	vendor1;$/;"	m	struct:hdd_ident
vendor2	ide.h	/^	uint16_t	vendor2;$/;"	m	struct:hdd_ident
vendor3	ide.h	/^	uint8_t	vendor3;$/;"	m	struct:hdd_ident
vendor4	ide.h	/^	uint8_t	vendor4;$/;"	m	struct:hdd_ident
vendor5	ide.h	/^	uint8_t	vendor5;$/;"	m	struct:hdd_ident
vendor6	ide.h	/^	uint8_t	vendor6;$/;"	m	struct:hdd_ident
vendor_id	hpet.h	/^			unsigned vendor_id:16;$/;"	m	struct:hpet::__anon42::__anon43
vendor_id	pci.h	/^	uint16_t	vendor_id;			$/;"	m	struct:pcicfg
ver_reg	cpu.h	/^	uint32_t		ver_reg __attribute__((aligned(16)));$/;"	m	struct:lapic
version	ip.h	/^	unsigned version:4;$/;"	m	struct:ip_hdr
vfprintf	libc.c	/^void vfprintf(FILE *f, const char *format, va_list ap)$/;"	f
vga	dev.c	/^unsigned short *vga;$/;"	v
voidfunc	syscall.h	/^typedef void (* voidfunc)(void);$/;"	t
vprintf	klibc.c	/^__attribute__((nonnull)) int vprintf(const char *const fmt, va_list ap)$/;"	f
vprintf	libc.c	/^void vprintf(const char *format, va_list ap)$/;"	f
wait	libc.c	/^pid_t wait(int *status)$/;"	f
wait4	libc.c	/^pid_t wait4(pid_t pid, int *status, int options, struct rusage *rusage)$/;"	f
wbinvd	acpi.h	/^		unsigned wbinvd:1;$/;"	m	struct:__anon7::__anon8
wbinvd_flush	acpi.h	/^		unsigned wbinvd_flush:1;$/;"	m	struct:__anon7::__anon8
weight	ip.c	/^	uint32_t weight;$/;"	m	struct:ip4_route	file:
when	arp.h	/^	uint32_t	when;$/;"	m	struct:arp_entry
window	tcp.h	/^	uint16_t  window;$/;"	m	struct:tcp_hdr
window	tcp.h	/^	uint16_t window;$/;"	m	struct:tcb
write	char.h	/^	ssize_t (*write)(struct char_dev *, const char *, size_t)__attribute__((nonnull));$/;"	m	struct:char_ops
write	file.h	/^	ssize_t (*write) (struct fileh *, const char *, size_t, off_t)__attribute__((nonnull));$/;"	m	struct:fs_ops
write	libc.c	/^ssize_t write(int fd, const void *buf, size_t count)$/;"	f
write	mem.h	/^	int write;$/;"	m	struct:ring_head
write	net.h	/^	uint64_t (*write)(struct fileh *fh, struct net_dev *, char *, uint64_t, uint32_t dst_ip);$/;"	m	struct:net_ops
write	page.h	/^	unsigned	write:1;		\/\/ 1$/;"	m	struct:__anon37
writeBCR	pcnet.c	/^void writeBCR(uint32_t base, uint32_t index, uint32_t val)$/;"	f
writeCSR	pcnet.c	/^void writeCSR(uint32_t base, uint32_t index, uint32_t val)$/;"	f
write_msr	cpu.h	/^static inline void write_msr(const uint32_t msr, const uint64_t value)$/;"	f
write_one	block.h	/^	ssize_t (*write_one)(struct block_dev *d, const char *data, off_t sector)__attribute__((nonnull));$/;"	m	struct:block_ops
x_dsdt	acpi.h	/^	uint64_t x_dsdt;$/;"	m	struct:ACPIFADT
x_firmware_ctrl	acpi.h	/^	uint64_t x_firmware_ctrl;$/;"	m	struct:ACPIFADT
x_gpe0_blk	acpi.h	/^	fadt_gas x_gpe0_blk;$/;"	m	struct:ACPIFADT
x_gpe1_blk	acpi.h	/^	fadt_gas x_gpe1_blk;$/;"	m	struct:ACPIFADT
x_pm1a_cnt_blk	acpi.h	/^	fadt_gas x_pm1a_cnt_blk;$/;"	m	struct:ACPIFADT
x_pm1a_evt_blk	acpi.h	/^	fadt_gas x_pm1a_evt_blk;$/;"	m	struct:ACPIFADT
x_pm1b_cnt_blk	acpi.h	/^	fadt_gas x_pm1b_cnt_blk;$/;"	m	struct:ACPIFADT
x_pm1b_evt_blk	acpi.h	/^	fadt_gas x_pm1b_evt_blk;$/;"	m	struct:ACPIFADT
x_pm2_cnt_blk	acpi.h	/^	fadt_gas x_pm2_cnt_blk;$/;"	m	struct:ACPIFADT
x_pm_tmr_blk	acpi.h	/^	fadt_gas x_pm_tmr_blk;$/;"	m	struct:ACPIFADT
xsave	proc.h	/^		uint8_t		xsave[512];				\/\/ 0x100 - must be aligned$/;"	m	struct:task
zero	init.c	/^		unsigned zero:3;$/;"	m	struct:__anon25::__anon26	file:
zeroes	pcnet.h	/^	unsigned zeroes:4;$/;"	m	struct:pcnet_rx_32
zeros	klibc.c	/^static const char zeros[] = "0000000000000000";$/;"	v	file:
zeros	pcnet.h	/^	unsigned zeros:4;		\/\/ 12 - 15$/;"	m	struct:pcnet_rx_16
